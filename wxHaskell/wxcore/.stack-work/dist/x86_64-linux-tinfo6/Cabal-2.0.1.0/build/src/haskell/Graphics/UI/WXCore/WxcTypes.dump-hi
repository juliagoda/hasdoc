
==================== FINAL INTERFACE ====================
2019-03-12 00:51:49.060165354 UTC

interface wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv:Graphics.UI.WXCore.WxcTypes 8022
  interface hash: b55595d2fb92689981d2f518afdb887f
  ABI hash: f8150a7515ec794777d8973668412cd6
  export-list hash: 35230214772f3f671046abfe8276bfd1
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9298df64c1f4c3dc581c60113be34edf
  sig of: Nothing
  used TH splices: False
  where
exports:
  Foreign.C.String.withCString
  Foreign.C.String.withCWString
  Foreign.Marshal.Array.withArray
  Foreign.Marshal.Utils.fromBool
  Foreign.Marshal.Utils.toBool
  Graphics.UI.WXCore.WxcObject.objectCast
  Graphics.UI.WXCore.WxcObject.objectFinalize
  Graphics.UI.WXCore.WxcObject.objectFromPtr
  Graphics.UI.WXCore.WxcObject.objectIsManaged
  Graphics.UI.WXCore.WxcObject.objectIsNull
  Graphics.UI.WXCore.WxcObject.objectNoFinalize
  Graphics.UI.WXCore.WxcObject.objectNull
  Graphics.UI.WXCore.WxcObject.withObjectPtr
  Graphics.UI.WXCore.WxcTypes.colorAlpha
  Graphics.UI.WXCore.WxcTypes.colorBlue
  Graphics.UI.WXCore.WxcTypes.colorFromColour
  Graphics.UI.WXCore.WxcTypes.colorFromInt
  Graphics.UI.WXCore.WxcTypes.colorGreen
  Graphics.UI.WXCore.WxcTypes.colorIsOk
  Graphics.UI.WXCore.WxcTypes.colorOk
  Graphics.UI.WXCore.WxcTypes.colorRGB
  Graphics.UI.WXCore.WxcTypes.colorRGBA
  Graphics.UI.WXCore.WxcTypes.colorRed
  Graphics.UI.WXCore.WxcTypes.colourCreate
  Graphics.UI.WXCore.WxcTypes.colourFromColor
  Graphics.UI.WXCore.WxcTypes.colourSafeDelete
  Graphics.UI.WXCore.WxcTypes.fromCBool
  Graphics.UI.WXCore.WxcTypes.fromCChar
  Graphics.UI.WXCore.WxcTypes.fromCDouble
  Graphics.UI.WXCore.WxcTypes.fromCInt
  Graphics.UI.WXCore.WxcTypes.fromCIntPtr
  Graphics.UI.WXCore.WxcTypes.fromCPoint
  Graphics.UI.WXCore.WxcTypes.fromCPointDouble
  Graphics.UI.WXCore.WxcTypes.fromCRect
  Graphics.UI.WXCore.WxcTypes.fromCRectDouble
  Graphics.UI.WXCore.WxcTypes.fromCSize
  Graphics.UI.WXCore.WxcTypes.fromCSizeDouble
  Graphics.UI.WXCore.WxcTypes.fromCVector
  Graphics.UI.WXCore.WxcTypes.fromCVectorDouble
  Graphics.UI.WXCore.WxcTypes.fromColor
  Graphics.UI.WXCore.WxcTypes.intFromColor
  Graphics.UI.WXCore.WxcTypes.managedObjectFromPtr
  Graphics.UI.WXCore.WxcTypes.objectDelete
  Graphics.UI.WXCore.WxcTypes.point
  Graphics.UI.WXCore.WxcTypes.pointFromSize
  Graphics.UI.WXCore.WxcTypes.pointFromVec
  Graphics.UI.WXCore.WxcTypes.pointNull
  Graphics.UI.WXCore.WxcTypes.pointZero
  Graphics.UI.WXCore.WxcTypes.pt
  Graphics.UI.WXCore.WxcTypes.ptrCast
  Graphics.UI.WXCore.WxcTypes.ptrIsNull
  Graphics.UI.WXCore.WxcTypes.ptrNull
  Graphics.UI.WXCore.WxcTypes.rect
  Graphics.UI.WXCore.WxcTypes.rectBetween
  Graphics.UI.WXCore.WxcTypes.rectBottom
  Graphics.UI.WXCore.WxcTypes.rectBottomLeft
  Graphics.UI.WXCore.WxcTypes.rectBottomRight
  Graphics.UI.WXCore.WxcTypes.rectFromSize
  Graphics.UI.WXCore.WxcTypes.rectIsEmpty
  Graphics.UI.WXCore.WxcTypes.rectNull
  Graphics.UI.WXCore.WxcTypes.rectRight
  Graphics.UI.WXCore.WxcTypes.rectSize
  Graphics.UI.WXCore.WxcTypes.rectTopLeft
  Graphics.UI.WXCore.WxcTypes.rectTopRight
  Graphics.UI.WXCore.WxcTypes.rectZero
  Graphics.UI.WXCore.WxcTypes.rgb
  Graphics.UI.WXCore.WxcTypes.rgba
  Graphics.UI.WXCore.WxcTypes.sizeFromPoint
  Graphics.UI.WXCore.WxcTypes.sizeFromVec
  Graphics.UI.WXCore.WxcTypes.sizeNull
  Graphics.UI.WXCore.WxcTypes.sizeZero
  Graphics.UI.WXCore.WxcTypes.sz
  Graphics.UI.WXCore.WxcTypes.toCBool
  Graphics.UI.WXCore.WxcTypes.toCChar
  Graphics.UI.WXCore.WxcTypes.toCDouble
  Graphics.UI.WXCore.WxcTypes.toCDoublePointX
  Graphics.UI.WXCore.WxcTypes.toCDoublePointY
  Graphics.UI.WXCore.WxcTypes.toCDoubleRectH
  Graphics.UI.WXCore.WxcTypes.toCDoubleRectW
  Graphics.UI.WXCore.WxcTypes.toCDoubleRectX
  Graphics.UI.WXCore.WxcTypes.toCDoubleRectY
  Graphics.UI.WXCore.WxcTypes.toCDoubleSizeH
  Graphics.UI.WXCore.WxcTypes.toCDoubleSizeW
  Graphics.UI.WXCore.WxcTypes.toCDoubleVectorX
  Graphics.UI.WXCore.WxcTypes.toCDoubleVectorY
  Graphics.UI.WXCore.WxcTypes.toCFunPtr
  Graphics.UI.WXCore.WxcTypes.toCInt
  Graphics.UI.WXCore.WxcTypes.toCIntPointX
  Graphics.UI.WXCore.WxcTypes.toCIntPointY
  Graphics.UI.WXCore.WxcTypes.toCIntPtr
  Graphics.UI.WXCore.WxcTypes.toCIntRectH
  Graphics.UI.WXCore.WxcTypes.toCIntRectW
  Graphics.UI.WXCore.WxcTypes.toCIntRectX
  Graphics.UI.WXCore.WxcTypes.toCIntRectY
  Graphics.UI.WXCore.WxcTypes.toCIntSizeH
  Graphics.UI.WXCore.WxcTypes.toCIntSizeW
  Graphics.UI.WXCore.WxcTypes.toCIntVectorX
  Graphics.UI.WXCore.WxcTypes.toCIntVectorY
  Graphics.UI.WXCore.WxcTypes.toCWchar
  Graphics.UI.WXCore.WxcTypes.toColor
  Graphics.UI.WXCore.WxcTypes.treeItemFromInt
  Graphics.UI.WXCore.WxcTypes.treeItemInvalid
  Graphics.UI.WXCore.WxcTypes.treeItemIsOk
  Graphics.UI.WXCore.WxcTypes.vec
  Graphics.UI.WXCore.WxcTypes.vecFromPoint
  Graphics.UI.WXCore.WxcTypes.vecFromSize
  Graphics.UI.WXCore.WxcTypes.vecNull
  Graphics.UI.WXCore.WxcTypes.vecZero
  Graphics.UI.WXCore.WxcTypes.vector
  Graphics.UI.WXCore.WxcTypes.withArrayInt
  Graphics.UI.WXCore.WxcTypes.withArrayIntPtr
  Graphics.UI.WXCore.WxcTypes.withArrayIntPtrResult
  Graphics.UI.WXCore.WxcTypes.withArrayIntResult
  Graphics.UI.WXCore.WxcTypes.withArrayObject
  Graphics.UI.WXCore.WxcTypes.withArrayObjectResult
  Graphics.UI.WXCore.WxcTypes.withArrayString
  Graphics.UI.WXCore.WxcTypes.withArrayStringResult
  Graphics.UI.WXCore.WxcTypes.withArrayWString
  Graphics.UI.WXCore.WxcTypes.withArrayWStringResult
  Graphics.UI.WXCore.WxcTypes.withBoolResult
  Graphics.UI.WXCore.WxcTypes.withByteStringResult
  Graphics.UI.WXCore.WxcTypes.withCPoint
  Graphics.UI.WXCore.WxcTypes.withCPointDouble
  Graphics.UI.WXCore.WxcTypes.withCRect
  Graphics.UI.WXCore.WxcTypes.withCRectDouble
  Graphics.UI.WXCore.WxcTypes.withCSize
  Graphics.UI.WXCore.WxcTypes.withCSizeDouble
  Graphics.UI.WXCore.WxcTypes.withCVector
  Graphics.UI.WXCore.WxcTypes.withCVectorDouble
  Graphics.UI.WXCore.WxcTypes.withCharResult
  Graphics.UI.WXCore.WxcTypes.withColourPtr
  Graphics.UI.WXCore.WxcTypes.withColourRef
  Graphics.UI.WXCore.WxcTypes.withDoubleResult
  Graphics.UI.WXCore.WxcTypes.withIntPtrResult
  Graphics.UI.WXCore.WxcTypes.withIntResult
  Graphics.UI.WXCore.WxcTypes.withLazyByteStringResult
  Graphics.UI.WXCore.WxcTypes.withManagedBitmapResult
  Graphics.UI.WXCore.WxcTypes.withManagedBrushResult
  Graphics.UI.WXCore.WxcTypes.withManagedColourResult
  Graphics.UI.WXCore.WxcTypes.withManagedCursorResult
  Graphics.UI.WXCore.WxcTypes.withManagedDateTimeResult
  Graphics.UI.WXCore.WxcTypes.withManagedFontResult
  Graphics.UI.WXCore.WxcTypes.withManagedGridCellCoordsArrayResult
  Graphics.UI.WXCore.WxcTypes.withManagedIconResult
  Graphics.UI.WXCore.WxcTypes.withManagedObjectResult
  Graphics.UI.WXCore.WxcTypes.withManagedPenResult
  Graphics.UI.WXCore.WxcTypes.withManagedStringResult
  Graphics.UI.WXCore.WxcTypes.withManagedTreeItemIdResult
  Graphics.UI.WXCore.WxcTypes.withObjectRef
  Graphics.UI.WXCore.WxcTypes.withObjectResult
  Graphics.UI.WXCore.WxcTypes.withPointDoubleResult
  Graphics.UI.WXCore.WxcTypes.withPointResult
  Graphics.UI.WXCore.WxcTypes.withRectDoubleResult
  Graphics.UI.WXCore.WxcTypes.withRectResult
  Graphics.UI.WXCore.WxcTypes.withRefBitmap
  Graphics.UI.WXCore.WxcTypes.withRefBrush
  Graphics.UI.WXCore.WxcTypes.withRefColour
  Graphics.UI.WXCore.WxcTypes.withRefCursor
  Graphics.UI.WXCore.WxcTypes.withRefDateTime
  Graphics.UI.WXCore.WxcTypes.withRefFont
  Graphics.UI.WXCore.WxcTypes.withRefFontData
  Graphics.UI.WXCore.WxcTypes.withRefGridCellCoordsArray
  Graphics.UI.WXCore.WxcTypes.withRefIcon
  Graphics.UI.WXCore.WxcTypes.withRefImage
  Graphics.UI.WXCore.WxcTypes.withRefListItem
  Graphics.UI.WXCore.WxcTypes.withRefPageSetupDialogData
  Graphics.UI.WXCore.WxcTypes.withRefPen
  Graphics.UI.WXCore.WxcTypes.withRefPrintData
  Graphics.UI.WXCore.WxcTypes.withRefPrintDialogData
  Graphics.UI.WXCore.WxcTypes.withRefTreeItemId
  Graphics.UI.WXCore.WxcTypes.withSizeDoubleResult
  Graphics.UI.WXCore.WxcTypes.withSizeResult
  Graphics.UI.WXCore.WxcTypes.withStringPtr
  Graphics.UI.WXCore.WxcTypes.withStringRef
  Graphics.UI.WXCore.WxcTypes.withStringResult
  Graphics.UI.WXCore.WxcTypes.withTreeItemIdPtr
  Graphics.UI.WXCore.WxcTypes.withTreeItemIdRef
  Graphics.UI.WXCore.WxcTypes.withVectorDoubleResult
  Graphics.UI.WXCore.WxcTypes.withVectorResult
  Graphics.UI.WXCore.WxcTypes.withWStringResult
  Graphics.UI.WXCore.WxcTypes.withWxPointResult
  Graphics.UI.WXCore.WxcTypes.withWxRectPtr
  Graphics.UI.WXCore.WxcTypes.withWxRectResult
  Graphics.UI.WXCore.WxcTypes.withWxSizeResult
  Graphics.UI.WXCore.WxcTypes.withWxVectorResult
  Foreign.C.String.CString
  Foreign.C.String.CWString
  Foreign.C.Types.CBool{Foreign.C.Types.CBool}
  Foreign.C.Types.CChar
  Foreign.C.Types.CDouble{Foreign.C.Types.CDouble}
  Foreign.C.Types.CInt{Foreign.C.Types.CInt}
  Foreign.C.Types.CIntPtr
  Foreign.C.Types.CWchar{Foreign.C.Types.CWchar}
  Foreign.Ptr.IntPtr
  GHC.ForeignPtr.ForeignPtr
  GHC.Int.Int64
  GHC.Ptr.FunPtr
  GHC.Ptr.Ptr
  Graphics.UI.WXCore.WxcObject.Object
  Graphics.UI.WXCore.WxcTypes.Color{Graphics.UI.WXCore.WxcTypes.Color}
  Graphics.UI.WXCore.WxcTypes.EventId
  Graphics.UI.WXCore.WxcTypes.Id
  Graphics.UI.WXCore.WxcTypes.Point
  Graphics.UI.WXCore.WxcTypes.Point2{Graphics.UI.WXCore.WxcTypes.Point pointX pointY}
  Graphics.UI.WXCore.WxcTypes.Rect
  Graphics.UI.WXCore.WxcTypes.Rect2D{Graphics.UI.WXCore.WxcTypes.Rect rectHeight rectLeft rectTop rectWidth}
  Graphics.UI.WXCore.WxcTypes.Size
  Graphics.UI.WXCore.WxcTypes.Size2D{Graphics.UI.WXCore.WxcTypes.Size sizeH sizeW}
  Graphics.UI.WXCore.WxcTypes.Style
  Graphics.UI.WXCore.WxcTypes.TreeItem
  Graphics.UI.WXCore.WxcTypes.Vector
  Graphics.UI.WXCore.WxcTypes.Vector2{Graphics.UI.WXCore.WxcTypes.Vector vecX vecY}
  GHC.Word.Word8
  GHC.Types.Word
module dependencies: Graphics.UI.WXCore.WxcClassTypes
                     Graphics.UI.WXCore.WxcObject
package dependencies: array-0.5.2.0 base-4.10.1.0
                      bytestring-0.10.8.2 deepseq-1.4.3.0 ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Control.Exception c134ea327d158f2eebf26e12a1d4ad47
import  -/  base-4.10.1.0:Control.Exception.Base a0c09fb1722df56c4c26d548157007ca
import  -/  base-4.10.1.0:Data.Bits e0790a03e1e51e2d053ee3f563937f85
import  -/  base-4.10.1.0:Data.Dynamic 9a58ca57c72eb901cd7ba324838897ae
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Data.Int e234a0a6d2a21ac9385a90eec01cbcae
import  -/  base-4.10.1.0:Data.Ix cdc42744a30c9e14e40c9c7b97c4020c
import  -/  base-4.10.1.0:Data.Traversable 60ea7c2973e63de7d08d5d0269f96e67
import  -/  base-4.10.1.0:Data.Typeable.Internal b31684019ac02e3213b270a8482ac844
import  -/  base-4.10.1.0:Data.Word c4e948c409792d945106eb5269810128
import  -/  base-4.10.1.0:Debug.Trace d6b92a67d41f66511d3d35c0713fec79
import  -/  base-4.10.1.0:Foreign.C f34e348e91247a99e0eb5a41b6102351
import  -/  base-4.10.1.0:Foreign.C.String 77a609cc1f3a7c50c3bbf1134c105acc
import  -/  base-4.10.1.0:Foreign.C.Types 936c0db027291520097b61fd8686710a
import  -/  base-4.10.1.0:Foreign.ForeignPtr 63e92ad0ab9d449280d12705f0d0ee84
import  -/  base-4.10.1.0:Foreign.Marshal.Alloc e54e11de29230f1b8b6bcaebfff7f8a0
import  -/  base-4.10.1.0:Foreign.Marshal.Array a92cd8977f9b41078050a347c926171a
import  -/  base-4.10.1.0:Foreign.Marshal.Utils c952eb45e71e8a59e3eae4bcacaa1ffc
import  -/  base-4.10.1.0:Foreign.Ptr 2bbd57f0acbb5d9a11c58f4f5d32b343
import  -/  base-4.10.1.0:Foreign.Storable c463817097bdd1b4c7f7c325680a9964
import  -/  base-4.10.1.0:GHC.Arr cf4349fa30e5f82fdb67fa740927bec8
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Enum 5a1ba50c23f92f669e01f8955f202337
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.ForeignPtr a99df7536002ec378727be8f9ffc2ab8
import  -/  base-4.10.1.0:GHC.IO.Exception c72758923693d771268bed5d3d52443d
import  -/  base-4.10.1.0:GHC.Int f3b679d79c8ad65bf2b736aa9628303f
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Ptr f6ff03f1ebd95f085d6be4b1fdb71ff8
import  -/  base-4.10.1.0:GHC.Read 0abfbe8a9b13202e313efc3bc2f2a3e6
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:Text.ParserCombinators.ReadPrec 043a8dc96e82690dac5a09fb8e44e9bc
import  -/  base-4.10.1.0:Text.Read.Lex aff0420c14a3e1f3bb0ee26cd0646682
import  -/  bytestring-0.10.8.2:Data.ByteString 85ba2d590aae1a6d189ceb9a0f58e145
import  -/  bytestring-0.10.8.2:Data.ByteString.Char8 ad3bf7657730adeac35cbb427299ea44
import  -/  bytestring-0.10.8.2:Data.ByteString.Internal e154f5ecf6a3cd0a27df93e86ed481d7
import  -/  bytestring-0.10.8.2:Data.ByteString.Lazy c2ef93593c27a83e579db501fde77cf6
import  -/  bytestring-0.10.8.2:Data.ByteString.Lazy.Char8 d8a0ad0c6ad85bb7f313f5b248fda90d
import  -/  bytestring-0.10.8.2:Data.ByteString.Lazy.Internal 9d45fc36ed783c7051cebebd13e7712f
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  Graphics.UI.WXCore.WxcClassTypes 9c9423c6896381a8af5d2e66a2e9cb8d
  exports: 8d666e317e915b7b5e4fead5de18176c
  Bitmap 21724fc9d794d2a2a798f3f01a280e77
  Brush 4f5c7de0151bd0de09a5f982a29fdb47
  Colour 8bb8a3c1da7ec626fa9216fb6b847545
  Cursor 303d8b4badbbcf9a7ab7bd6e47cdab85
  DateTime 87ba83fc7c288f53ac0ee76a00c735ad
  Font 13df7189f793f2c207e7755034330fe3
  FontData ecfc7d263d1116ee8a6a90fe9a9ac00d
  GridCellCoordsArray 2315508e9e86a9c827747784f40fffcb
  Icon d42d05271b80873980bd441ac3918444
  Image 0a45ee54de2614cfba18eb1d11dbd8f9
  ListItem 16bb12a8518b9840909b466319a2c40d
  PageSetupDialogData e2c21a51784241af42a95293e067b419
  Pen 625d088ea2c68bb1d080dc17f7141ff6
  PrintData e109710c7f6eae0ac4243bafa0bfdedf
  PrintDialogData 5d19fd4213472bf53b88f145296bebbc
  TBitmap b34e6debbd1ffed6925f7672a39812f3
  TBrush a16ca2bde2af976c728f3f1ca955f18d
  TColour 24a5a6620484739ab8cf938e03f83426
  TCursor b6e1dc51606d83a7d74074f500d25080
  TDateTime 248b90cba32b73529d4fee28da4b87e0
  TFont 5941914df69b521c8567fa655d417ddd
  TFontData af44f52a7df5583c0b36e110a4c38932
  TGridCellCoordsArray 7b7e3a715c06cbf92b8a3e394eb2bc31
  TIcon 73ed1578722c8fc5bc6cf142fa1dca1f
  TImage 1f10c4f51a12870cac5d141f52ad0ec5
  TListItem b816378f6b2fbc98009380e2cdefa6a4
  TPageSetupDialogData eeba6592dd8fecb18bde1b39a8319d4e
  TPen 2b039a2604caf0df0d4e313b09aa64ce
  TPrintData d074f090bdfdfc4d7dbae762a9440198
  TPrintDialogData 2567ca23898f61802e509f841da0a9bb
  TTreeItemId b4a17d4b8014e508d75a58be2674eb8f
  TWxObject 849327fb4e516694a1db29312bf80e3c
  TWxPoint d33dc200286706c839e77161eda0cb0e
  TWxRect 85e58306e63542412fb8d409a48a84ef
  TWxSize 7e46cc4a8ce9abbad5be71b67e342874
  TWxString 858f8f43ccb8fd5b96f430551953da81
  WxObject 31bd73f3b1ce969f711f5f2b3382ef00
import  -/  Graphics.UI.WXCore.WxcObject b4b294b447c8b27e29c7c0c2665dd4c1
  exports: f7c9265e3551664d0a1ca6468932e97c
  ManagedPtr 735ccd258513bdc87f0547cba0bf9dcc
  Object 1483ec3b657c24a0dfc0060e847e707f
  objectCast a390d74bfd426f87847c014cc47cf571
  objectFinalize 3da1d4bcc303b231b6bae6568867e64d
  objectFromManagedPtr a74623e7e2370c80843222db19787249
  objectFromPtr 48c99fbf6b8fa95bebfa6aa84f3935ec
  objectIsManaged 9f56c727c4851e807fb32a3075791775
  objectIsNull bd17ece1d9be96d282d72c9836dc56d8
  objectNoFinalize d57275d444f7aabd4e88282ebc03b385
  objectNull 61b0977b84e26d6c1b9cb58d452aff42
  withObjectPtr cf8bb358aa33adffff16b81ebfe0052b
addDependentFile "/home/juliagoda/Dokumenty/PDF/Praca_dyplomowa/Projekt/Kod/hasdoc/.stack-work/install/x86_64-linux-tinfo6/lts-11.9/8.2.2/lib/x86_64-linux-ghc-8.2.2/wxc-0.93.0.0-AIDNDTUZGVXJmeh6uJrj4n/include/wxc_def.h"
addDependentFile "/home/juliagoda/.stack/programs/x86_64-linux/ghc-tinfo6-8.2.2/lib/ghc-8.2.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux-tinfo6/Cabal-2.0.1.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
e71f0c936211418315079628f71ffb46
  $fEqColor :: GHC.Classes.Eq Graphics.UI.WXCore.WxcTypes.Color
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UI.WXCore.WxcTypes.Color
                  GHC.Classes.eqWord
                    `cast`
                  (Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])
                   ->_R Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])
                   ->_R <GHC.Types.Bool>_R)
                  GHC.Classes.neWord
                    `cast`
                  (Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])
                   ->_R Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])
                   ->_R <GHC.Types.Bool>_R) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fEqPoint2 ::
    (GHC.Classes.Eq a, GHC.Num.Num a) =>
    GHC.Classes.Eq (Graphics.UI.WXCore.WxcTypes.Point2 a)
  DFunId
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)><L,A>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Eq a) (v1 :: GHC.Num.Num a).
                  @ (Graphics.UI.WXCore.WxcTypes.Point2 a)
                  (Graphics.UI.WXCore.WxcTypes.$fEqPoint2_$c== @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fEqPoint2_$c/= @ a v v1) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fEqPoint2_$c/= ::
    (GHC.Classes.Eq a, GHC.Num.Num a) =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(C(C(S))L),U(C(C1(U)),A)><L,A><S(SS),1*U(U,U)><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Classes.Eq a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Point ww1 ww2 ->
                 case w3 of ww3 { Graphics.UI.WXCore.WxcTypes.Point ww4 ww5 ->
                 case GHC.Classes.== @ a w ww1 ww4 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Classes.== @ a w ww2 ww5 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fEqPoint2_$c== ::
    (GHC.Classes.Eq a, GHC.Num.Num a) =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(C(C(S))L),U(C(C1(U)),A)><L,A><S(SS),1*U(U,U)><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Classes.Eq a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Point ww1 ww2 ->
                 case w3 of ww3 { Graphics.UI.WXCore.WxcTypes.Point ww4 ww5 ->
                 case GHC.Classes.== @ a w ww1 ww4 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Classes.== @ a w ww2 ww5 } } }) -}
e37b272a29e270a1ca7a95ad272a3ee3
  $fEqPoint2_$s$c== ::
    Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int
    -> Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)S),1*U(U(U),U(U))><S(S(S)S),1*U(U(U),U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                   (ds1 :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Point a1 a2 ->
                 case ds1 of wild1 { Graphics.UI.WXCore.WxcTypes.Point b1 b2 ->
                 case a1 of wild2 { GHC.Types.I# x ->
                 case b1 of wild3 { GHC.Types.I# y ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# x y) of wild4 {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case a2 of wild5 { GHC.Types.I# x1 ->
                      case b2 of wild6 { GHC.Types.I# y1 ->
                      GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# x1 y1) } } } } } } }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fEqPoint2_$s$fEqPoint2 ::
    GHC.Classes.Eq (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                  (\ (ds :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                     (ds1 :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                   case ds of wild { Graphics.UI.WXCore.WxcTypes.Point a1 a2 ->
                   case ds1 of wild1 { Graphics.UI.WXCore.WxcTypes.Point b1 b2 ->
                   case GHC.Classes.eqInt a1 b1 of wild2 {
                     GHC.Types.False -> GHC.Types.False
                     GHC.Types.True -> GHC.Classes.eqInt a2 b2 } } })
                  (\ (a :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                     (b :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                   case a of wild { Graphics.UI.WXCore.WxcTypes.Point a1 a2 ->
                   case b of wild1 { Graphics.UI.WXCore.WxcTypes.Point b1 b2 ->
                   case GHC.Classes.eqInt a1 b1 of wild2 {
                     GHC.Types.False -> GHC.Types.True
                     GHC.Types.True
                     -> case GHC.Classes.eqInt a2 b2 of wild3 {
                          GHC.Types.False -> GHC.Types.True
                          GHC.Types.True -> GHC.Types.False } } } }) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $fEqRect2D ::
    (GHC.Classes.Eq a, GHC.Num.Num a) =>
    GHC.Classes.Eq (Graphics.UI.WXCore.WxcTypes.Rect2D a)
  DFunId
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)><L,A>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Eq a) (v1 :: GHC.Num.Num a).
                  @ (Graphics.UI.WXCore.WxcTypes.Rect2D a)
                  (Graphics.UI.WXCore.WxcTypes.$fEqRect2D_$c== @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fEqRect2D_$c/= @ a v v1) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $fEqRect2D_$c/= ::
    (GHC.Classes.Eq a, GHC.Num.Num a) =>
    Graphics.UI.WXCore.WxcTypes.Rect2D a
    -> Graphics.UI.WXCore.WxcTypes.Rect2D a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(C(C(S))L),U(C(C1(U)),A)><L,A><S(SSSS),1*U(U,U,U,U)><S(SSSS),1*U(U,U,U,U)>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   ($dNum :: GHC.Num.Num a)
                   (a1 :: Graphics.UI.WXCore.WxcTypes.Rect2D a)
                   (b :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case Graphics.UI.WXCore.WxcTypes.$fEqRect2D_$c==
                        @ a
                        $dEq
                        $dNum
                        a1
                        b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $fEqRect2D_$c== ::
    (GHC.Classes.Eq a, GHC.Num.Num a) =>
    Graphics.UI.WXCore.WxcTypes.Rect2D a
    -> Graphics.UI.WXCore.WxcTypes.Rect2D a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(C(C(S))L),U(C(C1(U)),A)><L,A><S(SSSS),1*U(U,U,U,U)><S(SSSS),1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Classes.Eq a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Rect2D a)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Rect ww1 ww2 ww3 ww4 ->
                 case w3 of ww5 { Graphics.UI.WXCore.WxcTypes.Rect ww6 ww7 ww8 ww9 ->
                 Graphics.UI.WXCore.WxcTypes.$w$c==
                   @ a
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   ww7
                   ww8
                   ww9 } }) -}
644abb7df73ac06df808a85ca9676657
  $fEqSize2D ::
    (GHC.Classes.Eq a, GHC.Num.Num a) =>
    GHC.Classes.Eq (Graphics.UI.WXCore.WxcTypes.Size2D a)
  DFunId
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)><L,A>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Eq a) (v1 :: GHC.Num.Num a).
                  @ (Graphics.UI.WXCore.WxcTypes.Size2D a)
                  (Graphics.UI.WXCore.WxcTypes.$fEqSize2D_$c== @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fEqSize2D_$c/= @ a v v1) -}
644abb7df73ac06df808a85ca9676657
  $fEqSize2D_$c/= ::
    (GHC.Classes.Eq a, GHC.Num.Num a) =>
    Graphics.UI.WXCore.WxcTypes.Size2D a
    -> Graphics.UI.WXCore.WxcTypes.Size2D a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(C(C(S))L),U(C(C1(U)),A)><L,A><S(SS),1*U(U,U)><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Classes.Eq a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Size2D a)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Size2D a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Size ww1 ww2 ->
                 case w3 of ww3 { Graphics.UI.WXCore.WxcTypes.Size ww4 ww5 ->
                 case GHC.Classes.== @ a w ww1 ww4 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Classes.== @ a w ww2 ww5 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
644abb7df73ac06df808a85ca9676657
  $fEqSize2D_$c== ::
    (GHC.Classes.Eq a, GHC.Num.Num a) =>
    Graphics.UI.WXCore.WxcTypes.Size2D a
    -> Graphics.UI.WXCore.WxcTypes.Size2D a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(C(C(S))L),U(C(C1(U)),A)><L,A><S(SS),1*U(U,U)><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Classes.Eq a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Size2D a)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Size2D a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Size ww1 ww2 ->
                 case w3 of ww3 { Graphics.UI.WXCore.WxcTypes.Size ww4 ww5 ->
                 case GHC.Classes.== @ a w ww1 ww4 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Classes.== @ a w ww2 ww5 } } }) -}
776ad3c07a16f028f78da3aedea36e73
  $fEqTreeItem :: GHC.Classes.Eq Graphics.UI.WXCore.WxcTypes.TreeItem
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UI.WXCore.WxcTypes.TreeItem
                  GHC.Classes.eqInt
                    `cast`
                  (Trans
                       (Sym (Foreign.Ptr.N:IntPtr[0])
                        ->_R Sym (Foreign.Ptr.N:IntPtr[0])
                        ->_R <GHC.Types.Bool>_R)
                       (Sym (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0])
                        ->_R Sym (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0])
                        ->_R <GHC.Types.Bool>_R))
                  GHC.Classes.neInt
                    `cast`
                  (Trans
                       (Sym (Foreign.Ptr.N:IntPtr[0])
                        ->_R Sym (Foreign.Ptr.N:IntPtr[0])
                        ->_R <GHC.Types.Bool>_R)
                       (Sym (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0])
                        ->_R Sym (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0])
                        ->_R <GHC.Types.Bool>_R)) -}
87d9fae95d73d68f37749362fbe78e2e
  $fEqVector2 ::
    (GHC.Classes.Eq a, GHC.Num.Num a) =>
    GHC.Classes.Eq (Graphics.UI.WXCore.WxcTypes.Vector2 a)
  DFunId
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)><L,A>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Eq a) (v1 :: GHC.Num.Num a).
                  @ (Graphics.UI.WXCore.WxcTypes.Vector2 a)
                  (Graphics.UI.WXCore.WxcTypes.$fEqVector2_$c== @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fEqVector2_$c/= @ a v v1) -}
87d9fae95d73d68f37749362fbe78e2e
  $fEqVector2_$c/= ::
    (GHC.Classes.Eq a, GHC.Num.Num a) =>
    Graphics.UI.WXCore.WxcTypes.Vector2 a
    -> Graphics.UI.WXCore.WxcTypes.Vector2 a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(C(C(S))L),U(C(C1(U)),A)><L,A><S(SS),1*U(U,U)><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Classes.Eq a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Vector2 a)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Vector2 a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Vector ww1 ww2 ->
                 case w3 of ww3 { Graphics.UI.WXCore.WxcTypes.Vector ww4 ww5 ->
                 case GHC.Classes.== @ a w ww1 ww4 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Classes.== @ a w ww2 ww5 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
87d9fae95d73d68f37749362fbe78e2e
  $fEqVector2_$c== ::
    (GHC.Classes.Eq a, GHC.Num.Num a) =>
    Graphics.UI.WXCore.WxcTypes.Vector2 a
    -> Graphics.UI.WXCore.WxcTypes.Vector2 a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(C(C(S))L),U(C(C1(U)),A)><L,A><S(SS),1*U(U,U)><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Classes.Eq a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Vector2 a)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Vector2 a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Vector ww1 ww2 ->
                 case w3 of ww3 { Graphics.UI.WXCore.WxcTypes.Vector ww4 ww5 ->
                 case GHC.Classes.== @ a w ww1 ww4 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Classes.== @ a w ww2 ww5 } } }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fIxPoint2 ::
    GHC.Arr.Ix (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                  Graphics.UI.WXCore.WxcTypes.$fIxPoint2_$s$fOrdPoint2
                  Graphics.UI.WXCore.WxcTypes.$fIxPoint2_$crange
                  Graphics.UI.WXCore.WxcTypes.$fIxPoint2_$cindex
                  Graphics.UI.WXCore.WxcTypes.$fIxPoint2_$cindex
                  Graphics.UI.WXCore.WxcTypes.$fIxPoint2_$cinRange
                  Graphics.UI.WXCore.WxcTypes.$fIxPoint2_$crangeSize
                  Graphics.UI.WXCore.WxcTypes.$fIxPoint2_$cunsafeRangeSize -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fIxPoint2_$cinRange ::
    (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int,
     Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
    -> Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S(S)S)S(SS)),1*U(1*U(U(U),U(U)),1*U(U(U),U(U)))><S(S(S)S),1*U(U(U),U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int,
                          Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int))
                   (w1 :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { Graphics.UI.WXCore.WxcTypes.Point ww4 ww5 ->
                 case ww4 of ww6 { GHC.Types.I# ww7 ->
                 case ww5 of ww8 { GHC.Types.I# ww9 ->
                 case ww2 of ww10 { Graphics.UI.WXCore.WxcTypes.Point ww11 ww12 ->
                 case ww11 of ww13 { GHC.Types.I# ww14 ->
                 case ww12 of ww15 { GHC.Types.I# ww16 ->
                 case w1 of ww17 { Graphics.UI.WXCore.WxcTypes.Point ww18 ww19 ->
                 case ww18 of ww20 { GHC.Types.I# ww21 ->
                 case ww19 of ww22 { GHC.Types.I# ww23 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww21 ww7) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww21 ww14) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.>=# ww23 ww9) of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=# ww23 ww16) } } } } } } } } } } } } }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fIxPoint2_$cindex ::
    (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int,
     Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
    -> Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int
    -> GHC.Types.Int
  {- Arity: 2,
     Strictness: <S(S(S(S)S(S))S(S(S)S(S))),1*U(1*U(U(U),U(U)),1*U(U(U),U(U)))><S(S(S)S(S)),1*U(U(U),U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int,
                          Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int))
                   (w1 :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { Graphics.UI.WXCore.WxcTypes.Point ww4 ww5 ->
                 case ww4 of ww6 { GHC.Types.I# ww7 ->
                 case ww5 of ww8 { GHC.Types.I# ww9 ->
                 case ww2 of ww10 { Graphics.UI.WXCore.WxcTypes.Point ww11 ww12 ->
                 case ww11 of ww13 { GHC.Types.I# ww14 ->
                 case ww12 of ww15 { GHC.Types.I# ww16 ->
                 case w1 of ww17 { Graphics.UI.WXCore.WxcTypes.Point ww18 ww19 ->
                 case ww18 of ww20 { GHC.Types.I# ww21 ->
                 case ww19 of ww22 { GHC.Types.I# ww23 ->
                 case Graphics.UI.WXCore.WxcTypes.$w$cindex
                        ww7
                        ww9
                        ww14
                        ww16
                        ww21
                        ww23 of ww24 { DEFAULT ->
                 GHC.Types.I# ww24 } } } } } } } } } } }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fIxPoint2_$crange ::
    (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int,
     Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
    -> [Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int]
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(S(S)S(S))S(S(S)S(S))),1*U(1*U(U(U),U(U)),1*U(U(U),U(U)))>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int,
                          Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { Graphics.UI.WXCore.WxcTypes.Point ww4 ww5 ->
                 case ww4 of ww6 { GHC.Types.I# ww7 ->
                 case ww5 of ww8 { GHC.Types.I# ww9 ->
                 case ww2 of ww10 { Graphics.UI.WXCore.WxcTypes.Point ww11 ww12 ->
                 case ww11 of ww13 { GHC.Types.I# ww14 ->
                 case ww12 of ww15 { GHC.Types.I# ww16 ->
                 Graphics.UI.WXCore.WxcTypes.$w$crange
                   ww7
                   ww9
                   ww14
                   ww16 } } } } } } }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fIxPoint2_$crangeSize ::
    (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int,
     Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(S(S)S(S))S(S(S)S(S))),1*U(1*U(U(U),U(U)),1*U(U(U),U(U)))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int,
                          Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { Graphics.UI.WXCore.WxcTypes.Point ww4 ww5 ->
                 case ww4 of ww6 { GHC.Types.I# ww7 ->
                 case ww5 of ww8 { GHC.Types.I# ww9 ->
                 case ww2 of ww10 { Graphics.UI.WXCore.WxcTypes.Point ww11 ww12 ->
                 case ww11 of ww13 { GHC.Types.I# ww14 ->
                 case ww12 of ww15 { GHC.Types.I# ww16 ->
                 let {
                   x :: GHC.Prim.Int# = GHC.Prim.-# ww14 ww7
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# x 0#) of wild1 {
                   GHC.Types.False
                   -> let {
                        x1 :: GHC.Prim.Int# = GHC.Prim.-# ww16 ww9
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x1 0#) of wild2 {
                        GHC.Types.False
                        -> GHC.Types.I#
                             (GHC.Prim.*#
                                (GHC.Prim.+# (GHC.Prim.negateInt# x) 1#)
                                (GHC.Prim.+# (GHC.Prim.negateInt# x1) 1#))
                        GHC.Types.True
                        -> GHC.Types.I#
                             (GHC.Prim.*#
                                (GHC.Prim.+# (GHC.Prim.negateInt# x) 1#)
                                (GHC.Prim.+# x1 1#)) }
                   GHC.Types.True
                   -> let {
                        x1 :: GHC.Prim.Int# = GHC.Prim.-# ww16 ww9
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x1 0#) of wild2 {
                        GHC.Types.False
                        -> GHC.Types.I#
                             (GHC.Prim.*#
                                (GHC.Prim.+# x 1#)
                                (GHC.Prim.+# (GHC.Prim.negateInt# x1) 1#))
                        GHC.Types.True
                        -> GHC.Types.I#
                             (GHC.Prim.*#
                                (GHC.Prim.+# x 1#)
                                (GHC.Prim.+# x1 1#)) } } } } } } } } }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fIxPoint2_$cunsafeRangeSize ::
    (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int,
     Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
    -> GHC.Types.Int
  {- Arity: 1,
     Strictness: <S(S(S(S)S(S))S(S(S)S(S))),1*U(1*U(U(U),U(U)),1*U(U(U),U(U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (b :: (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int,
                          Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)) ->
                 case b of wild { (,) _l h ->
                 case Graphics.UI.WXCore.WxcTypes.$fIxPoint2_$cindex
                        wild
                        h of wild1 { GHC.Types.I# x ->
                 GHC.Types.I# (GHC.Prim.+# x 1#) } }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fIxPoint2_$s$fOrdPoint2 ::
    GHC.Classes.Ord (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                  Graphics.UI.WXCore.WxcTypes.$fEqPoint2_$s$fEqPoint2
                  (\ (ds :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                     (ds1 :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                   case ds of wild { Graphics.UI.WXCore.WxcTypes.Point x1 y1 ->
                   case ds1 of wild1 { Graphics.UI.WXCore.WxcTypes.Point x2 y2 ->
                   case y1 of wild2 { GHC.Types.I# x# ->
                   case y2 of wild3 { GHC.Types.I# y# ->
                   case GHC.Prim.tagToEnum#
                          @ GHC.Types.Bool
                          (GHC.Prim.<# x# y#) of wild4 {
                     GHC.Types.False
                     -> case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.==# x# y#) of wild5 {
                          GHC.Types.False -> GHC.Types.GT
                          GHC.Types.True
                          -> case x1 of wild6 { GHC.Types.I# x#1 ->
                             case x2 of wild7 { GHC.Types.I# y#1 ->
                             GHC.Classes.compareInt# x#1 y#1 } } }
                     GHC.Types.True -> GHC.Types.LT } } } } })
                  (\ (x :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                     (y :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                   case x of wild { Graphics.UI.WXCore.WxcTypes.Point x1 y1 ->
                   case y of wild1 { Graphics.UI.WXCore.WxcTypes.Point x2 y2 ->
                   case y1 of wild2 { GHC.Types.I# x# ->
                   case y2 of wild3 { GHC.Types.I# y# ->
                   case GHC.Prim.tagToEnum#
                          @ GHC.Types.Bool
                          (GHC.Prim.<# x# y#) of wild4 {
                     GHC.Types.False
                     -> case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.==# x# y#) of wild5 {
                          GHC.Types.False -> GHC.Types.False
                          GHC.Types.True
                          -> case x1 of wild6 { GHC.Types.I# x#1 ->
                             case x2 of wild7 { GHC.Types.I# y#1 ->
                             GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.<# x#1 y#1) } } }
                     GHC.Types.True -> GHC.Types.True } } } } })
                  (\ (x :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                     (y :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                   case x of wild { Graphics.UI.WXCore.WxcTypes.Point x1 y1 ->
                   case y of wild1 { Graphics.UI.WXCore.WxcTypes.Point x2 y2 ->
                   case y1 of wild2 { GHC.Types.I# x# ->
                   case y2 of wild3 { GHC.Types.I# y# ->
                   case GHC.Prim.tagToEnum#
                          @ GHC.Types.Bool
                          (GHC.Prim.<# x# y#) of wild4 {
                     GHC.Types.False
                     -> case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.==# x# y#) of wild5 {
                          GHC.Types.False -> GHC.Types.False
                          GHC.Types.True
                          -> case x1 of wild6 { GHC.Types.I# x#1 ->
                             case x2 of wild7 { GHC.Types.I# y#1 ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.<# x#1 y#1) of wild8 {
                               GHC.Types.False
                               -> GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# x#1 y#1)
                               GHC.Types.True -> GHC.Types.True } } } }
                     GHC.Types.True -> GHC.Types.True } } } } })
                  (\ (x :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                     (y :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                   case x of wild { Graphics.UI.WXCore.WxcTypes.Point x1 y1 ->
                   case y of wild1 { Graphics.UI.WXCore.WxcTypes.Point x2 y2 ->
                   case y1 of wild2 { GHC.Types.I# x# ->
                   case y2 of wild3 { GHC.Types.I# y# ->
                   case GHC.Prim.tagToEnum#
                          @ GHC.Types.Bool
                          (GHC.Prim.<# x# y#) of wild4 {
                     GHC.Types.False
                     -> case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.==# x# y#) of wild5 {
                          GHC.Types.False -> GHC.Types.True
                          GHC.Types.True
                          -> case x1 of wild6 { GHC.Types.I# x#1 ->
                             case x2 of wild7 { GHC.Types.I# y#1 ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.<# x#1 y#1) of wild8 {
                               GHC.Types.False
                               -> case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.==# x#1 y#1) of wild9 {
                                    GHC.Types.False -> GHC.Types.True
                                    GHC.Types.True -> GHC.Types.False }
                               GHC.Types.True -> GHC.Types.False } } } }
                     GHC.Types.True -> GHC.Types.False } } } } })
                  (\ (x :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                     (y :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                   case x of wild { Graphics.UI.WXCore.WxcTypes.Point x1 y1 ->
                   case y of wild1 { Graphics.UI.WXCore.WxcTypes.Point x2 y2 ->
                   case y1 of wild2 { GHC.Types.I# x# ->
                   case y2 of wild3 { GHC.Types.I# y# ->
                   case GHC.Prim.tagToEnum#
                          @ GHC.Types.Bool
                          (GHC.Prim.<# x# y#) of wild4 {
                     GHC.Types.False
                     -> case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.==# x# y#) of wild5 {
                          GHC.Types.False -> GHC.Types.True
                          GHC.Types.True
                          -> case x1 of wild6 { GHC.Types.I# x#1 ->
                             case x2 of wild7 { GHC.Types.I# y#1 ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.<# x#1 y#1) of wild8 {
                               GHC.Types.False -> GHC.Types.True
                               GHC.Types.True -> GHC.Types.False } } } }
                     GHC.Types.True -> GHC.Types.False } } } } })
                  (\ (x :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                     (y :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                   case x of wild { Graphics.UI.WXCore.WxcTypes.Point x1 y1 ->
                   case y of wild1 { Graphics.UI.WXCore.WxcTypes.Point x2 y2 ->
                   case y1 of wild2 { GHC.Types.I# x# ->
                   case y2 of wild3 { GHC.Types.I# y# ->
                   case GHC.Prim.tagToEnum#
                          @ GHC.Types.Bool
                          (GHC.Prim.<# x# y#) of wild4 {
                     GHC.Types.False
                     -> case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.==# x# y#) of wild5 {
                          GHC.Types.False -> wild
                          GHC.Types.True
                          -> case x1 of wild6 { GHC.Types.I# x#1 ->
                             case x2 of wild7 { GHC.Types.I# y#1 ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.<# x#1 y#1) of wild8 {
                               GHC.Types.False
                               -> case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.==# x#1 y#1) of wild9 {
                                    GHC.Types.False -> wild GHC.Types.True -> wild1 }
                               GHC.Types.True -> wild1 } } } }
                     GHC.Types.True -> wild1 } } } } })
                  (\ (x :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                     (y :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                   case x of wild { Graphics.UI.WXCore.WxcTypes.Point x1 y1 ->
                   case y of wild1 { Graphics.UI.WXCore.WxcTypes.Point x2 y2 ->
                   case y1 of wild2 { GHC.Types.I# x# ->
                   case y2 of wild3 { GHC.Types.I# y# ->
                   case GHC.Prim.tagToEnum#
                          @ GHC.Types.Bool
                          (GHC.Prim.<# x# y#) of wild4 {
                     GHC.Types.False
                     -> case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.==# x# y#) of wild5 {
                          GHC.Types.False -> wild1
                          GHC.Types.True
                          -> case x1 of wild6 { GHC.Types.I# x#1 ->
                             case x2 of wild7 { GHC.Types.I# y#1 ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.<# x#1 y#1) of wild8 {
                               GHC.Types.False
                               -> case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.==# x#1 y#1) of wild9 {
                                    GHC.Types.False -> wild1 GHC.Types.True -> wild }
                               GHC.Types.True -> wild } } } }
                     GHC.Types.True -> wild } } } } }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fOrdPoint2 ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    GHC.Classes.Ord (Graphics.UI.WXCore.WxcTypes.Point2 a)
  DFunId
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,A><L,U(1*U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a
                      (v :: GHC.Num.Num a)
                      (v1 :: GHC.Classes.Ord a).
                  @ (Graphics.UI.WXCore.WxcTypes.Point2 a)
                  (Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$cp1Ord @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$ccompare @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$c< @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$c<= @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$c> @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$c>= @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$cmax @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$cmin @ a v v1) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fOrdPoint2_$c< ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(LC(C(S))LLLLLL),U(A,C(C1(U)),A,A,A,A,A,A)><S(SS),1*U(U,U)><S(SS),1*U(U,U)>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (y :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$ccompare
                        @ a
                        $dNum
                        $dOrd
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.LT -> GHC.Types.True }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fOrdPoint2_$c<= ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(LC(C(S))LLLLLL),U(A,C(C1(U)),A,A,A,A,A,A)><S(SS),1*U(U,U)><S(SS),1*U(U,U)>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (y :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$ccompare
                        @ a
                        $dNum
                        $dOrd
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.GT -> GHC.Types.False }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fOrdPoint2_$c> ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(LC(C(S))LLLLLL),U(A,C(C1(U)),A,A,A,A,A,A)><S(SS),1*U(U,U)><S(SS),1*U(U,U)>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (y :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$ccompare
                        @ a
                        $dNum
                        $dOrd
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.False GHC.Types.GT -> GHC.Types.True }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fOrdPoint2_$c>= ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(LC(C(S))LLLLLL),U(A,C(C1(U)),A,A,A,A,A,A)><S(SS),1*U(U,U)><S(SS),1*U(U,U)>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (y :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$ccompare
                        @ a
                        $dNum
                        $dOrd
                        x
                        y of wild {
                   DEFAULT -> GHC.Types.True GHC.Types.LT -> GHC.Types.False }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fOrdPoint2_$ccompare ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a -> GHC.Types.Ordering
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(LC(C(S))LLLLLL),U(A,C(C1(U)),A,A,A,A,A,A)><S(SS),1*U(U,U)><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.Classes.Ord a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Point ww1 ww2 ->
                 case w3 of ww3 { Graphics.UI.WXCore.WxcTypes.Point ww4 ww5 ->
                 case GHC.Classes.compare @ a w1 ww2 ww5 of wild {
                   DEFAULT -> wild
                   GHC.Types.EQ -> GHC.Classes.compare @ a w1 ww1 ww4 } } }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fOrdPoint2_$cmax ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(LC(C(S))LLLLLL),U(A,C(C1(U)),A,A,A,A,A,A)><S(SS),1*U(U,U)><S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (y :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$ccompare
                        @ a
                        $dNum
                        $dOrd
                        x
                        y of wild {
                   DEFAULT -> y GHC.Types.GT -> x }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fOrdPoint2_$cmin ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S(LC(C(S))LLLLLL),U(A,C(C1(U)),A,A,A,A,A,A)><S(SS),1*U(U,U)><S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (y :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$ccompare
                        @ a
                        $dNum
                        $dOrd
                        x
                        y of wild {
                   DEFAULT -> x GHC.Types.GT -> y }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fOrdPoint2_$cp1Ord ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    GHC.Classes.Eq (Graphics.UI.WXCore.WxcTypes.Point2 a)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,A><L,1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dNum :: GHC.Num.Num a) ($dOrd :: GHC.Classes.Ord a) ->
                 Graphics.UI.WXCore.WxcTypes.$fEqPoint2
                   @ a
                   (GHC.Classes.$p1Ord @ a $dOrd)
                   $dNum) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fReadPoint1 ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Graphics.UI.WXCore.WxcTypes.Point2 a
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 4, Strictness: <L,U(A,A,C(C1(U)),A)><L,A><L,U><L,U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, True)
                (\ @ a
                   (w :: GHC.Read.Read a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Point2 a
                          -> Text.ParserCombinators.ReadP.P b) ->
                 Graphics.UI.WXCore.WxcTypes.$w$creadPrec @ a w w2 @ b w3) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fReadPoint2 ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    GHC.Read.Read (Graphics.UI.WXCore.WxcTypes.Point2 a)
  DFunId
  {- Arity: 2, Strictness: <L,U(A,A,C(C1(U)),A)><L,A>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Read.Read a) (v1 :: GHC.Num.Num a).
                  @ (Graphics.UI.WXCore.WxcTypes.Point2 a)
                  (Graphics.UI.WXCore.WxcTypes.$fReadPoint2_$creadsPrec @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fReadPoint2_$creadList @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fReadPoint1 @ a v v1)
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Graphics.UI.WXCore.WxcTypes.Point2 a>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Graphics.UI.WXCore.WxcTypes.Point2 a>_R)))
                  (Graphics.UI.WXCore.WxcTypes.$fReadPoint2_$creadListPrec
                     @ a
                     v
                     v1) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fReadPoint2_$creadList ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    Text.ParserCombinators.ReadP.ReadS
      [Graphics.UI.WXCore.WxcTypes.Point2 a]
  {- Arity: 2, Strictness: <L,U(A,A,C(C1(U)),A)><L,A>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dRead :: GHC.Read.Read a) ($dNum :: GHC.Num.Num a) ->
                 Text.ParserCombinators.ReadP.run
                   @ [Graphics.UI.WXCore.WxcTypes.Point2 a]
                   (((GHC.Read.list
                        @ (Graphics.UI.WXCore.WxcTypes.Point2 a)
                        (Graphics.UI.WXCore.WxcTypes.$fReadPoint1 @ a $dRead $dNum)
                          `cast`
                        (Trans
                             (<Text.ParserCombinators.ReadPrec.Prec>_R
                              ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                            <Graphics.UI.WXCore.WxcTypes.Point2 a>_R))
                             (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                       <Graphics.UI.WXCore.WxcTypes.Point2 a>_R))))
                       `cast`
                     (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <[Graphics.UI.WXCore.WxcTypes.Point2 a]>_R)
                       GHC.Read.$fRead()8)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <[Graphics.UI.WXCore.WxcTypes.Point2 a]>_R)
                      @ [Graphics.UI.WXCore.WxcTypes.Point2 a]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ [Graphics.UI.WXCore.WxcTypes.Point2 a]))) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fReadPoint2_$creadListPrec ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Graphics.UI.WXCore.WxcTypes.Point2 a]
  {- Arity: 2, Strictness: <L,U(A,A,C(C1(U)),A)><L,A>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dRead :: GHC.Read.Read a) ($dNum :: GHC.Num.Num a) ->
                 GHC.Read.list
                   @ (Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (Graphics.UI.WXCore.WxcTypes.$fReadPoint1 @ a $dRead $dNum)
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Graphics.UI.WXCore.WxcTypes.Point2 a>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Graphics.UI.WXCore.WxcTypes.Point2 a>_R)))) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fReadPoint2_$creadsPrec ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Graphics.UI.WXCore.WxcTypes.Point2 a)
  {- Arity: 3, Strictness: <L,U(A,A,C(C1(U)),A)><L,A><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dRead :: GHC.Read.Read a)
                   ($dNum :: GHC.Num.Num a)
                   (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (Graphics.UI.WXCore.WxcTypes.$fReadPoint1
                      @ a
                      $dRead
                      $dNum
                      n
                      @ (Graphics.UI.WXCore.WxcTypes.Point2 a)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Graphics.UI.WXCore.WxcTypes.Point2 a)))) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $fReadRect2D ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    GHC.Read.Read (Graphics.UI.WXCore.WxcTypes.Rect2D a)
  DFunId
  {- Arity: 2, Strictness: <L,U(A,A,C(C1(U)),A)><L,A>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Read.Read a) (v1 :: GHC.Num.Num a).
                  @ (Graphics.UI.WXCore.WxcTypes.Rect2D a)
                  (Graphics.UI.WXCore.WxcTypes.$fReadRect2D_$creadsPrec @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fReadRect2D_$creadList @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fReadRect2D1 @ a v v1)
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Graphics.UI.WXCore.WxcTypes.Rect2D a>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Graphics.UI.WXCore.WxcTypes.Rect2D a>_R)))
                  (Graphics.UI.WXCore.WxcTypes.$fReadRect2D_$creadListPrec
                     @ a
                     v
                     v1) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $fReadRect2D1 ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Graphics.UI.WXCore.WxcTypes.Rect2D a
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 4, Strictness: <L,U(A,A,C(C1(U)),A)><L,A><L,U><L,U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, True)
                (\ @ a
                   (w :: GHC.Read.Read a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Rect2D a
                          -> Text.ParserCombinators.ReadP.P b) ->
                 Graphics.UI.WXCore.WxcTypes.$w$creadPrec1 @ a w w2 @ b w3) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $fReadRect2D_$creadList ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    Text.ParserCombinators.ReadP.ReadS
      [Graphics.UI.WXCore.WxcTypes.Rect2D a]
  {- Arity: 2, Strictness: <L,U(A,A,C(C1(U)),A)><L,A>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dRead :: GHC.Read.Read a) ($dNum :: GHC.Num.Num a) ->
                 Text.ParserCombinators.ReadP.run
                   @ [Graphics.UI.WXCore.WxcTypes.Rect2D a]
                   (((GHC.Read.list
                        @ (Graphics.UI.WXCore.WxcTypes.Rect2D a)
                        (Graphics.UI.WXCore.WxcTypes.$fReadRect2D1 @ a $dRead $dNum)
                          `cast`
                        (Trans
                             (<Text.ParserCombinators.ReadPrec.Prec>_R
                              ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                            <Graphics.UI.WXCore.WxcTypes.Rect2D a>_R))
                             (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                       <Graphics.UI.WXCore.WxcTypes.Rect2D a>_R))))
                       `cast`
                     (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <[Graphics.UI.WXCore.WxcTypes.Rect2D a]>_R)
                       GHC.Read.$fRead()8)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <[Graphics.UI.WXCore.WxcTypes.Rect2D a]>_R)
                      @ [Graphics.UI.WXCore.WxcTypes.Rect2D a]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ [Graphics.UI.WXCore.WxcTypes.Rect2D a]))) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $fReadRect2D_$creadListPrec ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Graphics.UI.WXCore.WxcTypes.Rect2D a]
  {- Arity: 2, Strictness: <L,U(A,A,C(C1(U)),A)><L,A>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dRead :: GHC.Read.Read a) ($dNum :: GHC.Num.Num a) ->
                 GHC.Read.list
                   @ (Graphics.UI.WXCore.WxcTypes.Rect2D a)
                   (Graphics.UI.WXCore.WxcTypes.$fReadRect2D1 @ a $dRead $dNum)
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Graphics.UI.WXCore.WxcTypes.Rect2D a>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Graphics.UI.WXCore.WxcTypes.Rect2D a>_R)))) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $fReadRect2D_$creadsPrec ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Graphics.UI.WXCore.WxcTypes.Rect2D a)
  {- Arity: 3, Strictness: <L,U(A,A,C(C1(U)),A)><L,A><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dRead :: GHC.Read.Read a)
                   ($dNum :: GHC.Num.Num a)
                   (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Graphics.UI.WXCore.WxcTypes.Rect2D a)
                   (Graphics.UI.WXCore.WxcTypes.$fReadRect2D1
                      @ a
                      $dRead
                      $dNum
                      n
                      @ (Graphics.UI.WXCore.WxcTypes.Rect2D a)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Graphics.UI.WXCore.WxcTypes.Rect2D a)))) -}
776ad3c07a16f028f78da3aedea36e73
  $fReadTreeItem ::
    GHC.Read.Read Graphics.UI.WXCore.WxcTypes.TreeItem
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UI.WXCore.WxcTypes.TreeItem
                  Graphics.UI.WXCore.WxcTypes.$fReadTreeItem_$creadsPrec
                  Graphics.UI.WXCore.WxcTypes.$fReadTreeItem_$creadList
                  Graphics.UI.WXCore.WxcTypes.$fReadTreeItem1
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Graphics.UI.WXCore.WxcTypes.TreeItem>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Graphics.UI.WXCore.WxcTypes.TreeItem>_R)))
                  Graphics.UI.WXCore.WxcTypes.$fReadTreeItem_$creadListPrec -}
776ad3c07a16f028f78da3aedea36e73
  $fReadTreeItem1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Graphics.UI.WXCore.WxcTypes.TreeItem
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2,
     Unfolding: (GHC.Read.$fRead()6
                   @ Graphics.UI.WXCore.WxcTypes.TreeItem
                   Graphics.UI.WXCore.WxcTypes.$fReadTreeItem2
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Graphics.UI.WXCore.WxcTypes.TreeItem>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Graphics.UI.WXCore.WxcTypes.TreeItem>_R)))) -}
776ad3c07a16f028f78da3aedea36e73
  $fReadTreeItem2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Graphics.UI.WXCore.WxcTypes.TreeItem
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Graphics.UI.WXCore.WxcTypes.TreeItem
                          -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Graphics.UI.WXCore.WxcTypes.$w$creadPrec2 ww1 @ b w1 }) -}
0cff7a6d64f44095224ee942aa1dc41a
  $fReadTreeItem3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Graphics.UI.WXCore.WxcTypes.$fReadTreeItem4) -}
cf58ec923c64f9fd7a58f2cc3e7eaaed
  $fReadTreeItem4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TreeItem"#) -}
d8aaeb04fb20a1a3746e20a16aebfe83
  $fReadTreeItem5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
776ad3c07a16f028f78da3aedea36e73
  $fReadTreeItem6 ::
    Text.ParserCombinators.ReadP.P
      [Graphics.UI.WXCore.WxcTypes.TreeItem]
  {- Unfolding: ((Graphics.UI.WXCore.WxcTypes.$fReadTreeItem_$creadListPrec
                    `cast`
                  (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                       <[Graphics.UI.WXCore.WxcTypes.TreeItem]>_R)
                    GHC.Read.$fRead()8)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0]
                      <[Graphics.UI.WXCore.WxcTypes.TreeItem]>_R)
                   @ [Graphics.UI.WXCore.WxcTypes.TreeItem]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Graphics.UI.WXCore.WxcTypes.TreeItem])) -}
776ad3c07a16f028f78da3aedea36e73
  $fReadTreeItem_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Graphics.UI.WXCore.WxcTypes.TreeItem]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Graphics.UI.WXCore.WxcTypes.TreeItem]
                   Graphics.UI.WXCore.WxcTypes.$fReadTreeItem6) -}
776ad3c07a16f028f78da3aedea36e73
  $fReadTreeItem_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Graphics.UI.WXCore.WxcTypes.TreeItem]
  {- Unfolding: (GHC.Read.list
                   @ Graphics.UI.WXCore.WxcTypes.TreeItem
                   Graphics.UI.WXCore.WxcTypes.$fReadTreeItem1
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Graphics.UI.WXCore.WxcTypes.TreeItem>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Graphics.UI.WXCore.WxcTypes.TreeItem>_R)))) -}
776ad3c07a16f028f78da3aedea36e73
  $fReadTreeItem_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         Graphics.UI.WXCore.WxcTypes.TreeItem
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ Graphics.UI.WXCore.WxcTypes.TreeItem
                   (GHC.Read.$fRead()6
                      @ Graphics.UI.WXCore.WxcTypes.TreeItem
                      Graphics.UI.WXCore.WxcTypes.$fReadTreeItem2
                        `cast`
                      (Trans
                           (<Text.ParserCombinators.ReadPrec.Prec>_R
                            ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                          <Graphics.UI.WXCore.WxcTypes.TreeItem>_R))
                           (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                     <Graphics.UI.WXCore.WxcTypes.TreeItem>_R)))
                      n
                      @ Graphics.UI.WXCore.WxcTypes.TreeItem
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ Graphics.UI.WXCore.WxcTypes.TreeItem))) -}
87d9fae95d73d68f37749362fbe78e2e
  $fReadVector1 ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Graphics.UI.WXCore.WxcTypes.Vector2 a
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 4, Strictness: <L,U(A,A,C(C1(U)),A)><L,A><L,U><L,U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, True)
                (\ @ a
                   (w :: GHC.Read.Read a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Vector2 a
                          -> Text.ParserCombinators.ReadP.P b) ->
                 Graphics.UI.WXCore.WxcTypes.$w$creadPrec3 @ a w w2 @ b w3) -}
87d9fae95d73d68f37749362fbe78e2e
  $fReadVector2 ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    GHC.Read.Read (Graphics.UI.WXCore.WxcTypes.Vector2 a)
  DFunId
  {- Arity: 2, Strictness: <L,U(A,A,C(C1(U)),A)><L,A>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Read.Read a) (v1 :: GHC.Num.Num a).
                  @ (Graphics.UI.WXCore.WxcTypes.Vector2 a)
                  (Graphics.UI.WXCore.WxcTypes.$fReadVector2_$creadsPrec @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fReadVector2_$creadList @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fReadVector1 @ a v v1)
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Graphics.UI.WXCore.WxcTypes.Vector2 a>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Graphics.UI.WXCore.WxcTypes.Vector2 a>_R)))
                  (Graphics.UI.WXCore.WxcTypes.$fReadVector2_$creadListPrec
                     @ a
                     v
                     v1) -}
87d9fae95d73d68f37749362fbe78e2e
  $fReadVector2_$creadList ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    Text.ParserCombinators.ReadP.ReadS
      [Graphics.UI.WXCore.WxcTypes.Vector2 a]
  {- Arity: 2, Strictness: <L,U(A,A,C(C1(U)),A)><L,A>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dRead :: GHC.Read.Read a) ($dNum :: GHC.Num.Num a) ->
                 Text.ParserCombinators.ReadP.run
                   @ [Graphics.UI.WXCore.WxcTypes.Vector2 a]
                   (((GHC.Read.list
                        @ (Graphics.UI.WXCore.WxcTypes.Vector2 a)
                        (Graphics.UI.WXCore.WxcTypes.$fReadVector1 @ a $dRead $dNum)
                          `cast`
                        (Trans
                             (<Text.ParserCombinators.ReadPrec.Prec>_R
                              ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                            <Graphics.UI.WXCore.WxcTypes.Vector2 a>_R))
                             (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                       <Graphics.UI.WXCore.WxcTypes.Vector2 a>_R))))
                       `cast`
                     (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <[Graphics.UI.WXCore.WxcTypes.Vector2 a]>_R)
                       GHC.Read.$fRead()8)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <[Graphics.UI.WXCore.WxcTypes.Vector2 a]>_R)
                      @ [Graphics.UI.WXCore.WxcTypes.Vector2 a]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ [Graphics.UI.WXCore.WxcTypes.Vector2 a]))) -}
87d9fae95d73d68f37749362fbe78e2e
  $fReadVector2_$creadListPrec ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Graphics.UI.WXCore.WxcTypes.Vector2 a]
  {- Arity: 2, Strictness: <L,U(A,A,C(C1(U)),A)><L,A>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dRead :: GHC.Read.Read a) ($dNum :: GHC.Num.Num a) ->
                 GHC.Read.list
                   @ (Graphics.UI.WXCore.WxcTypes.Vector2 a)
                   (Graphics.UI.WXCore.WxcTypes.$fReadVector1 @ a $dRead $dNum)
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Graphics.UI.WXCore.WxcTypes.Vector2 a>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Graphics.UI.WXCore.WxcTypes.Vector2 a>_R)))) -}
87d9fae95d73d68f37749362fbe78e2e
  $fReadVector2_$creadsPrec ::
    (GHC.Read.Read a, GHC.Num.Num a) =>
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Graphics.UI.WXCore.WxcTypes.Vector2 a)
  {- Arity: 3, Strictness: <L,U(A,A,C(C1(U)),A)><L,A><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dRead :: GHC.Read.Read a)
                   ($dNum :: GHC.Num.Num a)
                   (n :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Graphics.UI.WXCore.WxcTypes.Vector2 a)
                   (Graphics.UI.WXCore.WxcTypes.$fReadVector1
                      @ a
                      $dRead
                      $dNum
                      n
                      @ (Graphics.UI.WXCore.WxcTypes.Vector2 a)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Graphics.UI.WXCore.WxcTypes.Vector2 a)))) -}
e71f0c936211418315079628f71ffb46
  $fShowColor :: GHC.Show.Show Graphics.UI.WXCore.WxcTypes.Color
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UI.WXCore.WxcTypes.Color
                  Graphics.UI.WXCore.WxcTypes.$fShowColor_$cshowsPrec
                  Graphics.UI.WXCore.WxcTypes.$fShowColor_$cshow
                  Graphics.UI.WXCore.WxcTypes.$fShowColor_$cshowList -}
e71f0c936211418315079628f71ffb46
  $fShowColor1 :: Graphics.UI.WXCore.WxcTypes.Color -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: (\ (w :: Graphics.UI.WXCore.WxcTypes.Color)
                   (w1 :: GHC.Base.String) ->
                 Graphics.UI.WXCore.WxcTypes.$w$cshowsPrec 0# w w1) -}
bf27fe993d8fbd83f460ae460f0f9300
  $fShowColor2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Graphics.UI.WXCore.WxcTypes.$fShowColor3) -}
a55a43f5c9cb3bc58cf70c2f4b222f13
  $fShowColor3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("rgba("#) -}
aef5823f5a450c2e68c8866ff5a81e08
  $fShowColor4 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ')'#) -}
f58b10ef33e91d8e646a8aff33d7c4e1
  $fShowColor5 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ','#) -}
d1a122f4c98e16e8fd3d1230eca7b5f3
  $fShowColor6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
e71f0c936211418315079628f71ffb46
  $fShowColor_$cshow ::
    Graphics.UI.WXCore.WxcTypes.Color -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Graphics.UI.WXCore.WxcTypes.Color) ->
                 Graphics.UI.WXCore.WxcTypes.$fShowColor_$cshowsPrec
                   Graphics.UI.WXCore.WxcTypes.$fShowColor6
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e71f0c936211418315079628f71ffb46
  $fShowColor_$cshowList ::
    [Graphics.UI.WXCore.WxcTypes.Color] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Graphics.UI.WXCore.WxcTypes.Color])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Graphics.UI.WXCore.WxcTypes.Color
                   Graphics.UI.WXCore.WxcTypes.$fShowColor1
                   ls
                   s) -}
e71f0c936211418315079628f71ffb46
  $fShowColor_$cshowsPrec ::
    GHC.Types.Int
    -> Graphics.UI.WXCore.WxcTypes.Color -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Graphics.UI.WXCore.WxcTypes.Color)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Graphics.UI.WXCore.WxcTypes.$w$cshowsPrec ww1 w1 w2 }) -}
54927995d44bbce1d2856fa1b280b3da
  $fShowPoint1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Graphics.UI.WXCore.WxcTypes.$fShowPoint3) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fShowPoint2 ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    GHC.Show.Show (Graphics.UI.WXCore.WxcTypes.Point2 a)
  DFunId
  {- Arity: 2, Strictness: <L,U(C(C1(C(U))),A,A)><L,A>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a) (v1 :: GHC.Num.Num a).
                  @ (Graphics.UI.WXCore.WxcTypes.Point2 a)
                  (Graphics.UI.WXCore.WxcTypes.$fShowPoint2_$cshowsPrec @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fShowPoint2_$cshow @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fShowPoint2_$cshowList @ a v v1) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fShowPoint2_$cshow ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    Graphics.UI.WXCore.WxcTypes.Point2 a -> GHC.Base.String
  {- Arity: 3,
     Strictness: <L,U(C(C1(C1(U))),A,A)><L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Point ww1 ww2 ->
                 Graphics.UI.WXCore.WxcTypes.$w$cshow @ a w ww1 ww2 }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fShowPoint2_$cshowList ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    [Graphics.UI.WXCore.WxcTypes.Point2 a] -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U(C(C1(C(U))),A,A)><L,A><S,1*U><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   ($dNum :: GHC.Num.Num a)
                   (eta :: [Graphics.UI.WXCore.WxcTypes.Point2 a])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (Graphics.UI.WXCore.WxcTypes.$fShowPoint2_$cshowsPrec
                      @ a
                      $dShow
                      $dNum
                      Graphics.UI.WXCore.WxcTypes.$fShowColor6)
                   eta
                   eta1) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $fShowPoint2_$cshowsPrec ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    GHC.Types.Int
    -> Graphics.UI.WXCore.WxcTypes.Point2 a -> GHC.Show.ShowS
  {- Arity: 4,
     Strictness: <L,U(C(C1(C(U))),A,A)><L,A><S(S),1*U(U)><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: GHC.Types.Int)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 case w3 of ww2 { Graphics.UI.WXCore.WxcTypes.Point ww3 ww4 ->
                 Graphics.UI.WXCore.WxcTypes.$w$cshowsPrec1
                   @ a
                   w
                   ww1
                   ww3
                   ww4 } }) -}
d00813cb8be0f44d0c691711a06cae2b
  $fShowPoint3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
ae4ac6bea05c9dd4d21bec90bed170b8
  $fShowPoint4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pointY = "#) -}
958a58f7cbe89604720027335ed9de45
  $fShowPoint5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pointX = "#) -}
730a00509d3b9c1840314ad0307c42ee
  $fShowPoint6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Point {"#) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $fShowRect2D ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    GHC.Show.Show (Graphics.UI.WXCore.WxcTypes.Rect2D a)
  DFunId
  {- Arity: 2, Strictness: <L,U(C(C1(C(U))),A,A)><L,A>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a) (v1 :: GHC.Num.Num a).
                  @ (Graphics.UI.WXCore.WxcTypes.Rect2D a)
                  (Graphics.UI.WXCore.WxcTypes.$fShowRect2D_$cshowsPrec @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fShowRect2D_$cshow @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fShowRect2D_$cshowList @ a v v1) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $fShowRect2D_$cshow ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    Graphics.UI.WXCore.WxcTypes.Rect2D a -> GHC.Base.String
  {- Arity: 3,
     Strictness: <L,U(C(C1(C(U))),A,A)><L,A><S(SSSS),1*U(U,U,U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   ($dNum :: GHC.Num.Num a)
                   (x :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 Graphics.UI.WXCore.WxcTypes.$fShowRect2D_$cshowsPrec
                   @ a
                   $dShow
                   $dNum
                   Graphics.UI.WXCore.WxcTypes.$fShowColor6
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $fShowRect2D_$cshowList ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    [Graphics.UI.WXCore.WxcTypes.Rect2D a] -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U(C(C1(C(U))),A,A)><L,A><S,1*U><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   ($dNum :: GHC.Num.Num a)
                   (eta :: [Graphics.UI.WXCore.WxcTypes.Rect2D a])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Graphics.UI.WXCore.WxcTypes.Rect2D a)
                   (Graphics.UI.WXCore.WxcTypes.$fShowRect2D_$cshowsPrec
                      @ a
                      $dShow
                      $dNum
                      Graphics.UI.WXCore.WxcTypes.$fShowColor6)
                   eta
                   eta1) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $fShowRect2D_$cshowsPrec ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    GHC.Types.Int
    -> Graphics.UI.WXCore.WxcTypes.Rect2D a -> GHC.Show.ShowS
  {- Arity: 4,
     Strictness: <L,U(C(C1(C(U))),A,A)><L,A><S(S),1*U(U)><S(SSSS),1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: GHC.Types.Int)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 case w3 of ww2 { Graphics.UI.WXCore.WxcTypes.Rect ww3 ww4 ww5 ww6 ->
                 Graphics.UI.WXCore.WxcTypes.$w$cshowsPrec2
                   @ a
                   w
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6 } }) -}
644abb7df73ac06df808a85ca9676657
  $fShowSize2D ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    GHC.Show.Show (Graphics.UI.WXCore.WxcTypes.Size2D a)
  DFunId
  {- Arity: 2, Strictness: <L,U(C(C1(C(U))),A,A)><L,A>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a) (v1 :: GHC.Num.Num a).
                  @ (Graphics.UI.WXCore.WxcTypes.Size2D a)
                  (Graphics.UI.WXCore.WxcTypes.$fShowSize2D_$cshowsPrec @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fShowSize2D_$cshow @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fShowSize2D_$cshowList @ a v v1) -}
2f3727e98ad0bc798bdbdf58c535f178
  $fShowSize2D1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("sizeH = "#) -}
dac227ef71b2de7ee6a38b9247ffec2e
  $fShowSize2D2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("sizeW = "#) -}
2c4b75ef3d6071db3ea5ec1f9ee1ae09
  $fShowSize2D3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Size {"#) -}
644abb7df73ac06df808a85ca9676657
  $fShowSize2D_$cshow ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    Graphics.UI.WXCore.WxcTypes.Size2D a -> GHC.Base.String
  {- Arity: 3,
     Strictness: <L,U(C(C1(C1(U))),A,A)><L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Size2D a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Size ww1 ww2 ->
                 Graphics.UI.WXCore.WxcTypes.$w$cshow1 @ a w ww1 ww2 }) -}
644abb7df73ac06df808a85ca9676657
  $fShowSize2D_$cshowList ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    [Graphics.UI.WXCore.WxcTypes.Size2D a] -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U(C(C1(C(U))),A,A)><L,A><S,1*U><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   ($dNum :: GHC.Num.Num a)
                   (eta :: [Graphics.UI.WXCore.WxcTypes.Size2D a])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Graphics.UI.WXCore.WxcTypes.Size2D a)
                   (Graphics.UI.WXCore.WxcTypes.$fShowSize2D_$cshowsPrec
                      @ a
                      $dShow
                      $dNum
                      Graphics.UI.WXCore.WxcTypes.$fShowColor6)
                   eta
                   eta1) -}
644abb7df73ac06df808a85ca9676657
  $fShowSize2D_$cshowsPrec ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    GHC.Types.Int
    -> Graphics.UI.WXCore.WxcTypes.Size2D a -> GHC.Show.ShowS
  {- Arity: 4,
     Strictness: <L,U(C(C1(C(U))),A,A)><L,A><S(S),1*U(U)><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: GHC.Types.Int)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Size2D a) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 case w3 of ww2 { Graphics.UI.WXCore.WxcTypes.Size ww3 ww4 ->
                 Graphics.UI.WXCore.WxcTypes.$w$cshowsPrec3
                   @ a
                   w
                   ww1
                   ww3
                   ww4 } }) -}
776ad3c07a16f028f78da3aedea36e73
  $fShowTreeItem ::
    GHC.Show.Show Graphics.UI.WXCore.WxcTypes.TreeItem
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Graphics.UI.WXCore.WxcTypes.TreeItem
                  Graphics.UI.WXCore.WxcTypes.$fShowTreeItem_$cshowsPrec
                  Graphics.UI.WXCore.WxcTypes.$fShowTreeItem_$cshow
                  Graphics.UI.WXCore.WxcTypes.$fShowTreeItem_$cshowList -}
776ad3c07a16f028f78da3aedea36e73
  $fShowTreeItem1 ::
    Graphics.UI.WXCore.WxcTypes.TreeItem -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: (\ (w :: Graphics.UI.WXCore.WxcTypes.TreeItem)
                   (w1 :: GHC.Base.String) ->
                 Graphics.UI.WXCore.WxcTypes.$w$cshowsPrec4 0# w w1) -}
39726f2c8a582df28e674689d9ecd412
  $fShowTreeItem2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TreeItem "#) -}
776ad3c07a16f028f78da3aedea36e73
  $fShowTreeItem_$cshow ::
    Graphics.UI.WXCore.WxcTypes.TreeItem -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U(U)>,
     Unfolding: (\ (x :: Graphics.UI.WXCore.WxcTypes.TreeItem) ->
                 GHC.CString.unpackAppendCString#
                   Graphics.UI.WXCore.WxcTypes.$fShowTreeItem2
                   (case x `cast`
                         (Trans
                              (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0])
                              (Foreign.Ptr.N:IntPtr[0])) of ww2 { GHC.Types.I# ww3 ->
                    case GHC.Show.$wshowSignedInt
                           11#
                           ww3
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    GHC.Types.: @ GHC.Types.Char ww5 ww6 } })) -}
776ad3c07a16f028f78da3aedea36e73
  $fShowTreeItem_$cshowList ::
    [Graphics.UI.WXCore.WxcTypes.TreeItem] -> GHC.Show.ShowS
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (GHC.Show.showList__
                   @ Graphics.UI.WXCore.WxcTypes.TreeItem
                   Graphics.UI.WXCore.WxcTypes.$fShowTreeItem1) -}
776ad3c07a16f028f78da3aedea36e73
  $fShowTreeItem_$cshowsPrec ::
    GHC.Types.Int
    -> Graphics.UI.WXCore.WxcTypes.TreeItem -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Graphics.UI.WXCore.WxcTypes.TreeItem)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Graphics.UI.WXCore.WxcTypes.$w$cshowsPrec4 ww1 w1 w2 }) -}
c6c09ea817498b473781b2619e4467ed
  $fShowVector1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("vecY = "#) -}
87d9fae95d73d68f37749362fbe78e2e
  $fShowVector2 ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    GHC.Show.Show (Graphics.UI.WXCore.WxcTypes.Vector2 a)
  DFunId
  {- Arity: 2, Strictness: <L,U(C(C1(C(U))),A,A)><L,A>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a) (v1 :: GHC.Num.Num a).
                  @ (Graphics.UI.WXCore.WxcTypes.Vector2 a)
                  (Graphics.UI.WXCore.WxcTypes.$fShowVector2_$cshowsPrec @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fShowVector2_$cshow @ a v v1)
                  (Graphics.UI.WXCore.WxcTypes.$fShowVector2_$cshowList @ a v v1) -}
87d9fae95d73d68f37749362fbe78e2e
  $fShowVector2_$cshow ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    Graphics.UI.WXCore.WxcTypes.Vector2 a -> GHC.Base.String
  {- Arity: 3,
     Strictness: <L,U(C(C1(C1(U))),A,A)><L,A><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Vector2 a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Vector ww1 ww2 ->
                 Graphics.UI.WXCore.WxcTypes.$w$cshow2 @ a w ww1 ww2 }) -}
87d9fae95d73d68f37749362fbe78e2e
  $fShowVector2_$cshowList ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    [Graphics.UI.WXCore.WxcTypes.Vector2 a] -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U(C(C1(C(U))),A,A)><L,A><S,1*U><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   ($dNum :: GHC.Num.Num a)
                   (eta :: [Graphics.UI.WXCore.WxcTypes.Vector2 a])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Graphics.UI.WXCore.WxcTypes.Vector2 a)
                   (Graphics.UI.WXCore.WxcTypes.$fShowVector2_$cshowsPrec
                      @ a
                      $dShow
                      $dNum
                      Graphics.UI.WXCore.WxcTypes.$fShowColor6)
                   eta
                   eta1) -}
87d9fae95d73d68f37749362fbe78e2e
  $fShowVector2_$cshowsPrec ::
    (GHC.Show.Show a, GHC.Num.Num a) =>
    GHC.Types.Int
    -> Graphics.UI.WXCore.WxcTypes.Vector2 a -> GHC.Show.ShowS
  {- Arity: 4,
     Strictness: <L,U(C(C1(C(U))),A,A)><L,A><S(S),1*U(U)><S(SS),1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Num.Num a)
                   (w2 :: GHC.Types.Int)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Vector2 a) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 case w3 of ww2 { Graphics.UI.WXCore.WxcTypes.Vector ww3 ww4 ->
                 Graphics.UI.WXCore.WxcTypes.$w$cshowsPrec5
                   @ a
                   w
                   ww1
                   ww3
                   ww4 } }) -}
c5b85af35f1be11e8909d7b21444ac41
  $fShowVector3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("vecX = "#) -}
3305e0c4c65a66f897bc7ee62c0ebfd7
  $fShowVector4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Vector {"#) -}
9b6a4b2729736c19e7446bd30c9408b5
  $tc'Color :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18305379375350753915##
                   16523888602658910886##
                   Graphics.UI.WXCore.WxcTypes.$trModule
                   Graphics.UI.WXCore.WxcTypes.$tc'Color2
                   0#
                   Graphics.UI.WXCore.WxcTypes.$tc'Color1) -}
f0b8fd8e5060cfebd927eba1d1352768
  $tc'Color1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c35d3539958a5299de6032c22bd70592
  $tc'Color2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$tc'Color3) -}
7dbde551a5516c009fc311233d6171a8
  $tc'Color3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Color"#) -}
cbd19b908ecc05dbc52e639bf489e99c
  $tc'Point :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   27357706047468419##
                   14107073446970305443##
                   Graphics.UI.WXCore.WxcTypes.$trModule
                   Graphics.UI.WXCore.WxcTypes.$tc'Point2
                   1#
                   Graphics.UI.WXCore.WxcTypes.$tc'Point1) -}
c30ec083151158088a602815d427a469
  $tc'Point1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
02f71810f7557c193b7ac228d7699451
  $tc'Point2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$tc'Point3) -}
56866a23165725f03219558a3a3df35b
  $tc'Point3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Point"#) -}
a25ee80d5f7082438c1221820883f87c
  $tc'Rect :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18315028224561758908##
                   9750409991220559237##
                   Graphics.UI.WXCore.WxcTypes.$trModule
                   Graphics.UI.WXCore.WxcTypes.$tc'Rect2
                   1#
                   Graphics.UI.WXCore.WxcTypes.$tc'Rect1) -}
6b25d64b4d594f687af5e9052efd52ab
  $tc'Rect1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
920523e04af6b253cbacb84ffc3092fa
  $tc'Rect2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$tc'Rect3) -}
13c748857acde86df943dfdcd11a8fcd
  $tc'Rect3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Rect"#) -}
1b3b288466aba5a276b87164adabb6ee
  $tc'Size :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6694692238965773595##
                   7817840864243886022##
                   Graphics.UI.WXCore.WxcTypes.$trModule
                   Graphics.UI.WXCore.WxcTypes.$tc'Size2
                   1#
                   Graphics.UI.WXCore.WxcTypes.$tc'Size1) -}
7754ebde9e68792b82df5ca757e36724
  $tc'Size1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
f3b9cc20e8553153467fb57205ce6eba
  $tc'Size2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$tc'Size3) -}
4981f1fe8fc300e42ca47ebe28e26579
  $tc'Size3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Size"#) -}
20ca40c76d0eb35026b9bcdd76cff984
  $tc'TreeItem :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2999355042646606575##
                   12883935030210159162##
                   Graphics.UI.WXCore.WxcTypes.$trModule
                   Graphics.UI.WXCore.WxcTypes.$tc'TreeItem2
                   0#
                   Graphics.UI.WXCore.WxcTypes.$tc'TreeItem1) -}
83ab561ff991652ceff8ff30f5992527
  $tc'TreeItem1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
9cee014f23ffb881c962a5d921e4a486
  $tc'TreeItem2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$tc'TreeItem3) -}
2dfb5fe2f81da159bdfaa9210256e73f
  $tc'TreeItem3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TreeItem"#) -}
42720acbfe43e782e3ed913382c7071b
  $tc'Vector :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18439667726443964628##
                   15374244854451961297##
                   Graphics.UI.WXCore.WxcTypes.$trModule
                   Graphics.UI.WXCore.WxcTypes.$tc'Vector2
                   1#
                   Graphics.UI.WXCore.WxcTypes.$tc'Vector1) -}
ff9e7c57b58c4423ad6c219621afeee0
  $tc'Vector1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
618d66726dfc91a351ab7d6d3ef53d2c
  $tc'Vector2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$tc'Vector3) -}
323d7fa433e5915982d2d47b66354da3
  $tc'Vector3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Vector"#) -}
973bfa21ee63fe43b4301667b1463716
  $tcColor :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11611021849616556834##
                   3031544633002895257##
                   Graphics.UI.WXCore.WxcTypes.$trModule
                   Graphics.UI.WXCore.WxcTypes.$tcColor1
                   0#
                   GHC.Types.krep$*) -}
e7dceadad797b6e830d0b01566623ae9
  $tcColor1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$tcColor2) -}
ff058e1fdbd44de1a5d704d59fa2cff7
  $tcColor2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Color"#) -}
661bd844f2aa0f493fa85c874c75eb80
  $tcPoint1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$tcPoint3) -}
6ddc9640447a82f8d534bdfd46e5180f
  $tcPoint2 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1715262158161819887##
                   1989894281125910080##
                   Graphics.UI.WXCore.WxcTypes.$trModule
                   Graphics.UI.WXCore.WxcTypes.$tcPoint1
                   0#
                   GHC.Types.krep$*Arr*) -}
78745e8ad6d1cfa56294de3f935c85c5
  $tcPoint3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Point2"#) -}
3a12de547470e07ba6621ebd1ef89a54
  $tcRect2D :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15472760092410706079##
                   11903682970429017013##
                   Graphics.UI.WXCore.WxcTypes.$trModule
                   Graphics.UI.WXCore.WxcTypes.$tcRect2D1
                   0#
                   GHC.Types.krep$*Arr*) -}
7993cb61b2d290f4b4d8e2f278512ab0
  $tcRect2D1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$tcRect2D2) -}
5d370f1648a89e42fb300dbb6a597222
  $tcRect2D2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Rect2D"#) -}
4bd52cec65f24ba5983e3f5bd0a14694
  $tcSize2D :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5895096897761114495##
                   6010207071115265041##
                   Graphics.UI.WXCore.WxcTypes.$trModule
                   Graphics.UI.WXCore.WxcTypes.$tcSize2D1
                   0#
                   GHC.Types.krep$*Arr*) -}
9cd649516dbcba23a3f7effbaa394047
  $tcSize2D1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$tcSize2D2) -}
f9b30ff9a338023aa5ce0a2e30f1272e
  $tcSize2D2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Size2D"#) -}
438b246ebd0d82091f1f93f24dbb7c39
  $tcTreeItem :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5563393145353941337##
                   9499104437396640998##
                   Graphics.UI.WXCore.WxcTypes.$trModule
                   Graphics.UI.WXCore.WxcTypes.$tcTreeItem1
                   0#
                   GHC.Types.krep$*) -}
d31ebd037c2560b086caa60c94365d5f
  $tcTreeItem1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$fReadTreeItem4) -}
6f6b0daaf2317a32385c5938d597dd44
  $tcVector1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$tcVector3) -}
cbd46d68f6b585843d8f1b127053655a
  $tcVector2 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3636529777002033987##
                   7381209094711059882##
                   Graphics.UI.WXCore.WxcTypes.$trModule
                   Graphics.UI.WXCore.WxcTypes.$tcVector1
                   0#
                   GHC.Types.krep$*Arr*) -}
efc247df6e6f7947e2d0ab7a61e6c8b2
  $tcVector3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Vector2"#) -}
ad47383113bb11eb46020721205ef340
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Graphics.UI.WXCore.WxcTypes.$trModule3
                   Graphics.UI.WXCore.WxcTypes.$trModule1) -}
c500cc75fa1fba7694767f27c4df267a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$trModule2) -}
28ceb504243723355beb56ab51da1709
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Graphics.UI.WXCore.WxcTypes"#) -}
80d7c7b403633534b1fec36f9f120b47
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   Graphics.UI.WXCore.WxcTypes.$trModule4) -}
a5425462a8d373f67654efc5989ed08e
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv"#) -}
edd5d06069a2e447c068dabf61c80975
  $w$c== ::
    GHC.Classes.Eq a =>
    a -> a -> a -> a -> a -> a -> a -> a -> GHC.Types.Bool
  {- Arity: 9, HasNoCafRefs,
     Strictness: <S(C(C(S))L),U(C(C1(U)),A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Classes.Eq a)
                   (ww :: a)
                   (ww1 :: a)
                   (ww2 :: a)
                   (ww3 :: a)
                   (ww4 :: a)
                   (ww5 :: a)
                   (ww6 :: a)
                   (ww7 :: a) ->
                 case GHC.Classes.== @ a w ww ww4 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Classes.== @ a w ww1 ww5 of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Classes.== @ a w ww2 ww6 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Classes.== @ a w ww3 ww7 } } }) -}
84521460a95f3e106fc6ee559276445a
  $w$cindex ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
  {- Arity: 6, Strictness: <S,U><S,U><S,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (ww5 :: GHC.Prim.Int#) ->
                 let {
                   x :: GHC.Prim.Int# = GHC.Prim.-# ww2 ww
                 } in
                 let {
                   $j :: GHC.Prim.Int# -> GHC.Prim.Int#
                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww4 ww) of wild {
                       GHC.Types.False
                       -> case Graphics.UI.WXCore.WxcTypes.$wlvl ww ww1 ww2 ww3 ww4 ww5
                          ret_ty GHC.Prim.Int#
                          of {}
                       GHC.Types.True
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<=# ww4 ww2) of wild1 {
                            GHC.Types.False
                            -> case Graphics.UI.WXCore.WxcTypes.$wlvl ww ww1 ww2 ww3 ww4 ww5
                               ret_ty GHC.Prim.Int#
                               of {}
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>=# ww5 ww1) of wild2 {
                                 GHC.Types.False
                                 -> case Graphics.UI.WXCore.WxcTypes.$wlvl ww ww1 ww2 ww3 ww4 ww5
                                    ret_ty GHC.Prim.Int#
                                    of {}
                                 GHC.Types.True
                                 -> case GHC.Prim.tagToEnum#
                                           @ GHC.Types.Bool
                                           (GHC.Prim.<=# ww5 ww3) of wild3 {
                                      GHC.Types.False
                                      -> case Graphics.UI.WXCore.WxcTypes.$wlvl
                                                ww
                                                ww1
                                                ww2
                                                ww3
                                                ww4
                                                ww5
                                         ret_ty GHC.Prim.Int#
                                         of {}
                                      GHC.Types.True
                                      -> GHC.Prim.+#
                                           (GHC.Prim.*# (GHC.Prim.-# ww5 ww1) (GHC.Prim.+# x1 1#))
                                           ww4 } } } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# x 0#) of wild1 {
                   GHC.Types.False -> $j (GHC.Prim.negateInt# x)
                   GHC.Types.True -> $j x }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $w$crange ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int]
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><S,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># ww1 ww3) of wild {
                   GHC.Types.False
                   -> let {
                        lvl35 :: [GHC.Types.Int] = GHC.Enum.eftInt ww ww2
                      } in
                      letrec {
                        go :: GHC.Prim.Int#
                              -> [Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Prim.Int#) ->
                          let {
                            ds :: GHC.Types.Int = GHC.Types.I# x
                          } in
                          let {
                            z :: [Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int]
                            = case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.==# x ww3) of wild1 {
                                GHC.Types.False -> go (GHC.Prim.+# x 1#)
                                GHC.Types.True
                                -> GHC.Types.[]
                                     @ (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) }
                          } in
                          letrec {
                            go1 :: [GHC.Types.Int]
                                   -> [Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int]
                              {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [GHC.Types.Int]) ->
                              case ds1 of wild1 {
                                [] -> z
                                : y ys
                                -> GHC.Types.:
                                     @ (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                                     (case y of dt { GHC.Types.I# ipv ->
                                      Graphics.UI.WXCore.WxcTypes.Point @ GHC.Types.Int dt ds })
                                     (go1 ys) }
                          } in
                          go1 lvl35
                      } in
                      go ww1
                   GHC.Types.True
                   -> GHC.Types.[]
                        @ (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  $w$creadPrec ::
    GHC.Read.Read a =>
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Graphics.UI.WXCore.WxcTypes.Point2 a
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 3, Strictness: <L,U(A,A,C(C1(U)),A)><L,U><L,U>,
     Inline: [0] -}
9090a4a2da0e7acd868a3ccce0ff38e7
  $w$creadPrec1 ::
    GHC.Read.Read a =>
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Graphics.UI.WXCore.WxcTypes.Rect2D a
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 3, Strictness: <L,U(A,A,C(C1(U)),A)><L,U><L,U>,
     Inline: [0] -}
776ad3c07a16f028f78da3aedea36e73
  $w$creadPrec2 ::
    GHC.Prim.Int#
    -> forall b.
       (Graphics.UI.WXCore.WxcTypes.TreeItem
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   @ b
                   (w :: Graphics.UI.WXCore.WxcTypes.TreeItem
                         -> Text.ParserCombinators.ReadP.P b) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww 10#) of wild2 {
                   GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                   GHC.Types.True
                   -> let {
                        lvl120 :: Text.ParserCombinators.ReadP.P b
                        = let {
                            lvl121 :: Text.ParserCombinators.ReadP.P b
                            = GHC.Read.$fReadInt_$sreadNumber
                                GHC.Read.$fReadInt2
                                Graphics.UI.WXCore.WxcTypes.$fReadTreeItem5
                                @ b
                                (\ (a1 :: Foreign.Ptr.IntPtr) ->
                                 w a1 `cast` (Sym (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0])))
                                  `cast`
                                (Nth:2
                                     (Inst (Trans
                                                (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                                          <Foreign.Ptr.IntPtr>_R))
                                                (Nth:3
                                                     (Trans
                                                          (<GHC.Types.Int>_R
                                                           ->_R (Text.ParserCombinators.ReadP.ReadP
                                                                   (Foreign.Ptr.N:IntPtr[0]))_R)
                                                          (<Text.ParserCombinators.ReadPrec.Prec>_R
                                                           ->_R Text.ParserCombinators.ReadP.N:ReadP[0]
                                                                    <GHC.Types.Int>_R)))) (Sym (Coh <b>_N
                                                                                                    (Nth:0
                                                                                                         (Trans
                                                                                                              (Nth:3
                                                                                                                   (Trans
                                                                                                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                                                                                                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                                                                                                                       <GHC.Types.Int>_R))
                                                                                                                        (<GHC.Types.Int>_R
                                                                                                                         ->_R (Text.ParserCombinators.ReadP.ReadP
                                                                                                                                 (Sym (Foreign.Ptr.N:IntPtr[0])))_R)))
                                                                                                              (Text.ParserCombinators.ReadP.N:ReadP[0]
                                                                                                                   <Foreign.Ptr.IntPtr>_R)))))))
                          } in
                          Text.Read.Lex.expect2
                            @ b
                            (\ (a3 :: Text.Read.Lex.Lexeme) ->
                             case a3 of wild {
                               DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                               Text.Read.Lex.Ident a1
                               -> case GHC.Base.eqString
                                         a1
                                         Graphics.UI.WXCore.WxcTypes.$fReadTreeItem3 of wild1 {
                                    GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                    GHC.Types.True -> lvl121 } })
                      } in
                      let {
                        k :: () -> Text.ParserCombinators.ReadP.P b
                          {- Arity: 1, Strictness: <L,A>,
                             Unfolding: InlineRule (1, True, True) (\ (a3 :: ()) -> lvl120) -}
                        = \ (a3 :: ()) -> lvl120
                      } in
                      Text.ParserCombinators.ReadP.Look
                        @ b
                        (\ (a :: GHC.Base.String) ->
                         Text.ParserCombinators.ReadP.skipSpaces2 a @ b k) }) -}
87d9fae95d73d68f37749362fbe78e2e
  $w$creadPrec3 ::
    GHC.Read.Read a =>
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Graphics.UI.WXCore.WxcTypes.Vector2 a
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 3, Strictness: <L,U(A,A,C(C1(U)),A)><L,U><L,U>,
     Inline: [0] -}
6dd5a0837112d3c77a9b2356a32a73f7
  $w$cshow :: GHC.Show.Show a => a -> a -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U(C(C1(C1(U))),A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a (w :: GHC.Show.Show a) (ww :: a) (ww1 :: a) ->
                 GHC.CString.unpackAppendCString#
                   Graphics.UI.WXCore.WxcTypes.$fShowPoint6
                   (GHC.CString.unpackAppendCString#
                      Graphics.UI.WXCore.WxcTypes.$fShowPoint5
                      (GHC.Show.showsPrec
                         @ a
                         w
                         Graphics.UI.WXCore.WxcTypes.$fShowColor6
                         ww
                         (GHC.Base.++
                            @ GHC.Types.Char
                            GHC.Show.showCommaSpace1
                            (GHC.CString.unpackAppendCString#
                               Graphics.UI.WXCore.WxcTypes.$fShowPoint4
                               (GHC.Show.showsPrec
                                  @ a
                                  w
                                  Graphics.UI.WXCore.WxcTypes.$fShowColor6
                                  ww1
                                  Graphics.UI.WXCore.WxcTypes.$fShowPoint1)))))) -}
a36e644ed4fa5fef9158b1632688f5e6
  $w$cshow1 :: GHC.Show.Show a => a -> a -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U(C(C1(C1(U))),A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a (w :: GHC.Show.Show a) (ww :: a) (ww1 :: a) ->
                 GHC.CString.unpackAppendCString#
                   Graphics.UI.WXCore.WxcTypes.$fShowSize2D3
                   (GHC.CString.unpackAppendCString#
                      Graphics.UI.WXCore.WxcTypes.$fShowSize2D2
                      (GHC.Show.showsPrec
                         @ a
                         w
                         Graphics.UI.WXCore.WxcTypes.$fShowColor6
                         ww
                         (GHC.Base.++
                            @ GHC.Types.Char
                            GHC.Show.showCommaSpace1
                            (GHC.CString.unpackAppendCString#
                               Graphics.UI.WXCore.WxcTypes.$fShowSize2D1
                               (GHC.Show.showsPrec
                                  @ a
                                  w
                                  Graphics.UI.WXCore.WxcTypes.$fShowColor6
                                  ww1
                                  Graphics.UI.WXCore.WxcTypes.$fShowPoint1)))))) -}
4719ad772a7ecdf7e80f4f876b56304b
  $w$cshow2 :: GHC.Show.Show a => a -> a -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U(C(C1(C1(U))),A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a (w :: GHC.Show.Show a) (ww :: a) (ww1 :: a) ->
                 GHC.CString.unpackAppendCString#
                   Graphics.UI.WXCore.WxcTypes.$fShowVector4
                   (GHC.CString.unpackAppendCString#
                      Graphics.UI.WXCore.WxcTypes.$fShowVector3
                      (GHC.Show.showsPrec
                         @ a
                         w
                         Graphics.UI.WXCore.WxcTypes.$fShowColor6
                         ww
                         (GHC.Base.++
                            @ GHC.Types.Char
                            GHC.Show.showCommaSpace1
                            (GHC.CString.unpackAppendCString#
                               Graphics.UI.WXCore.WxcTypes.$fShowVector1
                               (GHC.Show.showsPrec
                                  @ a
                                  w
                                  Graphics.UI.WXCore.WxcTypes.$fShowColor6
                                  ww1
                                  Graphics.UI.WXCore.WxcTypes.$fShowPoint1)))))) -}
e71f0c936211418315079628f71ffb46
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Graphics.UI.WXCore.WxcTypes.Color
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Graphics.UI.WXCore.WxcTypes.Color)
                   (w1 :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     case w `cast`
                          (Graphics.UI.WXCore.WxcTypes.N:Color[0]) of wild { GHC.Types.W# x# ->
                     case GHC.Show.$wshowSignedInt
                            0#
                            (GHC.Prim.word2Int#
                               (GHC.Prim.and# (GHC.Prim.uncheckedShiftRL# x# 24#) 255##))
                            (GHC.Types.:
                               @ GHC.Types.Char
                               Graphics.UI.WXCore.WxcTypes.$fShowColor5
                               (case GHC.Show.$wshowSignedInt
                                       0#
                                       (GHC.Prim.word2Int#
                                          (GHC.Prim.and# (GHC.Prim.uncheckedShiftRL# x# 16#) 255##))
                                       (GHC.Types.:
                                          @ GHC.Types.Char
                                          Graphics.UI.WXCore.WxcTypes.$fShowColor5
                                          (case GHC.Show.$wshowSignedInt
                                                  0#
                                                  (GHC.Prim.word2Int#
                                                     (GHC.Prim.and#
                                                        (GHC.Prim.uncheckedShiftRL# x# 8#)
                                                        255##))
                                                  (GHC.Types.:
                                                     @ GHC.Types.Char
                                                     Graphics.UI.WXCore.WxcTypes.$fShowColor5
                                                     (case GHC.Show.$wshowSignedInt
                                                             0#
                                                             (GHC.Prim.word2Int#
                                                                (GHC.Prim.and# x# 255##))
                                                             (GHC.Types.:
                                                                @ GHC.Types.Char
                                                                Graphics.UI.WXCore.WxcTypes.$fShowColor4
                                                                x) of ww4 { (#,#) ww5 ww6 ->
                                                      GHC.Types.:
                                                        @ GHC.Types.Char
                                                        ww5
                                                        ww6 })) of ww4 { (#,#) ww5 ww6 ->
                                           GHC.Types.:
                                             @ GHC.Types.Char
                                             ww5
                                             ww6 })) of ww4 { (#,#) ww5 ww6 ->
                                GHC.Types.: @ GHC.Types.Char ww5 ww6 })) of ww4 { (#,#) ww5 ww6 ->
                     GHC.Types.: @ GHC.Types.Char ww5 ww6 } }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># ww 0#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Graphics.UI.WXCore.WxcTypes.$fShowColor2
                        (g w1)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Graphics.UI.WXCore.WxcTypes.$fShowColor2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w1))) }) -}
dbfcaddb13ff176c962e92a3fc8b1192
  $w$cshowsPrec1 ::
    GHC.Show.Show a => GHC.Prim.Int# -> a -> a -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U(C(C1(C(U))),A,A)><S,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Show.Show a)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: a)
                   (ww2 :: a) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.showsPrec
                       @ a
                       w
                       Graphics.UI.WXCore.WxcTypes.$fShowColor6
                       ww1
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.showsPrec
                       @ a
                       w
                       Graphics.UI.WXCore.WxcTypes.$fShowColor6
                       ww2
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> \ (x :: GHC.Base.String) ->
                      GHC.CString.unpackAppendCString#
                        Graphics.UI.WXCore.WxcTypes.$fShowPoint6
                        (GHC.CString.unpackAppendCString#
                           Graphics.UI.WXCore.WxcTypes.$fShowPoint5
                           (f (GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Graphics.UI.WXCore.WxcTypes.$fShowPoint4
                                    (f1
                                       (GHC.CString.unpackAppendCString#
                                          Graphics.UI.WXCore.WxcTypes.$fShowPoint3
                                          x))))))
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Graphics.UI.WXCore.WxcTypes.$fShowPoint6
                           (GHC.CString.unpackAppendCString#
                              Graphics.UI.WXCore.WxcTypes.$fShowPoint5
                              (f (GHC.Base.++
                                    @ GHC.Types.Char
                                    GHC.Show.showCommaSpace1
                                    (GHC.CString.unpackAppendCString#
                                       Graphics.UI.WXCore.WxcTypes.$fShowPoint4
                                       (f1
                                          (GHC.CString.unpackAppendCString#
                                             Graphics.UI.WXCore.WxcTypes.$fShowPoint3
                                             (GHC.Types.:
                                                @ GHC.Types.Char
                                                GHC.Show.$fShow(,)2
                                                x)))))))) }) -}
852f48b1df2a82e544830aabecca1b1f
  $w$cshowsPrec2 ::
    GHC.Show.Show a =>
    GHC.Prim.Int# -> a -> a -> a -> a -> GHC.Show.ShowS
  {- Arity: 6,
     Strictness: <L,U(C(C1(C(U))),A,A)><S,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
01d503505b499d6c5b860e273c0b3f3c
  $w$cshowsPrec3 ::
    GHC.Show.Show a => GHC.Prim.Int# -> a -> a -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U(C(C1(C(U))),A,A)><S,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Show.Show a)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: a)
                   (ww2 :: a) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.showsPrec
                       @ a
                       w
                       Graphics.UI.WXCore.WxcTypes.$fShowColor6
                       ww1
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.showsPrec
                       @ a
                       w
                       Graphics.UI.WXCore.WxcTypes.$fShowColor6
                       ww2
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> \ (x :: GHC.Base.String) ->
                      GHC.CString.unpackAppendCString#
                        Graphics.UI.WXCore.WxcTypes.$fShowSize2D3
                        (GHC.CString.unpackAppendCString#
                           Graphics.UI.WXCore.WxcTypes.$fShowSize2D2
                           (f (GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Graphics.UI.WXCore.WxcTypes.$fShowSize2D1
                                    (f1
                                       (GHC.CString.unpackAppendCString#
                                          Graphics.UI.WXCore.WxcTypes.$fShowPoint3
                                          x))))))
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Graphics.UI.WXCore.WxcTypes.$fShowSize2D3
                           (GHC.CString.unpackAppendCString#
                              Graphics.UI.WXCore.WxcTypes.$fShowSize2D2
                              (f (GHC.Base.++
                                    @ GHC.Types.Char
                                    GHC.Show.showCommaSpace1
                                    (GHC.CString.unpackAppendCString#
                                       Graphics.UI.WXCore.WxcTypes.$fShowSize2D1
                                       (f1
                                          (GHC.CString.unpackAppendCString#
                                             Graphics.UI.WXCore.WxcTypes.$fShowPoint3
                                             (GHC.Types.:
                                                @ GHC.Types.Char
                                                GHC.Show.$fShow(,)2
                                                x)))))))) }) -}
776ad3c07a16f028f78da3aedea36e73
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> Graphics.UI.WXCore.WxcTypes.TreeItem
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, HasNoCafRefs, Strictness: <S,U><L,1*U(U)><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Graphics.UI.WXCore.WxcTypes.TreeItem)
                   (w1 :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Graphics.UI.WXCore.WxcTypes.$fShowTreeItem2
                        (case w `cast`
                              (Trans
                                   (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0])
                                   (Foreign.Ptr.N:IntPtr[0])) of ww2 { GHC.Types.I# ww3 ->
                         case GHC.Show.$wshowSignedInt 11# ww3 w1 of ww4 { (#,#) ww5 ww6 ->
                         GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Graphics.UI.WXCore.WxcTypes.$fShowTreeItem2
                           (case w `cast`
                                 (Trans
                                      (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0])
                                      (Foreign.Ptr.N:IntPtr[0])) of ww2 { GHC.Types.I# ww3 ->
                            case GHC.Show.$wshowSignedInt
                                   11#
                                   ww3
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.$fShow(,)2
                                      w1) of ww4 { (#,#) ww5 ww6 ->
                            GHC.Types.: @ GHC.Types.Char ww5 ww6 } })) }) -}
5c5032255e90c93d4e68da2946a06376
  $w$cshowsPrec5 ::
    GHC.Show.Show a => GHC.Prim.Int# -> a -> a -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U(C(C1(C(U))),A,A)><S,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Show.Show a)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: a)
                   (ww2 :: a) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.showsPrec
                       @ a
                       w
                       Graphics.UI.WXCore.WxcTypes.$fShowColor6
                       ww1
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.showsPrec
                       @ a
                       w
                       Graphics.UI.WXCore.WxcTypes.$fShowColor6
                       ww2
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> \ (x :: GHC.Base.String) ->
                      GHC.CString.unpackAppendCString#
                        Graphics.UI.WXCore.WxcTypes.$fShowVector4
                        (GHC.CString.unpackAppendCString#
                           Graphics.UI.WXCore.WxcTypes.$fShowVector3
                           (f (GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Graphics.UI.WXCore.WxcTypes.$fShowVector1
                                    (f1
                                       (GHC.CString.unpackAppendCString#
                                          Graphics.UI.WXCore.WxcTypes.$fShowPoint3
                                          x))))))
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Graphics.UI.WXCore.WxcTypes.$fShowVector4
                           (GHC.CString.unpackAppendCString#
                              Graphics.UI.WXCore.WxcTypes.$fShowVector3
                              (f (GHC.Base.++
                                    @ GHC.Types.Char
                                    GHC.Show.showCommaSpace1
                                    (GHC.CString.unpackAppendCString#
                                       Graphics.UI.WXCore.WxcTypes.$fShowVector1
                                       (f1
                                          (GHC.CString.unpackAppendCString#
                                             Graphics.UI.WXCore.WxcTypes.$fShowPoint3
                                             (GHC.Types.:
                                                @ GHC.Types.Char
                                                GHC.Show.$fShow(,)2
                                                x)))))))) }) -}
e17bb792dc3729b95678c277c7e0294b
  $w$s$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w :: GHC.Base.String) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.CString.unpackAppendCString#
                        Graphics.UI.WXCore.WxcTypes.$fShowPoint6
                        (GHC.CString.unpackAppendCString#
                           Graphics.UI.WXCore.WxcTypes.$fShowPoint5
                           (case GHC.Show.$wshowSignedInt
                                   0#
                                   ww1
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.showCommaSpace1
                                      (GHC.CString.unpackAppendCString#
                                         Graphics.UI.WXCore.WxcTypes.$fShowPoint4
                                         (case GHC.Show.$wshowSignedInt
                                                 0#
                                                 ww2
                                                 (GHC.CString.unpackAppendCString#
                                                    Graphics.UI.WXCore.WxcTypes.$fShowPoint3
                                                    w) of ww4 { (#,#) ww5 ww6 ->
                                          GHC.Types.:
                                            @ GHC.Types.Char
                                            ww5
                                            ww6 }))) of ww4 { (#,#) ww5 ww6 ->
                            GHC.Types.: @ GHC.Types.Char ww5 ww6 }))
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Graphics.UI.WXCore.WxcTypes.$fShowPoint6
                           (GHC.CString.unpackAppendCString#
                              Graphics.UI.WXCore.WxcTypes.$fShowPoint5
                              (case GHC.Show.$wshowSignedInt
                                      0#
                                      ww1
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         GHC.Show.showCommaSpace1
                                         (GHC.CString.unpackAppendCString#
                                            Graphics.UI.WXCore.WxcTypes.$fShowPoint4
                                            (case GHC.Show.$wshowSignedInt
                                                    0#
                                                    ww2
                                                    (GHC.CString.unpackAppendCString#
                                                       Graphics.UI.WXCore.WxcTypes.$fShowPoint3
                                                       (GHC.Types.:
                                                          @ GHC.Types.Char
                                                          GHC.Show.$fShow(,)2
                                                          w)) of ww4 { (#,#) ww5 ww6 ->
                                             GHC.Types.:
                                               @ GHC.Types.Char
                                               ww5
                                               ww6 }))) of ww4 { (#,#) ww5 ww6 ->
                               GHC.Types.: @ GHC.Types.Char ww5 ww6 }))) }) -}
1d72d8145f4cb543957d6c9315a5d1fc
  $wcolorRGB :: GHC.Real.Integral a => a -> a -> a -> GHC.Prim.Word#
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),U(A,A,A,A,A,A,A,A,C(U))><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Real.Integral a)
                   (w1 :: a)
                   (w2 :: a)
                   (w3 :: a) ->
                 case GHC.Integer.Type.integerToWord
                        (GHC.Real.toInteger @ a w w1) of wild { DEFAULT ->
                 case GHC.Integer.Type.integerToWord
                        (GHC.Real.toInteger @ a w w2) of wild1 { DEFAULT ->
                 case GHC.Integer.Type.integerToWord
                        (GHC.Real.toInteger @ a w w3) of wild2 { DEFAULT ->
                 GHC.Prim.or#
                   (GHC.Prim.or#
                      (GHC.Prim.or#
                         (GHC.Prim.uncheckedShiftL# wild 24#)
                         (GHC.Prim.uncheckedShiftL# wild1 16#))
                      (GHC.Prim.uncheckedShiftL# wild2 8#))
                   255## } } }) -}
83d963360e264d43741c7ab81f1f73bd
  $wcolorRGBA ::
    GHC.Real.Integral a => a -> a -> a -> a -> GHC.Prim.Word#
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),U(A,A,A,A,A,A,A,A,C(U))><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Real.Integral a)
                   (w1 :: a)
                   (w2 :: a)
                   (w3 :: a)
                   (w4 :: a) ->
                 case GHC.Integer.Type.integerToWord
                        (GHC.Real.toInteger @ a w w1) of wild { DEFAULT ->
                 case GHC.Integer.Type.integerToWord
                        (GHC.Real.toInteger @ a w w2) of wild1 { DEFAULT ->
                 case GHC.Integer.Type.integerToWord
                        (GHC.Real.toInteger @ a w w3) of wild2 { DEFAULT ->
                 case GHC.Integer.Type.integerToWord
                        (GHC.Real.toInteger @ a w w4) of wild3 { DEFAULT ->
                 GHC.Prim.or#
                   (GHC.Prim.or#
                      (GHC.Prim.or#
                         (GHC.Prim.uncheckedShiftL# wild 24#)
                         (GHC.Prim.uncheckedShiftL# wild1 16#))
                      (GHC.Prim.uncheckedShiftL# wild2 8#))
                   wild3 } } } }) -}
7cfcb0e2dbcf3a7d659322aca85d4e10
  $wcolourFromColor ::
    GHC.Prim.Word#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Colour () #)
  {- Arity: 2, Strictness: <S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Word#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ww of wild {
                   DEFAULT
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Word#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             wild
                             w of wild1 { (#,#) ds ds1 ->
                      case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Int# #)}
                             ds1
                             GHC.Prim.realWorld# of wild2 { (#,#) ds2 ds3 ->
                      case ds3 of wild3 {
                        DEFAULT
                        -> (# ds,
                              Graphics.UI.WXCore.WxcObject.Object
                                @ (Graphics.UI.WXCore.WxcClassTypes.TColour ())
                                ds1 #)
                        0#
                        -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                       -> GHC.Prim.State#
                                                                                            GHC.Prim.RealWorld
                                                                                       -> (# GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld,
                                                                                             GHC.Prim.Addr# #)}
                                  ds1
                                  ds of wild4 { (#,#) ds4 ds5 ->
                           Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                             @ (Graphics.UI.WXCore.WxcClassTypes.TColour ())
                             (GHC.Ptr.Ptr
                                @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                     (Graphics.UI.WXCore.WxcClassTypes.TColour ()))
                                ds5)
                             ds4 } } } }
                   18446744073709551615##
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                                    GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             w of wild1 { (#,#) ds ds1 ->
                      (# ds,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TColour ())
                           ds1 #) } }) -}
c5ee18cc74f477cec5a43ed2c6401393
  $wlvl ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Int
  {- Arity: 6, Strictness: <B,U><B,U><B,U><B,U><B,U><B,U>x,
     Inline: [0] -}
6b410d221035b6d89f45530d453b9b09
  $wlvl1 ::
    GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Color #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>, Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Prim.Addr#)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ww
                        w of wild { (#,#) ds ds1 ->
                 case GHC.Prim.narrow32Int# ds1 of wild1 {
                   DEFAULT
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                             ww
                             ds of wild2 { (#,#) ds2 ds3 ->
                      (# ds2,
                         (GHC.Types.W# ds3)
                           `cast`
                         (Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])) #) }
                   0#
                   -> (# ds,
                         GHC.Enum.$fBoundedWord_$cmaxBound
                           `cast`
                         (Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])) #) } }) -}
650e711603dbd45f9b1adc6af312fab0
  $wrectBetween ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    a -> a -> a -> a -> (# a, a, a, a #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S(LLLLC(S)LL),U(A,C(C1(U)),A,A,C(U),A,A)><S(LLLLLLLC(C(S))),U(A,A,A,A,A,A,A,C(C1(U)))><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.Classes.Ord a)
                   (ww :: a)
                   (ww1 :: a)
                   (ww2 :: a)
                   (ww3 :: a) ->
                 case GHC.Classes.min @ a w1 ww ww2 of dt { DEFAULT ->
                 case GHC.Classes.min @ a w1 ww1 ww3 of dt1 { DEFAULT ->
                 case GHC.Num.abs @ a w (GHC.Num.- @ a w ww2 ww) of dt2 { DEFAULT ->
                 case GHC.Num.abs
                        @ a
                        w
                        (GHC.Num.- @ a w ww3 ww1) of dt3 { DEFAULT ->
                 (# dt, dt1, dt2, dt3 #) } } } }) -}
181cb91737e49b705e4f9d355e81aa5e
  $wrectIsEmpty ::
    (GHC.Num.Num a, GHC.Classes.Eq a) => a -> a -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,C(U))><S(C(C(S))L),U(C(C1(U)),A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.Classes.Eq a)
                   (ww :: a)
                   (ww1 :: a) ->
                 case GHC.Classes.==
                        @ a
                        w1
                        ww
                        (GHC.Num.fromInteger
                           @ a
                           w
                           Graphics.UI.WXCore.WxcTypes.pointZero1) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> GHC.Classes.==
                        @ a
                        w1
                        ww1
                        (GHC.Num.fromInteger
                           @ a
                           w
                           Graphics.UI.WXCore.WxcTypes.pointZero1) }) -}
a72c2584b13de2cedfebe2b9c10129c5
  $wtoCBool :: GHC.Types.Bool -> GHC.Prim.Word#
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Bool) ->
                 case w of wild {
                   GHC.Types.False
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Int#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                             0#
                             GHC.Prim.realWorld# of wild1 { (#,#) ds ds1 ->
                      GHC.Prim.narrow8Word# ds1 }
                   GHC.Types.True
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Int#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                             1#
                             GHC.Prim.realWorld# of wild1 { (#,#) ds ds1 ->
                      GHC.Prim.narrow8Word# ds1 } }) -}
ae8cdb9856173157a4706348b42470f2
  $wwithCRect ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (Foreign.C.Types.CInt
        -> Foreign.C.Types.CInt
        -> Foreign.C.Types.CInt
        -> Foreign.C.Types.CInt
        -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U><L,U><L,U><L,U><C(C(C(C(S)))),1*C1(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (w :: Foreign.C.Types.CInt
                         -> Foreign.C.Types.CInt
                         -> Foreign.C.Types.CInt
                         -> Foreign.C.Types.CInt
                         -> GHC.Types.IO a) ->
                 w (GHC.Int.I32# (GHC.Prim.narrow32Int# ww))
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))
                   (GHC.Int.I32# (GHC.Prim.narrow32Int# ww1))
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))
                   (GHC.Int.I32# (GHC.Prim.narrow32Int# ww2))
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))
                   (GHC.Int.I32# (GHC.Prim.narrow32Int# ww3))
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))) -}
2a61d884d9f46bafaa11d0205ec03690
  $wwithColourPtr ::
    GHC.Prim.Word#
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
        -> GHC.Types.IO b)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,U><L,1*C1(C1(U(U,U)))><S,U>, Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   (ww :: GHC.Prim.Word#)
                   (w :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
                         -> GHC.Types.IO b)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Word#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ww
                        w1 of wild { (#,#) ds ds1 ->
                 case (w (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TColour a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <b>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld #)}
                        ds1
                        ipv of wild1 { Unit# ds3 ->
                 (# ds3, ipv1 #) } } }) -}
8ae8d48f510d4fc6b36e694260532f8b
  $wwithColourRef ::
    GHC.Base.String
    -> GHC.Prim.Word#
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
        -> GHC.Types.IO b)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 4, Strictness: <L,1*U><S,U><L,1*C1(C1(U(U,U)))><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   (w :: GHC.Base.String)
                   (ww :: GHC.Prim.Word#)
                   (w1 :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
                          -> GHC.Types.IO b)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Word#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ww
                        w2 of wild { (#,#) ds ds1 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqAddr# ds1 __NULL) of wild1 {
                   GHC.Types.False
                   -> case (w1
                              (GHC.Ptr.Ptr @ (Graphics.UI.WXCore.WxcClassTypes.TColour a) ds1))
                             `cast`
                           (GHC.Types.N:IO[0] <b>_R)
                             ds of ds2 { (#,#) ipv ipv1 ->
                      case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld #)}
                             ds1
                             ipv of wild2 { Unit# ds3 ->
                      (# ds3, ipv1 #) } }
                   GHC.Types.True
                   -> Graphics.UI.WXCore.WxcTypes.colorFromColour6 @ b w ds } }) -}
1f3e903a3e0248926c065ddbd0705f41
  $wwithTreeItemIdPtr ::
    GHC.Prim.Int#
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
        -> GHC.Types.IO b)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,U><L,1*C1(C1(U(U,U)))><S,U>, Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   (ww :: GHC.Prim.Int#)
                   (w :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
                         -> GHC.Types.IO b)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Int#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ww
                        w1 of wild { (#,#) ds ds1 ->
                 case (w (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <b>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld #)}
                        ds1
                        ipv of wild1 { Unit# ds3 ->
                 (# ds3, ipv1 #) } } }) -}
1297f7c5708a93832422ad1df4efcf3b
  $wwithTreeItemIdRef ::
    GHC.Base.String
    -> GHC.Prim.Int#
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
        -> GHC.Types.IO b)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 4, Strictness: <L,1*U><S,U><L,1*C1(C1(U(U,U)))><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   @ b
                   (w :: GHC.Base.String)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
                          -> GHC.Types.IO b)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Int#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ww
                        w2 of wild { (#,#) ds ds1 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqAddr# ds1 __NULL) of wild1 {
                   GHC.Types.False
                   -> case (w1
                              (GHC.Ptr.Ptr
                                 @ (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
                                 ds1))
                             `cast`
                           (GHC.Types.N:IO[0] <b>_R)
                             ds of ds2 { (#,#) ipv ipv1 ->
                      case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld #)}
                             ds1
                             ipv of wild2 { Unit# ds3 ->
                      (# ds3, ipv1 #) } }
                   GHC.Types.True
                   -> Graphics.UI.WXCore.WxcTypes.colorFromColour6 @ b w ds } }) -}
f52dc38f655da6202a25225730462c8e
  $wwithWxRectPtr ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxRect r)
        -> GHC.Types.IO a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,U><S,U><S,U><S,U><L,1*C1(C1(U))><S,U>, Inline: [0],
     Unfolding: (\ @ r
                   @ a
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (w :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxRect r)
                         -> GHC.Types.IO a)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.getMaskingState# w1 of ds { (#,#) ipv ipv1 ->
                 case ipv1 of ds1 {
                   DEFAULT
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Int#
                                                                                  -> GHC.Prim.Int#
                                                                                  -> GHC.Prim.Int#
                                                                                  -> GHC.Prim.Int#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             (GHC.Prim.narrow32Int# ww)
                             (GHC.Prim.narrow32Int# ww1)
                             (GHC.Prim.narrow32Int# ww2)
                             (GHC.Prim.narrow32Int# ww3)
                             ipv of wild { (#,#) ds2 ds3 ->
                      case GHC.Prim.catch#
                             @ a
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskAsyncExceptions#
                                @ a
                                (w (GHC.Ptr.Ptr
                                      @ (Graphics.UI.WXCore.WxcClassTypes.TWxRect r)
                                      ds3))
                                  `cast`
                                (Nth:2
                                     (Trans
                                          (<GHC.Types.IO a>_R ->_R GHC.Types.N:IO[0] <a>_R)
                                          (GHC.Types.N:IO[0] <a>_R
                                           ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       a #)>_R))))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                          -> GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                          -> (# GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld #)}
                                     ds3
                                     s of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ a e1 ds4 })
                             ds2 of ds4 { (#,#) ipv4 ipv5 ->
                      case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld #)}
                             ds3
                             ipv4 of wild1 { Unit# ds5 ->
                      (# ds5, ipv5 #) } } }
                   0#
                   -> GHC.Prim.maskAsyncExceptions#
                        @ a
                        (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Int#
                                                                                     -> GHC.Prim.Int#
                                                                                     -> GHC.Prim.Int#
                                                                                     -> GHC.Prim.Int#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Prim.Addr# #)}
                                (GHC.Prim.narrow32Int# ww)
                                (GHC.Prim.narrow32Int# ww1)
                                (GHC.Prim.narrow32Int# ww2)
                                (GHC.Prim.narrow32Int# ww3)
                                s of wild { (#,#) ds2 ds3 ->
                         case GHC.Prim.catch#
                                @ a
                                @ GHC.Exception.SomeException
                                (GHC.Prim.unmaskAsyncExceptions#
                                   @ a
                                   (w (GHC.Ptr.Ptr
                                         @ (Graphics.UI.WXCore.WxcClassTypes.TWxRect r)
                                         ds3))
                                     `cast`
                                   (Nth:2
                                        (Trans
                                             (<GHC.Types.IO a>_R ->_R GHC.Types.N:IO[0] <a>_R)
                                             (GHC.Types.N:IO[0] <a>_R
                                              ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                                    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                          a #)>_R))))
                                (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                   (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                             -> GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld
                                                                                             -> (# GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld #)}
                                        ds3
                                        s1 of wild1 { Unit# ds4 ->
                                 GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ a e1 ds4 })
                                ds2 of ds4 { (#,#) ipv4 ipv5 ->
                         case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld #)}
                                ds3
                                ipv4 of wild1 { Unit# ds5 ->
                         (# ds5, ipv5 #) } } })
                        ipv
                   1#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Int#
                                                                                  -> GHC.Prim.Int#
                                                                                  -> GHC.Prim.Int#
                                                                                  -> GHC.Prim.Int#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             (GHC.Prim.narrow32Int# ww)
                             (GHC.Prim.narrow32Int# ww1)
                             (GHC.Prim.narrow32Int# ww2)
                             (GHC.Prim.narrow32Int# ww3)
                             ipv of wild { (#,#) ds2 ds3 ->
                      case GHC.Prim.catch#
                             @ a
                             @ GHC.Exception.SomeException
                             (GHC.Prim.maskUninterruptible#
                                @ a
                                (w (GHC.Ptr.Ptr
                                      @ (Graphics.UI.WXCore.WxcClassTypes.TWxRect r)
                                      ds3))
                                  `cast`
                                (Nth:2
                                     (Trans
                                          (<GHC.Types.IO a>_R ->_R GHC.Types.N:IO[0] <a>_R)
                                          (GHC.Types.N:IO[0] <a>_R
                                           ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       a #)>_R))))
                             (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                          -> GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                          -> (# GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld #)}
                                     ds3
                                     s of wild1 { Unit# ds4 ->
                              GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ a e1 ds4 })
                             ds2 of ds4 { (#,#) ipv4 ipv5 ->
                      case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld #)}
                             ds3
                             ipv4 of wild1 { Unit# ds5 ->
                      (# ds5, ipv5 #) } } } } }) -}
42855c8c0ac7e8124c27108ff4ad40f6
  $wxs :: GHC.Prim.Int# -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m2, Inline: [0] -}
2cbbd35da3880e70713cc692299e86f0
  $wxs1 :: GHC.Prim.Int# -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m2, Inline: [0] -}
ff899ed8eb9f9c7e5ef9d81a0e8caa30
  $wxs2 :: GHC.Prim.Int# -> [Foreign.C.Types.CWchar]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m2, Inline: [0] -}
2c9ac568255e9d714a99e33eeba847e5
  $wxs3 :: GHC.Prim.Int# -> [Foreign.C.Types.CWchar]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m2, Inline: [0] -}
e71f0c936211418315079628f71ffb46
  newtype Color = Color GHC.Types.Word
057a6a0557f975a87054d8195b800f46
  type EventId = GHC.Types.Int
39e83338e53c20cdd3f242e677579ae2
  type Id = GHC.Types.Int
62d950624a9e4afd134e63c3a7b4fb0a
  type Point = Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int
778cc0f54383ec0a6368e3b3ff41f7ae
  type role Point2 nominal
  data GHC.Num.Num a => Point2 a = Point {pointX :: !a, pointY :: !a}
5998eb7d81734a1bbe4efd0f909940ce
  type Rect = Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Int
9090a4a2da0e7acd868a3ccce0ff38e7
  type role Rect2D nominal
  data GHC.Num.Num a => Rect2D a
    = Rect {rectLeft :: !a,
            rectTop :: !a,
            rectWidth :: !a,
            rectHeight :: !a}
2fadbc88a8582bd46b5ec14ab0f7db0c
  type Size = Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Int
644abb7df73ac06df808a85ca9676657
  type role Size2D nominal
  data GHC.Num.Num a => Size2D a = Size {sizeW :: !a, sizeH :: !a}
7c3d3a275ada440f0d2c0d4305e65956
  type Style = GHC.Types.Int
776ad3c07a16f028f78da3aedea36e73
  newtype TreeItem = TreeItem Foreign.Ptr.IntPtr
553fca1fdc2e671ed4e4502356009de5
  type Vector = Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Int
87d9fae95d73d68f37749362fbe78e2e
  type role Vector2 nominal
  data GHC.Num.Num a => Vector2 a = Vector {vecX :: !a, vecY :: !a}
57f33e984bbe7a1a6e9939456526e1fe
  colorAlpha ::
    GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Color -> a
  {- Arity: 2,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><L,1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Color) ->
                 GHC.Num.fromInteger
                   @ a
                   $dNum
                   (case ds
                           `cast`
                         (Graphics.UI.WXCore.WxcTypes.N:Color[0]) of wild { GHC.Types.W# x# ->
                    GHC.Integer.Type.wordToInteger (GHC.Prim.and# x# 255##) })) -}
7567005533e5f42f06d689ce65a22627
  colorBlue ::
    GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Color -> a
  {- Arity: 2,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><L,1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Color) ->
                 GHC.Num.fromInteger
                   @ a
                   $dNum
                   (case ds
                           `cast`
                         (Graphics.UI.WXCore.WxcTypes.N:Color[0]) of wild { GHC.Types.W# x# ->
                    GHC.Integer.Type.wordToInteger
                      (GHC.Prim.and# (GHC.Prim.uncheckedShiftRL# x# 8#) 255##) })) -}
c1bfe96b81aac3dc58e33b199533b867
  colorFromColour ::
    Graphics.UI.WXCore.WxcClassTypes.Colour a
    -> GHC.Types.IO Graphics.UI.WXCore.WxcTypes.Color
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.colorFromColour1
                  `cast`
                (forall (a :: <*>_N).
                 <Graphics.UI.WXCore.WxcClassTypes.Colour a>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Color>_R)) -}
3c144381fe5ee5b37f8d6012b16e8561
  colorFromColour1 ::
    Graphics.UI.WXCore.WxcClassTypes.Colour a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Color #)
  {- Arity: 2, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (c :: Graphics.UI.WXCore.WxcClassTypes.Colour a) ->
                 Graphics.UI.WXCore.WxcTypes.colorFromColour5
                   @ (Graphics.UI.WXCore.WxcClassTypes.CWxObject
                        (Graphics.UI.WXCore.WxcClassTypes.CColour a))
                   @ Graphics.UI.WXCore.WxcTypes.Color
                   Graphics.UI.WXCore.WxcTypes.colorFromColour3
                   c
                   (Graphics.UI.WXCore.WxcTypes.colorFromColour2 @ a)
                     `cast`
                   (<GHC.Ptr.Ptr
                       (Graphics.UI.WXCore.WxcClassTypes.CWxObject
                          (Graphics.UI.WXCore.WxcClassTypes.CColour a))>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Graphics.UI.WXCore.WxcTypes.Color>_R))) -}
54d17c00e102f3a5f5571b81e72f5391
  colorFromColour2 ::
    GHC.Ptr.Ptr
      (Graphics.UI.WXCore.WxcClassTypes.CWxObject
         (Graphics.UI.WXCore.WxcClassTypes.CColour a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Color #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Ptr.Ptr
                           (Graphics.UI.WXCore.WxcClassTypes.CWxObject
                              (Graphics.UI.WXCore.WxcClassTypes.CColour a)))
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { GHC.Ptr.Ptr ww1 ->
                 Graphics.UI.WXCore.WxcTypes.$wlvl1 @ a ww1 w1 }) -}
6c79469f8887266175544066eee602db
  colorFromColour3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Graphics.UI.WXCore.WxcTypes.colorFromColour4) -}
5701888c2cb6e49652859c7ec2ba234e
  colorFromColour4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("colorFromColour"#) -}
d9e4fa3e95e0b1866103180919f2e201
  colorFromColour5 ::
    GHC.Base.String
    -> Graphics.UI.WXCore.WxcObject.Object a
    -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 4, Strictness: <L,1*U><S,1*U><L,1*C1(C1(U(U,U)))><S,U>,
     Unfolding: (\ @ a
                   @ b
                   (msg :: GHC.Base.String)
                   (obj :: Graphics.UI.WXCore.WxcObject.Object a)
                   (f :: GHC.Ptr.Ptr a -> GHC.Types.IO b)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case obj of wild {
                   Graphics.UI.WXCore.WxcObject.Object dt
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# dt __NULL) of wild1 {
                        GHC.Types.False
                        -> (f (GHC.Ptr.Ptr @ a dt)) `cast` (GHC.Types.N:IO[0] <b>_R) eta
                        GHC.Types.True
                        -> Graphics.UI.WXCore.WxcTypes.colorFromColour6 @ b msg eta }
                   Graphics.UI.WXCore.WxcObject.Managed fp
                   -> case fp of wild1 { GHC.ForeignPtr.ForeignPtr ds2 r ->
                      case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds2
                             eta of wild2 { (#,#) ds ds1 ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqAddr# ds1 __NULL) of wild4 {
                        GHC.Types.False
                        -> case (f (GHC.Ptr.Ptr @ a ds1)) `cast` (GHC.Types.N:IO[0] <b>_R)
                                  ds of ds3 { (#,#) ipv ipv1 ->
                           case GHC.Prim.touch#
                                  @ 'GHC.Types.LiftedRep
                                  @ GHC.ForeignPtr.ForeignPtrContents
                                  r
                                  ipv of s' { DEFAULT ->
                           (# s', ipv1 #) } }
                        GHC.Types.True
                        -> Graphics.UI.WXCore.WxcTypes.colorFromColour6
                             @ b
                             msg
                             ds } } } }) -}
1200a1dee86c1b4da264e5572ecf3278
  colorFromColour6 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 2, Strictness: <B,1*U><B,U>x -}
ffd188c45094de5dd18fffc30bc41f69
  colorFromInt :: GHC.Types.Int -> Graphics.UI.WXCore.WxcTypes.Color
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.colorFromInt1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])) -}
7b1b42862f997e8435b32ff6b1f6f5a5
  colorFromInt1 :: GHC.Types.Int -> GHC.Types.Word
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (colr :: GHC.Types.Int) ->
                 case colr of ww { GHC.Types.I# ww1 ->
                 GHC.Types.W#
                   (GHC.Prim.or#
                      (GHC.Prim.or#
                         (GHC.Prim.or#
                            (GHC.Prim.uncheckedShiftL#
                               (GHC.Prim.int2Word#
                                  (GHC.Prim.andI# (GHC.Prim.uncheckedIShiftRA# ww1 16#) 255#))
                               24#)
                            (GHC.Prim.uncheckedShiftL#
                               (GHC.Prim.int2Word#
                                  (GHC.Prim.andI# (GHC.Prim.uncheckedIShiftRA# ww1 8#) 255#))
                               16#))
                         (GHC.Prim.uncheckedShiftL#
                            (GHC.Prim.int2Word# (GHC.Prim.andI# ww1 255#))
                            8#))
                      255##) }) -}
fbd8980d0761205992f4a0aa6f95ec0c
  colorGreen ::
    GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Color -> a
  {- Arity: 2,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><L,1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Color) ->
                 GHC.Num.fromInteger
                   @ a
                   $dNum
                   (case ds
                           `cast`
                         (Graphics.UI.WXCore.WxcTypes.N:Color[0]) of wild { GHC.Types.W# x# ->
                    GHC.Integer.Type.wordToInteger
                      (GHC.Prim.and# (GHC.Prim.uncheckedShiftRL# x# 16#) 255##) })) -}
21e7aa2107c9533e587f40b39241ef0d
  colorIsOk :: Graphics.UI.WXCore.WxcTypes.Color -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Color) ->
                 case ds
                        `cast`
                      (Graphics.UI.WXCore.WxcTypes.N:Color[0]) of wild { GHC.Types.W# x ->
                 case x of wild1 {
                   DEFAULT -> GHC.Types.True
                   18446744073709551615## -> GHC.Types.False } }) -}
2c1978f466640e43376de05269f493b5
  colorOk :: Graphics.UI.WXCore.WxcTypes.Color -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.colorIsOk -}
1479bddb46cc312566dc8b52a03c44b3
  colorRGB ::
    GHC.Real.Integral a =>
    a -> a -> a -> Graphics.UI.WXCore.WxcTypes.Color
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),U(A,A,A,A,A,A,A,A,C(U))><L,U><L,U><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.colorRGB1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Real.Integral a>_R
                 ->_R <a>_R
                 ->_R <a>_R
                 ->_R <a>_R
                 ->_R Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])) -}
0fb5e341aee80018486189a32b1fc307
  colorRGB1 :: GHC.Real.Integral a => a -> a -> a -> GHC.Types.Word
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),U(A,A,A,A,A,A,A,A,C(U))><L,U><L,U><L,U>m,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a (w :: GHC.Real.Integral a) (w1 :: a) (w2 :: a) (w3 :: a) ->
                 case Graphics.UI.WXCore.WxcTypes.$wcolorRGB
                        @ a
                        w
                        w1
                        w2
                        w3 of ww { DEFAULT ->
                 GHC.Types.W# ww }) -}
3780d8d7fca5fe48d01b485667494859
  colorRGBA ::
    GHC.Real.Integral a =>
    a -> a -> a -> a -> Graphics.UI.WXCore.WxcTypes.Color
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),U(A,A,A,A,A,A,A,A,C(U))><L,U><L,U><L,U><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.colorRGBA1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Real.Integral a>_R
                 ->_R <a>_R
                 ->_R <a>_R
                 ->_R <a>_R
                 ->_R <a>_R
                 ->_R Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])) -}
8b61025c2ee144adc26585a9134dd4f7
  colorRGBA1 ::
    GHC.Real.Integral a => a -> a -> a -> a -> GHC.Types.Word
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),U(A,A,A,A,A,A,A,A,C(U))><L,U><L,U><L,U><L,U>m,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ a
                   (w :: GHC.Real.Integral a)
                   (w1 :: a)
                   (w2 :: a)
                   (w3 :: a)
                   (w4 :: a) ->
                 case Graphics.UI.WXCore.WxcTypes.$wcolorRGBA
                        @ a
                        w
                        w1
                        w2
                        w3
                        w4 of ww { DEFAULT ->
                 GHC.Types.W# ww }) -}
b99581fb888354f243a6972b1c78b840
  colorRed :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Color -> a
  {- Arity: 2,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><L,1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Color) ->
                 GHC.Num.fromInteger
                   @ a
                   $dNum
                   (case ds
                           `cast`
                         (Graphics.UI.WXCore.WxcTypes.N:Color[0]) of wild { GHC.Types.W# x# ->
                    GHC.Integer.Type.wordToInteger
                      (GHC.Prim.and# (GHC.Prim.uncheckedShiftRL# x# 24#) 255##) })) -}
351e43b7c3c28485e114e2a43dbd9d12
  colourCreate ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (0, False, False)
                (\ @ a (ds :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ds of wild { (#,#) ds1 ds2 ->
                 (# ds1,
                    GHC.Ptr.Ptr
                      @ (Graphics.UI.WXCore.WxcClassTypes.TColour a)
                      ds2 #) })
                  `cast`
                (forall (a :: <*>_N).
                 Sym (GHC.Types.N:IO[0]
                          <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)>_R)) -}
e85b5a9005b740f8ae639b31fdeb8930
  colourFromColor ::
    Graphics.UI.WXCore.WxcTypes.Color
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Colour ())
  {- Arity: 2, Strictness: <S(S),1*U(1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.colourFromColor1
                  `cast`
                (<Graphics.UI.WXCore.WxcTypes.Color>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Colour ()>_R)) -}
2e66f5bf109f89ab09385e3c1e4c44aa
  colourFromColor1 ::
    Graphics.UI.WXCore.WxcTypes.Color
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Colour () #)
  {- Arity: 2, Strictness: <S(S),1*U(1*U)><S,U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Graphics.UI.WXCore.WxcTypes.Color)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w `cast`
                      (Graphics.UI.WXCore.WxcTypes.N:Color[0]) of ww { GHC.Types.W# ww1 ->
                 Graphics.UI.WXCore.WxcTypes.$wcolourFromColor ww1 w1 }) -}
f6f54d2cc46c85a98fff6094533d5b98
  colourSafeDelete ::
    GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
    -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (1, False, False)
                (\ @ a
                   (ds :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)) ->
                 case ds of ds1 { GHC.Ptr.Ptr ds2 ->
                 (\ (ds3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                              -> GHC.Prim.State#
                                                                                   GHC.Prim.RealWorld
                                                                              -> (# GHC.Prim.State#
                                                                                      GHC.Prim.RealWorld #)}
                         ds2
                         ds3 of wild { Unit# ds4 ->
                  (# ds4, GHC.Tuple.() #) })
                   `cast`
                 (Sym (GHC.Types.N:IO[0] <()>_R)) }) -}
e350a737b0bf8d9358c78b87d2a87cb8
  fromCBool :: Foreign.C.Types.CBool -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Foreign.C.Types.CBool) ->
                 case x `cast`
                      (Foreign.C.Types.N:CBool[0]) of ds { GHC.Word.W8# ds1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Word#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds1
                        GHC.Prim.realWorld# of wild { (#,#) ds2 ds3 ->
                 case ds3 of wild1 {
                   DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } } }) -}
c1b3120e1bad0cecf853e35ec19bf5d2
  fromCChar :: Foreign.C.Types.CChar -> GHC.Types.Char
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Foreign.C.String.castCCharToChar -}
3951af8dfffb616fff87c087503dfbf3
  fromCDouble :: Foreign.C.Types.CDouble -> GHC.Types.Double
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.fromCDouble1
                  `cast`
                (<Foreign.C.Types.CDouble>_R ->_R Foreign.C.Types.N:CDouble[0]) -}
0bee67942c6c18abe4f72cba2c2f3db2
  fromCDouble1 :: Foreign.C.Types.CDouble -> Foreign.C.Types.CDouble
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (cd :: Foreign.C.Types.CDouble) -> cd) -}
f71ec1391cbe089c78f164eb4f93079d
  fromCInt :: Foreign.C.Types.CInt -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ci :: Foreign.C.Types.CInt) ->
                 case ci
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x# ->
                 GHC.Types.I# x# }) -}
e07ef7901a04e991ee1c060ec7d82320
  fromCIntPtr :: Foreign.C.Types.CIntPtr -> Foreign.Ptr.IntPtr
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ci :: Foreign.C.Types.CIntPtr) ->
                 case ci
                        `cast`
                      (Foreign.C.Types.N:CIntPtr[0]) of wild { GHC.Int.I64# x# ->
                 (GHC.Types.I# x#) `cast` (Sym (Foreign.Ptr.N:IntPtr[0])) }) -}
9f8d4f6eb4eed7f494da22e952cea091
  fromCPoint ::
    Foreign.C.Types.CInt
    -> Foreign.C.Types.CInt
    -> Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U)><S,1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Foreign.C.Types.CInt) (y :: Foreign.C.Types.CInt) ->
                 case x `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x# ->
                 case y `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild1 { GHC.Int.I32# x#1 ->
                 Graphics.UI.WXCore.WxcTypes.Point
                   @ GHC.Types.Int
                   (GHC.Types.I# x#)
                   (GHC.Types.I# x#1) } }) -}
a9e406c0802056f48c35ebd47b7c3056
  fromCPointDouble ::
    Foreign.C.Types.CDouble
    -> Foreign.C.Types.CDouble
    -> Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>m,
     Unfolding: InlineRule (0, True, True)
                (Graphics.UI.WXCore.WxcTypes.$WPoint @ GHC.Types.Double)
                  `cast`
                (Sym (Foreign.C.Types.N:CDouble[0])
                 ->_R Sym (Foreign.C.Types.N:CDouble[0])
                 ->_R <Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double>_R) -}
7a48bf0d3721ab980e1b4cbfb23ea4f0
  fromCRect ::
    Foreign.C.Types.CInt
    -> Foreign.C.Types.CInt
    -> Foreign.C.Types.CInt
    -> Foreign.C.Types.CInt
    -> Graphics.UI.WXCore.WxcTypes.Rect
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U(U)><S,1*U(U)><S,1*U(U)><S,1*U(U)>m,
     Unfolding: InlineRule (4, True, False)
                (\ (x :: Foreign.C.Types.CInt)
                   (y :: Foreign.C.Types.CInt)
                   (w :: Foreign.C.Types.CInt)
                   (h :: Foreign.C.Types.CInt) ->
                 case x `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x# ->
                 case y `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild1 { GHC.Int.I32# x#1 ->
                 case w `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild2 { GHC.Int.I32# x#2 ->
                 case h `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild3 { GHC.Int.I32# x#3 ->
                 Graphics.UI.WXCore.WxcTypes.Rect
                   @ GHC.Types.Int
                   (GHC.Types.I# x#)
                   (GHC.Types.I# x#1)
                   (GHC.Types.I# x#2)
                   (GHC.Types.I# x#3) } } } }) -}
57509953231d9795816cfa857daa3d7b
  fromCRectDouble ::
    Foreign.C.Types.CDouble
    -> Foreign.C.Types.CDouble
    -> Foreign.C.Types.CDouble
    -> Foreign.C.Types.CDouble
    -> Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><S,U><S,U><S,U>m,
     Unfolding: InlineRule (0, True, True)
                (Graphics.UI.WXCore.WxcTypes.$WRect @ GHC.Types.Double)
                  `cast`
                (Sym (Foreign.C.Types.N:CDouble[0])
                 ->_R Sym (Foreign.C.Types.N:CDouble[0])
                 ->_R Sym (Foreign.C.Types.N:CDouble[0])
                 ->_R Sym (Foreign.C.Types.N:CDouble[0])
                 ->_R <Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double>_R) -}
c5d54279a30aaeb26c7579a34739710f
  fromCSize ::
    Foreign.C.Types.CInt
    -> Foreign.C.Types.CInt -> Graphics.UI.WXCore.WxcTypes.Size
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U)><S,1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Foreign.C.Types.CInt) (h :: Foreign.C.Types.CInt) ->
                 case w `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x# ->
                 case h `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild1 { GHC.Int.I32# x#1 ->
                 Graphics.UI.WXCore.WxcTypes.Size
                   @ GHC.Types.Int
                   (GHC.Types.I# x#)
                   (GHC.Types.I# x#1) } }) -}
b386639a5906a5a25eb8d589d1e33bed
  fromCSizeDouble ::
    Foreign.C.Types.CDouble
    -> Foreign.C.Types.CDouble
    -> Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>m,
     Unfolding: InlineRule (0, True, True)
                (Graphics.UI.WXCore.WxcTypes.$WSize @ GHC.Types.Double)
                  `cast`
                (Sym (Foreign.C.Types.N:CDouble[0])
                 ->_R Sym (Foreign.C.Types.N:CDouble[0])
                 ->_R <Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double>_R) -}
74d72f0c28b1ff92fe035b34ce68e18c
  fromCVector ::
    Foreign.C.Types.CInt
    -> Foreign.C.Types.CInt -> Graphics.UI.WXCore.WxcTypes.Vector
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U)><S,1*U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Foreign.C.Types.CInt) (y :: Foreign.C.Types.CInt) ->
                 case x `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x# ->
                 case y `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild1 { GHC.Int.I32# x#1 ->
                 Graphics.UI.WXCore.WxcTypes.Vector
                   @ GHC.Types.Int
                   (GHC.Types.I# x#)
                   (GHC.Types.I# x#1) } }) -}
a73ad07d44406b5eb8d9f7b6086f10d9
  fromCVectorDouble ::
    Foreign.C.Types.CDouble
    -> Foreign.C.Types.CDouble
    -> Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>m,
     Unfolding: InlineRule (0, True, True)
                (Graphics.UI.WXCore.WxcTypes.$WVector @ GHC.Types.Double)
                  `cast`
                (Sym (Foreign.C.Types.N:CDouble[0])
                 ->_R Sym (Foreign.C.Types.N:CDouble[0])
                 ->_R <Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double>_R) -}
272bf375842e1ac50d000b8651d07467
  fromColor ::
    GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Color -> a
  {- Arity: 2,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><L,1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Color) ->
                 GHC.Num.fromInteger
                   @ a
                   $dNum
                   (case ds
                           `cast`
                         (Graphics.UI.WXCore.WxcTypes.N:Color[0]) of wild { GHC.Types.W# x# ->
                    GHC.Integer.Type.wordToInteger x# })) -}
d191827c9e14b11ba8f3c97d263a8d7b
  intFromColor :: Graphics.UI.WXCore.WxcTypes.Color -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (colr :: Graphics.UI.WXCore.WxcTypes.Color) ->
                 case colr
                        `cast`
                      (Graphics.UI.WXCore.WxcTypes.N:Color[0]) of wild { GHC.Types.W# x# ->
                 GHC.Types.I#
                   (GHC.Prim.orI#
                      (GHC.Prim.orI#
                         (GHC.Prim.uncheckedIShiftL#
                            (GHC.Prim.word2Int#
                               (GHC.Prim.and# (GHC.Prim.uncheckedShiftRL# x# 24#) 255##))
                            16#)
                         (GHC.Prim.uncheckedIShiftL#
                            (GHC.Prim.word2Int#
                               (GHC.Prim.and# (GHC.Prim.uncheckedShiftRL# x# 16#) 255##))
                            8#))
                      (GHC.Prim.word2Int#
                         (GHC.Prim.and# (GHC.Prim.uncheckedShiftRL# x# 8#) 255##))) }) -}
07b419a2acb4056c95f361b1f00f3ded
  managedObjectFromPtr ::
    GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxObject a)
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.WxObject a)
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.managedObjectFromPtr1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxObject a)>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.WxObject a>_R)) -}
9bac2831a72161d45e7a67e4aeb1b4f1
  managedObjectFromPtr1 ::
    GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxObject a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.WxObject a #)
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (p :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxObject a))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case p of ds { GHC.Ptr.Ptr ds1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ds1
                        s of wild { (#,#) ds2 ds3 ->
                 Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                   @ (Graphics.UI.WXCore.WxcClassTypes.TWxObject a)
                   (GHC.Ptr.Ptr
                      @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                           (Graphics.UI.WXCore.WxcClassTypes.TWxObject a))
                      ds3)
                   ds2 } }) -}
0cc5ca4a16a55e512b60a364a326e8d6
  objectDelete ::
    Graphics.UI.WXCore.WxcClassTypes.WxObject a -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.objectDelete1
                  `cast`
                (forall (a :: <*>_N).
                 <Graphics.UI.WXCore.WxcClassTypes.WxObject a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
5c7b3671ba9a5f47076a1e33b6503642
  objectDelete1 ::
    Graphics.UI.WXCore.WxcClassTypes.WxObject a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (obj :: Graphics.UI.WXCore.WxcClassTypes.WxObject a)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case obj of wild {
                   Graphics.UI.WXCore.WxcObject.Object ipv
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld #)}
                             ipv
                             eta of wild1 { Unit# ds ->
                      (# ds, GHC.Tuple.() #) }
                   Graphics.UI.WXCore.WxcObject.Managed _fp
                   -> case _fp of wild1 { GHC.ForeignPtr.ForeignPtr ds2 r ->
                      case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld #)}
                             ds2
                             eta of wild2 { Unit# ds ->
                      case GHC.Prim.touch#
                             @ 'GHC.Types.LiftedRep
                             @ GHC.ForeignPtr.ForeignPtrContents
                             r
                             ds of s' { DEFAULT ->
                      (# s', GHC.Tuple.() #) } } } }) -}
94fc05e88e22065f9bf56e1403078fe8
  point ::
    GHC.Num.Num a => a -> a -> Graphics.UI.WXCore.WxcTypes.Point2 a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,U><S,U>m,
     Unfolding: InlineRule (3, True, True)
                (\ @ a ($dNum :: GHC.Num.Num a) (x :: a) (y :: a) ->
                 Graphics.UI.WXCore.WxcTypes.$WPoint @ a x y) -}
2fa6308cf354d528213ed48d06b88297
  pointFromSize ::
    GHC.Num.Num a =>
    Graphics.UI.WXCore.WxcTypes.Size
    -> Graphics.UI.WXCore.WxcTypes.Point2 a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),U(A,A,A,A,A,A,C(U))><S(SS),1*U(U(U),U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: Graphics.UI.WXCore.WxcTypes.Size) ->
                 case w1 of ww { Graphics.UI.WXCore.WxcTypes.Size ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        (GHC.Integer.Type.smallInteger ww4) of dt { DEFAULT ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        (GHC.Integer.Type.smallInteger ww6) of dt1 { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Point @ a dt dt1 } } } } }) -}
904140fda5c78c1d27a9342cb70645c8
  pointFromVec ::
    GHC.Num.Num a =>
    Graphics.UI.WXCore.WxcTypes.Vector
    -> Graphics.UI.WXCore.WxcTypes.Point2 a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),U(A,A,A,A,A,A,C(U))><S(SS),1*U(U(U),U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: Graphics.UI.WXCore.WxcTypes.Vector) ->
                 case w1 of ww { Graphics.UI.WXCore.WxcTypes.Vector ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        (GHC.Integer.Type.smallInteger ww4) of dt { DEFAULT ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        (GHC.Integer.Type.smallInteger ww6) of dt1 { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Point @ a dt dt1 } } } } }) -}
f7f121aa73f2993f96d3124556f9c48d
  pointNull :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Point2 a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLC(S)LLL),U(A,A,A,1*C1(U),A,A,1*C1(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: GHC.Num.Num a) ->
                 case GHC.Num.negate
                        @ a
                        w
                        (GHC.Num.fromInteger
                           @ a
                           w
                           Graphics.UI.WXCore.WxcTypes.pointNull1) of dt { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Point @ a dt dt }) -}
eea8621264894bc0b466c3b1ec8978b0
  pointNull1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  pointX ::
    GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Point2 a -> a
  RecSel Left Graphics.UI.WXCore.WxcTypes.Point2
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SL),1*U(U,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Point ds1 ds2 ->
                 ds1 }) -}
778cc0f54383ec0a6368e3b3ff41f7ae
  pointY ::
    GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Point2 a -> a
  RecSel Left Graphics.UI.WXCore.WxcTypes.Point2
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(LS),1*U(A,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Point ds1 ds2 ->
                 ds2 }) -}
70745ae4e6fb4b00510a098c8b2a9d09
  pointZero :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Point2 a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: GHC.Num.Num a) ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        Graphics.UI.WXCore.WxcTypes.pointZero1 of dt { DEFAULT ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        Graphics.UI.WXCore.WxcTypes.pointZero1 of dt1 { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Point @ a dt dt1 } }) -}
27e6e5d50d09f65ff69e4b83bf90cafd
  pointZero1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
cb526e5ece862db2acaa0c9170746343
  pt ::
    GHC.Num.Num a => a -> a -> Graphics.UI.WXCore.WxcTypes.Point2 a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,U><S,U>m,
     Unfolding: InlineRule (3, True, True)
                (\ @ a ($dNum :: GHC.Num.Num a) (x :: a) (y :: a) ->
                 Graphics.UI.WXCore.WxcTypes.$WPoint @ a x y) -}
01bcee04d93138bb057664cf5f526526
  ptrCast :: GHC.Ptr.Ptr a -> GHC.Ptr.Ptr b
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Ptr.castPtr1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <GHC.Ptr.Ptr a>_R ->_R (GHC.Ptr.Ptr <a, b>)_R) -}
b9b01463a2bab62811a6a3c70f98554d
  ptrIsNull :: GHC.Ptr.Ptr a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (p :: GHC.Ptr.Ptr a) ->
                 case p of wild { GHC.Ptr.Ptr a1 ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.eqAddr# a1 __NULL) }) -}
d8c704043f0204b803ae337926d9af50
  ptrNull :: GHC.Ptr.Ptr a
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Ptr.nullPtr -}
5ccbfd5677f457c216182300d746a38e
  rect ::
    GHC.Num.Num a =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Size2D a
    -> Graphics.UI.WXCore.WxcTypes.Rect2D a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,A><S(SS),1*U(U,U)><S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (ds1 :: Graphics.UI.WXCore.WxcTypes.Size2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Point x y ->
                 case ds1 of wild1 { Graphics.UI.WXCore.WxcTypes.Size w h ->
                 Graphics.UI.WXCore.WxcTypes.Rect @ a x y w h } }) -}
eae176aca9981b7a4a13f1717fa10f19
  rectBetween ::
    (GHC.Num.Num a, GHC.Classes.Ord a) =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Rect2D a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(LLLLC(S)LL),U(A,C(C1(U)),A,A,C(U),A,A)><S(LLLLLLLC(C(S))),U(A,A,A,A,A,A,A,C(C1(U)))><S(SS),1*U(U,U)><S(SS),1*U(U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.Classes.Ord a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Point2 a)
                   (w3 :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Point ww1 ww2 ->
                 case w3 of ww3 { Graphics.UI.WXCore.WxcTypes.Point ww4 ww5 ->
                 case Graphics.UI.WXCore.WxcTypes.$wrectBetween
                        @ a
                        w
                        w1
                        ww1
                        ww2
                        ww4
                        ww5 of ww6 { (#,,,#) ww7 ww8 ww9 ww10 ->
                 Graphics.UI.WXCore.WxcTypes.Rect @ a ww7 ww8 ww9 ww10 } } }) -}
5742a541211b16238f0e64de19e46840
  rectBottom ::
    GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Rect2D a -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))LLLLLL),1*U(1*C1(C1(U)),A,A,A,A,A,A)><S(LSLS),1*U(A,U,A,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect _x y _w h ->
                 GHC.Num.+ @ a $dNum y h }) -}
04d3879fc06b8252fcec4e6c3274617a
  rectBottomLeft ::
    GHC.Num.Num a =>
    Graphics.UI.WXCore.WxcTypes.Rect2D a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))LLLLLL),1*U(1*C1(C1(U)),A,A,A,A,A,A)><S(SSLS),1*U(U,U,A,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect l t _w h ->
                 case GHC.Num.+ @ a $dNum t h of dt { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Point @ a l dt } }) -}
72e3c3ab96f4405738f64398621307af
  rectBottomRight ::
    GHC.Num.Num a =>
    Graphics.UI.WXCore.WxcTypes.Rect2D a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))LLLLLL),U(C(C1(U)),A,A,A,A,A,A)><S(SSSS),1*U(U,U,U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case w1 of ww { Graphics.UI.WXCore.WxcTypes.Rect ww1 ww2 ww3 ww4 ->
                 case GHC.Num.+ @ a w ww1 ww3 of dt { DEFAULT ->
                 case GHC.Num.+ @ a w ww2 ww4 of dt1 { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Point @ a dt dt1 } } }) -}
14cdefd103ad240d1db81900d9e9a2aa
  rectFromSize ::
    GHC.Num.Num a =>
    Graphics.UI.WXCore.WxcTypes.Size2D a
    -> Graphics.UI.WXCore.WxcTypes.Rect2D a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><S(SS),1*U(U,U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: Graphics.UI.WXCore.WxcTypes.Size2D a) ->
                 case w1 of ww { Graphics.UI.WXCore.WxcTypes.Size ww1 ww2 ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        Graphics.UI.WXCore.WxcTypes.pointZero1 of dt { DEFAULT ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        Graphics.UI.WXCore.WxcTypes.pointZero1 of dt1 { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Rect @ a dt dt1 ww1 ww2 } } }) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  rectHeight ::
    GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Rect2D a -> a
  RecSel Left Graphics.UI.WXCore.WxcTypes.Rect2D
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(LLLS),1*U(A,A,A,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect ds1 ds2 ds3 ds4 ->
                 ds4 }) -}
c98af6576ffac600961556fe418de167
  rectIsEmpty ::
    (GHC.Num.Num a, GHC.Classes.Eq a) =>
    Graphics.UI.WXCore.WxcTypes.Rect2D a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,A,A,A,A,A,C(U))><S(C(C(S))L),U(C(C1(U)),A)><S(LLSS),1*U(A,A,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Num.Num a)
                   (w1 :: GHC.Classes.Eq a)
                   (w2 :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case w2 of ww { Graphics.UI.WXCore.WxcTypes.Rect ww1 ww2 ww3 ww4 ->
                 Graphics.UI.WXCore.WxcTypes.$wrectIsEmpty @ a w w1 ww3 ww4 }) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  rectLeft ::
    GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Rect2D a -> a
  RecSel Left Graphics.UI.WXCore.WxcTypes.Rect2D
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SLLL),1*U(U,A,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect ds1 ds2 ds3 ds4 ->
                 ds1 }) -}
3cb3121d7a918a3d611f1135d3f673dd
  rectNull :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Rect2D a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLC(S)LLL),U(A,A,A,1*C1(U),A,A,1*C1(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: GHC.Num.Num a) ->
                 case GHC.Num.negate
                        @ a
                        w
                        (GHC.Num.fromInteger
                           @ a
                           w
                           Graphics.UI.WXCore.WxcTypes.pointNull1) of dt { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Rect @ a dt dt dt dt }) -}
a41dbc9d7052d60a91a034b457a39625
  rectRight ::
    GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Rect2D a -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))LLLLLL),1*U(1*C1(C1(U)),A,A,A,A,A,A)><S(SLSL),1*U(U,A,U,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect x _y w _h ->
                 GHC.Num.+ @ a $dNum x w }) -}
2b39fcee33254a6fd74f0db693600a3f
  rectSize ::
    GHC.Num.Num a =>
    Graphics.UI.WXCore.WxcTypes.Rect2D a
    -> Graphics.UI.WXCore.WxcTypes.Size2D a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,A><S(LLSS),1*U(A,A,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect _l _t w h ->
                 Graphics.UI.WXCore.WxcTypes.Size @ a w h }) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  rectTop ::
    GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Rect2D a -> a
  RecSel Left Graphics.UI.WXCore.WxcTypes.Rect2D
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(LSLL),1*U(A,U,A,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect ds1 ds2 ds3 ds4 ->
                 ds2 }) -}
7428d1506b156211f082d54385e7ee10
  rectTopLeft ::
    GHC.Num.Num a =>
    Graphics.UI.WXCore.WxcTypes.Rect2D a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,A><S(SSLL),1*U(U,U,A,A)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect l t _w _h ->
                 Graphics.UI.WXCore.WxcTypes.Point @ a l t }) -}
7ff561fc542d15edb8101b76875b8231
  rectTopRight ::
    GHC.Num.Num a =>
    Graphics.UI.WXCore.WxcTypes.Rect2D a
    -> Graphics.UI.WXCore.WxcTypes.Point2 a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))LLLLLL),1*U(1*C1(C1(U)),A,A,A,A,A,A)><S(SSSL),1*U(U,U,U,A)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect l t w _h ->
                 case GHC.Num.+ @ a $dNum l w of dt { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Point @ a dt t } }) -}
9090a4a2da0e7acd868a3ccce0ff38e7
  rectWidth ::
    GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Rect2D a -> a
  RecSel Left Graphics.UI.WXCore.WxcTypes.Rect2D
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(LLSL),1*U(A,A,U,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect ds1 ds2 ds3 ds4 ->
                 ds3 }) -}
dcbf875125db7cb9cf6266c407e715db
  rectZero :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Rect2D a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: GHC.Num.Num a) ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        Graphics.UI.WXCore.WxcTypes.pointZero1 of dt { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Rect @ a dt dt dt dt }) -}
e215597bf2abe34aba88bb9023575b00
  rgb ::
    GHC.Real.Integral a =>
    a -> a -> a -> Graphics.UI.WXCore.WxcTypes.Color
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),U(A,A,A,A,A,A,A,A,C(U))><L,U><L,U><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.colorRGB1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Real.Integral a>_R
                 ->_R <a>_R
                 ->_R <a>_R
                 ->_R <a>_R
                 ->_R Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])) -}
c7a2e6d14f01c8c643cf0abf67affa21
  rgba ::
    GHC.Real.Integral a =>
    a -> a -> a -> a -> Graphics.UI.WXCore.WxcTypes.Color
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),U(A,A,A,A,A,A,A,A,C(U))><L,U><L,U><L,U><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.colorRGBA1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Real.Integral a>_R
                 ->_R <a>_R
                 ->_R <a>_R
                 ->_R <a>_R
                 ->_R <a>_R
                 ->_R Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])) -}
6e79cb849e7499bbdb269ac139fbbc18
  sizeFromPoint ::
    GHC.Num.Num a =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Size2D a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Point x y ->
                 Graphics.UI.WXCore.WxcTypes.Size @ a x y }) -}
c3be60fd1e990e27e67ece983f9f04ba
  sizeFromVec ::
    GHC.Num.Num a =>
    Graphics.UI.WXCore.WxcTypes.Vector2 a
    -> Graphics.UI.WXCore.WxcTypes.Size2D a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Vector2 a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Vector x y ->
                 Graphics.UI.WXCore.WxcTypes.Size @ a x y }) -}
644abb7df73ac06df808a85ca9676657
  sizeH :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Size2D a -> a
  RecSel Left Graphics.UI.WXCore.WxcTypes.Size2D
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(LS),1*U(A,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Size2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Size ds1 ds2 ->
                 ds2 }) -}
1cc2d3563c690c18fd3a8a5496374aba
  sizeNull :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Size2D a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLC(S)LLL),U(A,A,A,1*C1(U),A,A,1*C1(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: GHC.Num.Num a) ->
                 case GHC.Num.negate
                        @ a
                        w
                        (GHC.Num.fromInteger
                           @ a
                           w
                           Graphics.UI.WXCore.WxcTypes.pointNull1) of dt { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Size @ a dt dt }) -}
644abb7df73ac06df808a85ca9676657
  sizeW :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Size2D a -> a
  RecSel Left Graphics.UI.WXCore.WxcTypes.Size2D
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SL),1*U(U,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Size2D a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Size ds1 ds2 ->
                 ds1 }) -}
f638e4d8680f9fca7698742d8836ebd7
  sizeZero :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Size2D a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: GHC.Num.Num a) ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        Graphics.UI.WXCore.WxcTypes.pointZero1 of dt { DEFAULT ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        Graphics.UI.WXCore.WxcTypes.pointZero1 of dt1 { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Size @ a dt dt1 } }) -}
95acb2bddcf5fe18533f90af25cf746b
  sz ::
    GHC.Num.Num a => a -> a -> Graphics.UI.WXCore.WxcTypes.Size2D a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,U><S,U>m,
     Unfolding: InlineRule (3, True, True)
                (\ @ a ($dNum :: GHC.Num.Num a) (w :: a) (h :: a) ->
                 Graphics.UI.WXCore.WxcTypes.$WSize @ a w h) -}
266d2a972a315f7e96ee8976517cf97d
  toCBool :: GHC.Types.Bool -> Foreign.C.Types.CBool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.toCBool1
                  `cast`
                (<GHC.Types.Bool>_R ->_R Sym (Foreign.C.Types.N:CBool[0])) -}
3ce53a68d8b767a64c4f7f6765e1c9fc
  toCBool1 :: GHC.Types.Bool -> GHC.Word.Word8
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Bool) ->
                 case Graphics.UI.WXCore.WxcTypes.$wtoCBool w of ww { DEFAULT ->
                 GHC.Word.W8# ww }) -}
2805fce66d05cdca99226394e4c94877
  toCChar :: GHC.Types.Char -> Foreign.C.Types.CChar
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Foreign.C.String.castCharToCChar1
                  `cast`
                (<GHC.Types.Char>_R ->_R Sym (Foreign.C.Types.N:CChar[0])) -}
4917aeab1fe34cd95540135f5b7ed5ab
  toCDouble :: GHC.Types.Double -> Foreign.C.Types.CDouble
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.toCDouble1
                  `cast`
                (<GHC.Types.Double>_R ->_R Sym (Foreign.C.Types.N:CDouble[0])) -}
70de582b1607aeb1eb0383e340d3d22e
  toCDouble1 :: GHC.Types.Double -> GHC.Types.Double
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (d :: GHC.Types.Double) -> d) -}
91c46cc21a73fdbd9202aafc99a32046
  toCDoublePointX ::
    Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double
    -> Foreign.C.Types.CDouble
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Point x _y ->
                 x `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
ab952ddd822ee6362f5e4eccdac13203
  toCDoublePointY ::
    Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double
    -> Foreign.C.Types.CDouble
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Point _x y ->
                 y `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
096572bed105ad7def6a4a1d4998df31
  toCDoubleRectH ::
    Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double
    -> Foreign.C.Types.CDouble
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect _x _y _w h ->
                 h `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
890f302d64e2fa62f94e3e6548750d6c
  toCDoubleRectW ::
    Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double
    -> Foreign.C.Types.CDouble
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect _x _y w _h ->
                 w `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
7a614b46dd449fa083e0629bcb1886c1
  toCDoubleRectX ::
    Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double
    -> Foreign.C.Types.CDouble
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect x _y _w _h ->
                 x `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
7b5619b88090d455b939dfb04dc0c090
  toCDoubleRectY ::
    Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double
    -> Foreign.C.Types.CDouble
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect _x y _w _h ->
                 y `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
f639d459c0a752c60c64cda5f62eee7a
  toCDoubleSizeH ::
    Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double
    -> Foreign.C.Types.CDouble
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Size _w h ->
                 h `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
51983152aa948954c78c1302b8162fdf
  toCDoubleSizeW ::
    Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double
    -> Foreign.C.Types.CDouble
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Size w _h ->
                 w `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
a07a873dc1affca72b5fd575f57ab92a
  toCDoubleVectorX ::
    Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double
    -> Foreign.C.Types.CDouble
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Vector x _y ->
                 x `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
e6f47bf2f1abb713ae16ebc57f03a3b3
  toCDoubleVectorY ::
    Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double
    -> Foreign.C.Types.CDouble
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Vector _x y ->
                 y `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
a99f0ea040126dd9eb89b06961d443bb
  toCFunPtr :: GHC.Ptr.FunPtr a -> GHC.Ptr.Ptr a
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ a (fptr :: GHC.Ptr.FunPtr a) ->
                 GHC.Ptr.castFunPtrToPtr @ a @ a fptr) -}
c054ea4532016732c7f6f6460e686ad0
  toCInt :: GHC.Types.Int -> Foreign.C.Types.CInt
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.toCInt1
                  `cast`
                (<GHC.Types.Int>_R ->_R Sym (Foreign.C.Types.N:CInt[0])) -}
391396c1935e5f594c7121bc5ce5c5bd
  toCInt1 :: GHC.Types.Int -> GHC.Int.Int32
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (i :: GHC.Types.Int) ->
                 case i of wild { GHC.Types.I# x# ->
                 GHC.Int.I32# (GHC.Prim.narrow32Int# x#) }) -}
3557824a4cef1eabcffaba1bee435f7d
  toCIntPointX ::
    Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int
    -> Foreign.C.Types.CInt
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S(S)L),1*U(U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Point x _y ->
                 case x of wild1 { GHC.Types.I# x# ->
                 (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                   `cast`
                 (Sym (Foreign.C.Types.N:CInt[0])) } }) -}
d4c7ff08de5f95ed393783dad89eecca
  toCIntPointY ::
    Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int
    -> Foreign.C.Types.CInt
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS(S)),1*U(A,U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Point _x y ->
                 case y of wild1 { GHC.Types.I# x# ->
                 (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                   `cast`
                 (Sym (Foreign.C.Types.N:CInt[0])) } }) -}
bb0568582756d0a3a5b172838429840a
  toCIntPtr :: Foreign.Ptr.IntPtr -> Foreign.C.Types.CIntPtr
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.toCIntPtr1
                  `cast`
                (<Foreign.Ptr.IntPtr>_R ->_R Sym (Foreign.C.Types.N:CIntPtr[0])) -}
2fd79683f34b776a356e50d6d256bfd4
  toCIntPtr1 :: Foreign.Ptr.IntPtr -> GHC.Int.Int64
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (i :: Foreign.Ptr.IntPtr) ->
                 case i `cast`
                      (Foreign.Ptr.N:IntPtr[0]) of wild { GHC.Types.I# i1 ->
                 GHC.Int.I64# i1 }) -}
13dc790e3c93ca9648e8ff88f2339e6f
  toCIntRectH ::
    Graphics.UI.WXCore.WxcTypes.Rect -> Foreign.C.Types.CInt
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS(S)),1*U(A,A,A,U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Int) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect _x _y _w h ->
                 case h of wild1 { GHC.Types.I# x# ->
                 (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                   `cast`
                 (Sym (Foreign.C.Types.N:CInt[0])) } }) -}
237f558ae6d67a405bbf10b0dbb23bc2
  toCIntRectW ::
    Graphics.UI.WXCore.WxcTypes.Rect -> Foreign.C.Types.CInt
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLS(S)L),1*U(A,A,U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Int) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect _x _y w _h ->
                 case w of wild1 { GHC.Types.I# x# ->
                 (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                   `cast`
                 (Sym (Foreign.C.Types.N:CInt[0])) } }) -}
fce96546f99e9d6c05819040616b68c6
  toCIntRectX ::
    Graphics.UI.WXCore.WxcTypes.Rect -> Foreign.C.Types.CInt
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(S)LLL),1*U(U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Int) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect x _y _w _h ->
                 case x of wild1 { GHC.Types.I# x# ->
                 (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                   `cast`
                 (Sym (Foreign.C.Types.N:CInt[0])) } }) -}
b0f42f010a03f4c323d19356932da376
  toCIntRectY ::
    Graphics.UI.WXCore.WxcTypes.Rect -> Foreign.C.Types.CInt
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS(S)LL),1*U(A,U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Int) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect _x y _w _h ->
                 case y of wild1 { GHC.Types.I# x# ->
                 (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                   `cast`
                 (Sym (Foreign.C.Types.N:CInt[0])) } }) -}
2b948da9b697229952bdd70cbac20296
  toCIntSizeH ::
    Graphics.UI.WXCore.WxcTypes.Size -> Foreign.C.Types.CInt
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS(S)),1*U(A,U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Int) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Size _w h ->
                 case h of wild1 { GHC.Types.I# x# ->
                 (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                   `cast`
                 (Sym (Foreign.C.Types.N:CInt[0])) } }) -}
91122f5fe476c8b1449e41e2a7cd4a6b
  toCIntSizeW ::
    Graphics.UI.WXCore.WxcTypes.Size -> Foreign.C.Types.CInt
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S(S)L),1*U(U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Int) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Size w _h ->
                 case w of wild1 { GHC.Types.I# x# ->
                 (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                   `cast`
                 (Sym (Foreign.C.Types.N:CInt[0])) } }) -}
5eab3f514ca17f2a528ac168bf01c003
  toCIntVectorX ::
    Graphics.UI.WXCore.WxcTypes.Vector -> Foreign.C.Types.CInt
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S(S)L),1*U(U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Int) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Vector x _y ->
                 case x of wild1 { GHC.Types.I# x# ->
                 (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                   `cast`
                 (Sym (Foreign.C.Types.N:CInt[0])) } }) -}
3711531d3087142b0fd24433291a3a4f
  toCIntVectorY ::
    Graphics.UI.WXCore.WxcTypes.Vector -> Foreign.C.Types.CInt
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS(S)),1*U(A,U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Int) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Vector _x y ->
                 case y of wild1 { GHC.Types.I# x# ->
                 (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                   `cast`
                 (Sym (Foreign.C.Types.N:CInt[0])) } }) -}
85eceb491e81730bef7bc13ca84c81c3
  toCWchar :: GHC.Num.Num a => GHC.Types.Char -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><L,1*U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dNum :: GHC.Num.Num a) (x :: GHC.Types.Char) ->
                 GHC.Num.fromInteger
                   @ a
                   $dNum
                   (case x of wild { GHC.Types.C# c# ->
                    GHC.Integer.Type.smallInteger (GHC.Prim.ord# c#) })) -}
f1a75a2a5decb08bc1475936cc7b3a5d
  toColor ::
    GHC.Real.Integral a => a -> Graphics.UI.WXCore.WxcTypes.Color
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),1*U(A,A,A,A,A,A,A,A,1*C1(U))><L,U>m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.toColor1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Real.Integral a>_R
                 ->_R <a>_R
                 ->_R Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])) -}
2e2f62e1314f7deba6fa955ca307f4c9
  toColor1 :: GHC.Real.Integral a => a -> GHC.Types.Word
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLLLC(S)),1*U(A,A,A,A,A,A,A,A,1*C1(U))><L,U>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dIntegral :: GHC.Real.Integral a) (eta :: a) ->
                 case GHC.Integer.Type.integerToWord
                        (GHC.Real.toInteger @ a $dIntegral eta) of wild { DEFAULT ->
                 GHC.Types.W# wild }) -}
fa4b022fc696db9655fd17a2df8c17be
  treeItemFromInt ::
    Foreign.Ptr.IntPtr -> Graphics.UI.WXCore.WxcTypes.TreeItem
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.treeItemFromInt1
                  `cast`
                (<Foreign.Ptr.IntPtr>_R
                 ->_R Sym (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0])) -}
02b30a5e8319fc50de08a25b3010c4c8
  treeItemFromInt1 :: Foreign.Ptr.IntPtr -> Foreign.Ptr.IntPtr
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (i :: Foreign.Ptr.IntPtr) -> i) -}
7a8076e4c53be7e11949f5a37de081a5
  treeItemInvalid :: Graphics.UI.WXCore.WxcTypes.TreeItem
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.$fShowColor6
                  `cast`
                (Trans
                     (Sym (Foreign.Ptr.N:IntPtr[0]))
                     (Sym (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0]))) -}
f30826f4c30d6d554e2b8e882e571f80
  treeItemIsOk ::
    Graphics.UI.WXCore.WxcTypes.TreeItem -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.TreeItem) ->
                 case ds
                        `cast`
                      (Trans
                           (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0])
                           (Foreign.Ptr.N:IntPtr[0])) of wild { GHC.Types.I# x ->
                 case x of wild1 {
                   DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } }) -}
9251930eb65492114382ff0e8cfbf64b
  vec ::
    GHC.Num.Num a => a -> a -> Graphics.UI.WXCore.WxcTypes.Vector2 a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,U><S,U>m,
     Unfolding: InlineRule (3, True, True)
                (\ @ a ($dNum :: GHC.Num.Num a) (dx :: a) (dy :: a) ->
                 Graphics.UI.WXCore.WxcTypes.$WVector @ a dx dy) -}
93e84b4b77937b78f0cde071cd6e85d8
  vecFromPoint ::
    GHC.Num.Num a =>
    Graphics.UI.WXCore.WxcTypes.Point2 a
    -> Graphics.UI.WXCore.WxcTypes.Vector2 a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Point2 a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Point x y ->
                 Graphics.UI.WXCore.WxcTypes.Vector @ a x y }) -}
9f399e330ceb04d475c9343664d5a0ad
  vecFromSize ::
    Graphics.UI.WXCore.WxcTypes.Size
    -> Graphics.UI.WXCore.WxcTypes.Vector
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Int) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Size w h ->
                 Graphics.UI.WXCore.WxcTypes.Vector @ GHC.Types.Int w h }) -}
67cbd95e8598f3ed01a5c9789da20ced
  vecNull :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Vector2 a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLC(S)LLL),U(A,A,A,1*C1(U),A,A,1*C1(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: GHC.Num.Num a) ->
                 case GHC.Num.negate
                        @ a
                        w
                        (GHC.Num.fromInteger
                           @ a
                           w
                           Graphics.UI.WXCore.WxcTypes.pointNull1) of dt { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Vector @ a dt dt }) -}
87d9fae95d73d68f37749362fbe78e2e
  vecX :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Vector2 a -> a
  RecSel Left Graphics.UI.WXCore.WxcTypes.Vector2
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(SL),1*U(U,A)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Vector2 a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Vector ds1 ds2 ->
                 ds1 }) -}
87d9fae95d73d68f37749362fbe78e2e
  vecY :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Vector2 a -> a
  RecSel Left Graphics.UI.WXCore.WxcTypes.Vector2
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><S(LS),1*U(A,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dNum :: GHC.Num.Num a)
                   (ds :: Graphics.UI.WXCore.WxcTypes.Vector2 a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Vector ds1 ds2 ->
                 ds2 }) -}
a55e2773483a46cf1b0f223302ee49aa
  vecZero :: GHC.Num.Num a => Graphics.UI.WXCore.WxcTypes.Vector2 a
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: GHC.Num.Num a) ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        Graphics.UI.WXCore.WxcTypes.pointZero1 of dt { DEFAULT ->
                 case GHC.Num.fromInteger
                        @ a
                        w
                        Graphics.UI.WXCore.WxcTypes.pointZero1 of dt1 { DEFAULT ->
                 Graphics.UI.WXCore.WxcTypes.Vector @ a dt dt1 } }) -}
eed0ca4d12f54ad06adfab5cda31764f
  vector ::
    GHC.Num.Num a => a -> a -> Graphics.UI.WXCore.WxcTypes.Vector2 a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><S,U><S,U>m,
     Unfolding: InlineRule (3, True, True)
                (\ @ a ($dNum :: GHC.Num.Num a) (dx :: a) (dy :: a) ->
                 Graphics.UI.WXCore.WxcTypes.$WVector @ a dx dy) -}
abf4fa45be820c137f498a8b6598d2e6
  withArrayInt ::
    [GHC.Types.Int]
    -> (Foreign.C.Types.CInt
        -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,U><C(C(C(S))),C(C1(C1(U(U,U))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withArrayInt1
                  `cast`
                (forall (a :: <*>_N).
                 <[GHC.Types.Int]>_R
                 ->_R <Foreign.C.Types.CInt
                       -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
c3d1b5400966e8a38a969243b55db413
  withArrayInt1 ::
    [GHC.Types.Int]
    -> (Foreign.C.Types.CInt
        -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,U><C(C(C(S))),C(C1(C1(U(U,U))))><S,U>,
     Unfolding: (\ @ a
                   (xs :: [GHC.Types.Int])
                   (f :: Foreign.C.Types.CInt
                         -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO a)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 let {
                   vals :: [Foreign.C.Types.CInt]
                   = GHC.Base.map
                       @ GHC.Types.Int
                       @ Foreign.C.Types.CInt
                       Graphics.UI.WXCore.WxcTypes.toCInt1
                         `cast`
                       (<GHC.Types.Int>_R ->_R Sym (Foreign.C.Types.N:CInt[0]))
                       xs
                 } in
                 case GHC.List.$wlenAcc
                        @ Foreign.C.Types.CInt
                        vals
                        0# of ww2 { DEFAULT ->
                 let {
                   lvl35 :: Foreign.C.Types.CInt
                   = case GHC.List.$wlenAcc @ GHC.Types.Int xs 0# of ww1 { DEFAULT ->
                     (GHC.Int.I32# (GHC.Prim.narrow32Int# ww1))
                       `cast`
                     (Sym (Foreign.C.Types.N:CInt[0])) }
                 } in
                 (Foreign.Marshal.Alloc.allocaBytesAligned
                    @ Foreign.C.Types.CInt
                    @ a
                    (GHC.Types.I# (GHC.Prim.*# (GHC.Prim.+# ww2 1#) 4#))
                    Foreign.Storable.$fStorableBool7
                    (\ (ptr :: GHC.Ptr.Ptr Foreign.C.Types.CInt)[OneShot]
                       (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     letrec {
                       go :: [Foreign.C.Types.CInt]
                             -> GHC.Prim.Int#
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                         <join 3> {- Arity: 3, Strictness: <S,1*U><S,U><S,U> -}
                       = \ (ds :: [Foreign.C.Types.CInt])
                           (n# :: GHC.Prim.Int#)
                           (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                         case ds of wild {
                           []
                           -> case ptr
                                     `cast`
                                   (Nth:2
                                        (Trans
                                             ((GHC.Ptr.Ptr <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                              ->_R <GHC.Types.Int>_R
                                              ->_R Foreign.C.Types.N:CInt[0]
                                              ->_R <GHC.Types.IO ()>_R)
                                             (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                              ->_R <GHC.Types.Int>_R
                                              ->_R <GHC.Int.Int32>_R
                                              ->_R GHC.Types.N:IO[0]
                                                       <()>_R))) of wild1 { GHC.Ptr.Ptr a1 ->
                              case GHC.Prim.writeInt32OffAddr#
                                     @ GHC.Prim.RealWorld
                                     a1
                                     n#
                                     0#
                                     eta1 of s2 { DEFAULT ->
                              (f lvl35
                                 wild1
                                   `cast`
                                 (Nth:2
                                      (Trans
                                           (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                            ->_R <GHC.Types.Int>_R
                                            ->_R <GHC.Int.Int32>_R
                                            ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                                           ((GHC.Ptr.Ptr <GHC.Int.Int32, Foreign.C.Types.CInt>)_R
                                            ->_R <GHC.Types.Int>_R
                                            ->_R Sym (Foreign.C.Types.N:CInt[0])
                                            ->_R <GHC.Types.IO ()>_R))))
                                `cast`
                              (GHC.Types.N:IO[0] <a>_R)
                                s2 } }
                           : val vals1
                           -> case ptr
                                     `cast`
                                   (Nth:2
                                        (Trans
                                             ((GHC.Ptr.Ptr <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                              ->_R <GHC.Types.Int>_R
                                              ->_R Foreign.C.Types.N:CInt[0]
                                              ->_R <GHC.Types.IO ()>_R)
                                             (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                              ->_R <GHC.Types.Int>_R
                                              ->_R <GHC.Int.Int32>_R
                                              ->_R GHC.Types.N:IO[0]
                                                       <()>_R))) of wild1 { GHC.Ptr.Ptr a1 ->
                              case val
                                     `cast`
                                   (Nth:2
                                        (Nth:3
                                             (Nth:3
                                                  (Trans
                                                       ((GHC.Ptr.Ptr
                                                           <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                                        ->_R <GHC.Types.Int>_R
                                                        ->_R Foreign.C.Types.N:CInt[0]
                                                        ->_R <GHC.Types.IO ()>_R)
                                                       (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                                        ->_R <GHC.Types.Int>_R
                                                        ->_R <GHC.Int.Int32>_R
                                                        ->_R GHC.Types.N:IO[0]
                                                                 <()>_R))))) of wild2 { GHC.Int.I32# x ->
                              case GHC.Prim.writeInt32OffAddr#
                                     @ GHC.Prim.RealWorld
                                     a1
                                     n#
                                     x
                                     eta1 of s2 { DEFAULT ->
                              go vals1 (GHC.Prim.+# n# 1#) s2 } } } }
                     } in
                     go vals 0# s)
                      `cast`
                    (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                     ->_R Sym (GHC.Types.N:IO[0] <a>_R)))
                   `cast`
                 (GHC.Types.N:IO[0] <a>_R)
                   eta }) -}
63b1a5e7b4e844822ee7491fb43451fe
  withArrayIntPtr ::
    [Foreign.Ptr.IntPtr]
    -> (Foreign.C.Types.CInt
        -> GHC.Ptr.Ptr Foreign.C.Types.CIntPtr -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,U><C(C(C(S))),C(C1(C1(U(U,U))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withArrayIntPtr1
                  `cast`
                (forall (a :: <*>_N).
                 <[Foreign.Ptr.IntPtr]>_R
                 ->_R <Foreign.C.Types.CInt
                       -> GHC.Ptr.Ptr Foreign.C.Types.CIntPtr -> GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
02d3f60d77ef17703910a6faf129d4ac
  withArrayIntPtr1 ::
    [Foreign.Ptr.IntPtr]
    -> (Foreign.C.Types.CInt
        -> GHC.Ptr.Ptr Foreign.C.Types.CIntPtr -> GHC.Types.IO a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,U><C(C(C(S))),C(C1(C1(U(U,U))))><S,U>,
     Unfolding: (\ @ a
                   (xs :: [Foreign.Ptr.IntPtr])
                   (f :: Foreign.C.Types.CInt
                         -> GHC.Ptr.Ptr Foreign.C.Types.CIntPtr -> GHC.Types.IO a)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 let {
                   vals :: [Foreign.C.Types.CIntPtr]
                   = GHC.Base.map
                       @ Foreign.Ptr.IntPtr
                       @ Foreign.C.Types.CIntPtr
                       Graphics.UI.WXCore.WxcTypes.toCIntPtr1
                         `cast`
                       (<Foreign.Ptr.IntPtr>_R ->_R Sym (Foreign.C.Types.N:CIntPtr[0]))
                       xs
                 } in
                 case GHC.List.$wlenAcc
                        @ Foreign.C.Types.CIntPtr
                        vals
                        0# of ww2 { DEFAULT ->
                 let {
                   lvl35 :: Foreign.C.Types.CInt
                   = case GHC.List.$wlenAcc
                            @ Foreign.Ptr.IntPtr
                            xs
                            0# of ww1 { DEFAULT ->
                     (GHC.Int.I32# (GHC.Prim.narrow32Int# ww1))
                       `cast`
                     (Sym (Foreign.C.Types.N:CInt[0])) }
                 } in
                 (Foreign.Marshal.Alloc.allocaBytesAligned
                    @ Foreign.C.Types.CIntPtr
                    @ a
                    (GHC.Types.I# (GHC.Prim.*# (GHC.Prim.+# ww2 1#) 8#))
                    Foreign.Storable.$fStorableDouble5
                    (\ (ptr :: GHC.Ptr.Ptr Foreign.C.Types.CIntPtr)[OneShot]
                       (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     letrec {
                       go :: [Foreign.C.Types.CIntPtr]
                             -> GHC.Prim.Int#
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                         <join 3> {- Arity: 3, Strictness: <S,1*U><S,U><S,U> -}
                       = \ (ds :: [Foreign.C.Types.CIntPtr])
                           (n# :: GHC.Prim.Int#)
                           (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                         case ds of wild {
                           []
                           -> case ptr
                                     `cast`
                                   (Nth:2
                                        (Trans
                                             ((GHC.Ptr.Ptr
                                                 <Foreign.C.Types.CIntPtr, GHC.Int.Int64>)_R
                                              ->_R <GHC.Types.Int>_R
                                              ->_R Foreign.C.Types.N:CIntPtr[0]
                                              ->_R <GHC.Types.IO ()>_R)
                                             (<GHC.Ptr.Ptr GHC.Int.Int64>_R
                                              ->_R <GHC.Types.Int>_R
                                              ->_R <GHC.Int.Int64>_R
                                              ->_R GHC.Types.N:IO[0]
                                                       <()>_R))) of wild1 { GHC.Ptr.Ptr a1 ->
                              case GHC.Prim.writeInt64OffAddr#
                                     @ GHC.Prim.RealWorld
                                     a1
                                     n#
                                     0#
                                     eta1 of s2 { DEFAULT ->
                              (f lvl35
                                 wild1
                                   `cast`
                                 (Nth:2
                                      (Trans
                                           (<GHC.Ptr.Ptr GHC.Int.Int64>_R
                                            ->_R <GHC.Types.Int>_R
                                            ->_R <GHC.Int.Int64>_R
                                            ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                                           ((GHC.Ptr.Ptr <GHC.Int.Int64, Foreign.C.Types.CIntPtr>)_R
                                            ->_R <GHC.Types.Int>_R
                                            ->_R Sym (Foreign.C.Types.N:CIntPtr[0])
                                            ->_R <GHC.Types.IO ()>_R))))
                                `cast`
                              (GHC.Types.N:IO[0] <a>_R)
                                s2 } }
                           : val vals1
                           -> case ptr
                                     `cast`
                                   (Nth:2
                                        (Trans
                                             ((GHC.Ptr.Ptr
                                                 <Foreign.C.Types.CIntPtr, GHC.Int.Int64>)_R
                                              ->_R <GHC.Types.Int>_R
                                              ->_R Foreign.C.Types.N:CIntPtr[0]
                                              ->_R <GHC.Types.IO ()>_R)
                                             (<GHC.Ptr.Ptr GHC.Int.Int64>_R
                                              ->_R <GHC.Types.Int>_R
                                              ->_R <GHC.Int.Int64>_R
                                              ->_R GHC.Types.N:IO[0]
                                                       <()>_R))) of wild1 { GHC.Ptr.Ptr a1 ->
                              case val
                                     `cast`
                                   (Nth:2
                                        (Nth:3
                                             (Nth:3
                                                  (Trans
                                                       ((GHC.Ptr.Ptr
                                                           <Foreign.C.Types.CIntPtr, GHC.Int.Int64>)_R
                                                        ->_R <GHC.Types.Int>_R
                                                        ->_R Foreign.C.Types.N:CIntPtr[0]
                                                        ->_R <GHC.Types.IO ()>_R)
                                                       (<GHC.Ptr.Ptr GHC.Int.Int64>_R
                                                        ->_R <GHC.Types.Int>_R
                                                        ->_R <GHC.Int.Int64>_R
                                                        ->_R GHC.Types.N:IO[0]
                                                                 <()>_R))))) of wild2 { GHC.Int.I64# x ->
                              case GHC.Prim.writeInt64OffAddr#
                                     @ GHC.Prim.RealWorld
                                     a1
                                     n#
                                     x
                                     eta1 of s2 { DEFAULT ->
                              go vals1 (GHC.Prim.+# n# 1#) s2 } } } }
                     } in
                     go vals 0# s)
                      `cast`
                    (<GHC.Ptr.Ptr Foreign.C.Types.CIntPtr>_R
                     ->_R Sym (GHC.Types.N:IO[0] <a>_R)))
                   `cast`
                 (GHC.Types.N:IO[0] <a>_R)
                   eta }) -}
c1d148ce233484cde47469846a11dac6
  withArrayIntPtrResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CIntPtr
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Types.IO [Foreign.Ptr.IntPtr]
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withArrayIntPtrResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CIntPtr
                  -> GHC.Types.IO Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Foreign.Ptr.IntPtr]>_R)) -}
dc580702297d2b14ef4ecc370918a37a
  withArrayIntPtrResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CIntPtr
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Foreign.Ptr.IntPtr] #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CIntPtr
                         -> GHC.Types.IO Foreign.C.Types.CInt)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (f (GHC.Ptr.nullPtr @ Foreign.C.Types.CIntPtr))
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# x# 0#) of wild1 {
                   GHC.Types.False
                   -> (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CIntPtr
                         @ [Foreign.Ptr.IntPtr]
                         (GHC.Types.I# (GHC.Prim.*# x# 8#))
                         Foreign.Storable.$fStorableDouble5
                         (\ (carr :: GHC.Ptr.Ptr Foreign.C.Types.CIntPtr)[OneShot]
                            (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (f carr) `cast` (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                                 s1 of ds2 { (#,#) ipv2 ipv3 ->
                          letrec {
                            $wf :: GHC.Prim.Int#
                                   -> [Foreign.C.Types.CIntPtr]
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Foreign.Ptr.IntPtr] #)
                              <join 3> {- Arity: 3, Strictness: <S,1*U><L,U><S,U>, Inline: [0] -}
                            = \ (ww1 :: GHC.Prim.Int#)
                                (w3 :: [Foreign.C.Types.CIntPtr])
                                (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                              case ww1 of ds {
                                DEFAULT
                                -> case carr
                                          `cast`
                                        (Nth:2
                                             (Trans
                                                  ((GHC.Ptr.Ptr
                                                      <Foreign.C.Types.CIntPtr, GHC.Int.Int64>)_R
                                                   ->_R <GHC.Types.Int>_R
                                                   ->_R (GHC.Types.IO
                                                           (Foreign.C.Types.N:CIntPtr[0]))_R)
                                                  (<GHC.Ptr.Ptr GHC.Int.Int64>_R
                                                   ->_R <GHC.Types.Int>_R
                                                   ->_R GHC.Types.N:IO[0]
                                                            <GHC.Int.Int64>_R))) of wild2 { GHC.Ptr.Ptr a ->
                                   case GHC.Prim.readInt64OffAddr#
                                          @ GHC.Prim.RealWorld
                                          a
                                          ds
                                          w4 of ds3 { (#,#) ipv4 ipv5 ->
                                   $wf
                                     (GHC.Prim.-# ds 1#)
                                     (GHC.Types.:
                                        @ Foreign.C.Types.CIntPtr
                                        (GHC.Int.I64# ipv5)
                                          `cast`
                                        (Nth:3
                                             (Nth:3
                                                  (Trans
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<GHC.Ptr.Ptr GHC.Int.Int64>_R
                                                                       ->_R <GHC.Types.Int>_R
                                                                       ->_R Sym (GHC.Types.N:IO[0]
                                                                                     <GHC.Int.Int64>_R))
                                                                      ((GHC.Ptr.Ptr
                                                                          <GHC.Int.Int64, Foreign.C.Types.CIntPtr>)_R
                                                                       ->_R <GHC.Types.Int>_R
                                                                       ->_R (GHC.Types.IO
                                                                               (Sym (Foreign.C.Types.N:CIntPtr[0])))_R))))
                                                       (GHC.Types.N:IO[0]
                                                            <Foreign.C.Types.CIntPtr>_R))))
                                        w3)
                                     ipv4 } }
                                0#
                                -> case carr
                                          `cast`
                                        (Nth:2
                                             (Trans
                                                  ((GHC.Ptr.Ptr
                                                      <Foreign.C.Types.CIntPtr, GHC.Int.Int64>)_R
                                                   ->_R <GHC.Types.Int>_R
                                                   ->_R (GHC.Types.IO
                                                           (Foreign.C.Types.N:CIntPtr[0]))_R)
                                                  (<GHC.Ptr.Ptr GHC.Int.Int64>_R
                                                   ->_R <GHC.Types.Int>_R
                                                   ->_R GHC.Types.N:IO[0]
                                                            <GHC.Int.Int64>_R))) of wild2 { GHC.Ptr.Ptr a ->
                                   case GHC.Prim.readInt64OffAddr#
                                          @ GHC.Prim.RealWorld
                                          a
                                          0#
                                          w4 of ds3 { (#,#) ipv4 ipv5 ->
                                   (# ipv4,
                                      GHC.Base.map
                                        @ Foreign.C.Types.CIntPtr
                                        @ Foreign.Ptr.IntPtr
                                        Graphics.UI.WXCore.WxcTypes.fromCIntPtr
                                        (GHC.Types.:
                                           @ Foreign.C.Types.CIntPtr
                                           (GHC.Int.I64# ipv5)
                                             `cast`
                                           (Nth:3
                                                (Nth:3
                                                     (Trans
                                                          (Nth:3
                                                               (Nth:3
                                                                    (Trans
                                                                         (<GHC.Ptr.Ptr
                                                                             GHC.Int.Int64>_R
                                                                          ->_R <GHC.Types.Int>_R
                                                                          ->_R Sym (GHC.Types.N:IO[0]
                                                                                        <GHC.Int.Int64>_R))
                                                                         ((GHC.Ptr.Ptr
                                                                             <GHC.Int.Int64, Foreign.C.Types.CIntPtr>)_R
                                                                          ->_R <GHC.Types.Int>_R
                                                                          ->_R (GHC.Types.IO
                                                                                  (Sym (Foreign.C.Types.N:CIntPtr[0])))_R))))
                                                          (GHC.Types.N:IO[0]
                                                               <Foreign.C.Types.CIntPtr>_R))))
                                           w3) #) } } }
                          } in
                          $wf
                            (GHC.Prim.-# x# 1#)
                            (GHC.Types.[] @ Foreign.C.Types.CIntPtr)
                            ipv2 })
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CIntPtr>_R
                          ->_R Sym (GHC.Types.N:IO[0] <[Foreign.Ptr.IntPtr]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[Foreign.Ptr.IntPtr]>_R)
                        ipv
                   GHC.Types.True
                   -> (# ipv, GHC.Types.[] @ Foreign.Ptr.IntPtr #) } } }) -}
7a6c693a4392ae76ddf4b7b8d834a357
  withArrayIntResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Types.IO [GHC.Types.Int]
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withArrayIntResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CInt
                  -> GHC.Types.IO Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[GHC.Types.Int]>_R)) -}
128cead8cca933a06884764d0f22194b
  withArrayIntResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Int] #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CInt
                         -> GHC.Types.IO Foreign.C.Types.CInt)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (f (GHC.Ptr.nullPtr @ Foreign.C.Types.CInt))
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# x# 0#) of wild1 {
                   GHC.Types.False
                   -> (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CInt
                         @ [GHC.Types.Int]
                         (GHC.Types.I# (GHC.Prim.*# x# 4#))
                         Foreign.Storable.$fStorableBool7
                         (\ (carr :: GHC.Ptr.Ptr Foreign.C.Types.CInt)[OneShot]
                            (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (f carr) `cast` (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                                 s1 of ds2 { (#,#) ipv2 ipv3 ->
                          letrec {
                            $wf :: GHC.Prim.Int#
                                   -> [Foreign.C.Types.CInt]
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Int] #)
                              <join 3> {- Arity: 3, Strictness: <S,1*U><L,U><S,U>, Inline: [0] -}
                            = \ (ww1 :: GHC.Prim.Int#)
                                (w3 :: [Foreign.C.Types.CInt])
                                (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                              case ww1 of ds {
                                DEFAULT
                                -> case carr
                                          `cast`
                                        (Nth:2
                                             (Trans
                                                  ((GHC.Ptr.Ptr
                                                      <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                                   ->_R <GHC.Types.Int>_R
                                                   ->_R (GHC.Types.IO
                                                           (Foreign.C.Types.N:CInt[0]))_R)
                                                  (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                                   ->_R <GHC.Types.Int>_R
                                                   ->_R GHC.Types.N:IO[0]
                                                            <GHC.Int.Int32>_R))) of wild2 { GHC.Ptr.Ptr a ->
                                   case GHC.Prim.readInt32OffAddr#
                                          @ GHC.Prim.RealWorld
                                          a
                                          ds
                                          w4 of ds3 { (#,#) ipv4 ipv5 ->
                                   $wf
                                     (GHC.Prim.-# ds 1#)
                                     (GHC.Types.:
                                        @ Foreign.C.Types.CInt
                                        (GHC.Int.I32# ipv5)
                                          `cast`
                                        (Nth:3
                                             (Nth:3
                                                  (Trans
                                                       (Nth:3
                                                            (Nth:3
                                                                 (Trans
                                                                      (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                                                       ->_R <GHC.Types.Int>_R
                                                                       ->_R Sym (GHC.Types.N:IO[0]
                                                                                     <GHC.Int.Int32>_R))
                                                                      ((GHC.Ptr.Ptr
                                                                          <GHC.Int.Int32, Foreign.C.Types.CInt>)_R
                                                                       ->_R <GHC.Types.Int>_R
                                                                       ->_R (GHC.Types.IO
                                                                               (Sym (Foreign.C.Types.N:CInt[0])))_R))))
                                                       (GHC.Types.N:IO[0]
                                                            <Foreign.C.Types.CInt>_R))))
                                        w3)
                                     ipv4 } }
                                0#
                                -> case carr
                                          `cast`
                                        (Nth:2
                                             (Trans
                                                  ((GHC.Ptr.Ptr
                                                      <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                                   ->_R <GHC.Types.Int>_R
                                                   ->_R (GHC.Types.IO
                                                           (Foreign.C.Types.N:CInt[0]))_R)
                                                  (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                                   ->_R <GHC.Types.Int>_R
                                                   ->_R GHC.Types.N:IO[0]
                                                            <GHC.Int.Int32>_R))) of wild2 { GHC.Ptr.Ptr a ->
                                   case GHC.Prim.readInt32OffAddr#
                                          @ GHC.Prim.RealWorld
                                          a
                                          0#
                                          w4 of ds3 { (#,#) ipv4 ipv5 ->
                                   (# ipv4,
                                      GHC.Base.map
                                        @ Foreign.C.Types.CInt
                                        @ GHC.Types.Int
                                        Graphics.UI.WXCore.WxcTypes.fromCInt
                                        (GHC.Types.:
                                           @ Foreign.C.Types.CInt
                                           (GHC.Int.I32# ipv5)
                                             `cast`
                                           (Nth:3
                                                (Nth:3
                                                     (Trans
                                                          (Nth:3
                                                               (Nth:3
                                                                    (Trans
                                                                         (<GHC.Ptr.Ptr
                                                                             GHC.Int.Int32>_R
                                                                          ->_R <GHC.Types.Int>_R
                                                                          ->_R Sym (GHC.Types.N:IO[0]
                                                                                        <GHC.Int.Int32>_R))
                                                                         ((GHC.Ptr.Ptr
                                                                             <GHC.Int.Int32, Foreign.C.Types.CInt>)_R
                                                                          ->_R <GHC.Types.Int>_R
                                                                          ->_R (GHC.Types.IO
                                                                                  (Sym (Foreign.C.Types.N:CInt[0])))_R))))
                                                          (GHC.Types.N:IO[0]
                                                               <Foreign.C.Types.CInt>_R))))
                                           w3) #) } } }
                          } in
                          $wf
                            (GHC.Prim.-# x# 1#)
                            (GHC.Types.[] @ Foreign.C.Types.CInt)
                            ipv2 })
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                          ->_R Sym (GHC.Types.N:IO[0] <[GHC.Types.Int]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Types.Int]>_R)
                        ipv
                   GHC.Types.True -> (# ipv, GHC.Types.[] @ GHC.Types.Int #) } } }) -}
1205d60a84810b35cb0b68169f530e17
  withArrayObject ::
    [GHC.Ptr.Ptr a]
    -> (Foreign.C.Types.CInt
        -> GHC.Ptr.Ptr (GHC.Ptr.Ptr a) -> GHC.Types.IO b)
    -> GHC.Types.IO b
  {- Arity: 2, Strictness: <L,U><L,C(C1(C1(U)))>,
     Unfolding: (\ @ a
                   @ b
                   (xs :: [GHC.Ptr.Ptr a])
                   (f :: Foreign.C.Types.CInt
                         -> GHC.Ptr.Ptr (GHC.Ptr.Ptr a) -> GHC.Types.IO b) ->
                 let {
                   lvl35 :: GHC.Int.Int32
                   = case GHC.List.$wlenAcc
                            @ (GHC.Ptr.Ptr a)
                            xs
                            0# of ww2 { DEFAULT ->
                     GHC.Int.I32# (GHC.Prim.narrow32Int# ww2) }
                 } in
                 Foreign.Marshal.Array.withArrayLen0
                   @ (GHC.Ptr.Ptr a)
                   @ b
                   (Foreign.Storable.$fStorablePtr @ a)
                   (GHC.Ptr.nullPtr @ a)
                   xs
                   (\ (ds :: GHC.Types.Int)
                      (eta :: GHC.Ptr.Ptr (GHC.Ptr.Ptr a))[OneShot] ->
                    f lvl35 `cast` (Sym (Foreign.C.Types.N:CInt[0])) eta)) -}
9a4abb82c1504412962144e2301050f2
  withArrayObjectResult ::
    (GHC.Ptr.Ptr (GHC.Ptr.Ptr a) -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Types.IO [Graphics.UI.WXCore.WxcObject.Object a]
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withArrayObjectResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
                  -> GHC.Types.IO Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <[Graphics.UI.WXCore.WxcObject.Object a]>_R)) -}
20116a95d6682a9c7a810712b7a696a5
  withArrayObjectResult1 ::
    (GHC.Ptr.Ptr (GHC.Ptr.Ptr a) -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Graphics.UI.WXCore.WxcObject.Object a] #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr (GHC.Ptr.Ptr a)
                         -> GHC.Types.IO Foreign.C.Types.CInt)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (f (GHC.Ptr.nullPtr @ (GHC.Ptr.Ptr a)))
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# x# 0#) of wild1 {
                   GHC.Types.False
                   -> (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ (GHC.Ptr.Ptr a)
                         @ [Graphics.UI.WXCore.WxcObject.Object a]
                         (GHC.Types.I# (GHC.Prim.*# x# 8#))
                         Foreign.Storable.$fStorableDouble5
                         (\ (carr :: GHC.Ptr.Ptr (GHC.Ptr.Ptr a))[OneShot]
                            (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (f carr) `cast` (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                                 s1 of ds2 { (#,#) ipv2 ipv3 ->
                          letrec {
                            $wf :: GHC.Prim.Int#
                                   -> [GHC.Ptr.Ptr a]
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         [Graphics.UI.WXCore.WxcObject.Object a] #)
                              <join 3> {- Arity: 3, Strictness: <S,1*U><L,U><S,U>, Inline: [0] -}
                            = \ (ww1 :: GHC.Prim.Int#)
                                (w3 :: [GHC.Ptr.Ptr a])
                                (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                              case ww1 of ds {
                                DEFAULT
                                -> case carr of wild2 { GHC.Ptr.Ptr a1 ->
                                   case GHC.Prim.readAddrOffAddr#
                                          @ GHC.Prim.RealWorld
                                          a1
                                          ds
                                          w4 of ds3 { (#,#) ipv4 ipv5 ->
                                   $wf
                                     (GHC.Prim.-# ds 1#)
                                     (GHC.Types.: @ (GHC.Ptr.Ptr a) (GHC.Ptr.Ptr @ a ipv5) w3)
                                     ipv4 } }
                                0#
                                -> case carr of wild2 { GHC.Ptr.Ptr a1 ->
                                   case GHC.Prim.readAddrOffAddr#
                                          @ GHC.Prim.RealWorld
                                          a1
                                          0#
                                          w4 of ds3 { (#,#) ipv4 ipv5 ->
                                   (# ipv4,
                                      GHC.Base.map
                                        @ (GHC.Ptr.Ptr a)
                                        @ (Graphics.UI.WXCore.WxcObject.Object a)
                                        (Graphics.UI.WXCore.WxcObject.$WObject @ a)
                                        (GHC.Types.:
                                           @ (GHC.Ptr.Ptr a)
                                           (GHC.Ptr.Ptr @ a ipv5)
                                           w3) #) } } }
                          } in
                          $wf (GHC.Prim.-# x# 1#) (GHC.Types.[] @ (GHC.Ptr.Ptr a)) ipv2 })
                           `cast`
                         (<GHC.Ptr.Ptr (GHC.Ptr.Ptr a)>_R
                          ->_R Sym (GHC.Types.N:IO[0]
                                        <[Graphics.UI.WXCore.WxcObject.Object a]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[Graphics.UI.WXCore.WxcObject.Object a]>_R)
                        ipv
                   GHC.Types.True
                   -> (# ipv,
                         GHC.Types.[] @ (Graphics.UI.WXCore.WxcObject.Object a) #) } } }) -}
73fa5068c65e61fb43557f364855483d
  withArrayString ::
    [GHC.Base.String]
    -> (Foreign.C.Types.CInt
        -> GHC.Ptr.Ptr Foreign.C.String.CString -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 3, Strictness: <S,U><L,C(C1(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withArrayString1
                  `cast`
                (forall (a :: <*>_N).
                 <[GHC.Base.String]>_R
                 ->_R <Foreign.C.Types.CInt
                       -> GHC.Ptr.Ptr Foreign.C.String.CString -> GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
baaa4131039add06dfa07ebc12a3f8cb
  withArrayString1 ::
    [GHC.Base.String]
    -> (Foreign.C.Types.CInt
        -> GHC.Ptr.Ptr Foreign.C.String.CString -> GHC.Types.IO a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3, Strictness: <S,U><L,C(C1(U))><S,U>,
     Unfolding: (\ @ a
                   (xs :: [GHC.Base.String])
                   (f :: Foreign.C.Types.CInt
                         -> GHC.Ptr.Ptr Foreign.C.String.CString -> GHC.Types.IO a)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 let {
                   lvl35 :: GHC.Int.Int32
                   = case GHC.List.$wlenAcc
                            @ [GHC.Types.Char]
                            xs
                            0# of ww2 { DEFAULT ->
                     GHC.Int.I32# (GHC.Prim.narrow32Int# ww2) }
                 } in
                 let {
                   lvl36 :: GHC.Types.Int
                            -> GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.C.Types.CChar)
                            -> GHC.Types.IO a
                     {- Arity: 2, Strictness: <L,A><L,U>,
                        Unfolding: InlineRule (2, True, True)
                                   (\ (ds :: GHC.Types.Int)
                                      (eta1 :: GHC.Ptr.Ptr
                                                 (GHC.Ptr.Ptr Foreign.C.Types.CChar))[OneShot] ->
                                    f lvl35 `cast` (Sym (Foreign.C.Types.N:CInt[0])) eta1) -}
                   = \ (ds :: GHC.Types.Int)
                       (eta1 :: GHC.Ptr.Ptr
                                  (GHC.Ptr.Ptr Foreign.C.Types.CChar))[OneShot] ->
                     f lvl35 `cast` (Sym (Foreign.C.Types.N:CInt[0])) eta1
                 } in
                 Graphics.UI.WXCore.WxcTypes.withArrayString2
                   @ a
                   xs
                   (GHC.Types.[] @ Foreign.C.String.CString)
                   (\ (cxs :: [Foreign.C.String.CString]) ->
                    Foreign.Marshal.Array.withArrayLen0
                      @ (GHC.Ptr.Ptr Foreign.C.Types.CChar)
                      @ a
                      (Foreign.Storable.$fStorablePtr @ Foreign.C.Types.CChar)
                      (GHC.Ptr.nullPtr @ Foreign.C.Types.CChar)
                      cxs
                      lvl36)
                   eta) -}
66064f4624a48eeb37321cc4feb54a36
  withArrayString2 ::
    [GHC.Base.String]
    -> [Foreign.C.String.CString]
    -> ([Foreign.C.String.CString] -> GHC.Types.IO a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 4, Strictness: <S,1*U><L,U><L,C(C1(U(U,U)))><S,U> -}
b1f947aa05f7f83aec887c60be628f82
  withArrayStringResult ::
    (GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.C.Types.CChar)
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Types.IO [GHC.Base.String]
  {- Arity: 2, Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withArrayStringResult1
                  `cast`
                (<GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.C.Types.CChar)
                  -> GHC.Types.IO Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)) -}
e1980207f0af3d465cad889e2869ad75
  withArrayStringResult1 ::
    (GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.C.Types.CChar)
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Base.String] #)
  {- Arity: 2, Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.C.Types.CChar)
                         -> GHC.Types.IO Foreign.C.Types.CInt)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (f (GHC.Ptr.nullPtr @ (GHC.Ptr.Ptr Foreign.C.Types.CChar)))
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# x# 0#) of wild1 {
                   GHC.Types.False
                   -> (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ (GHC.Ptr.Ptr Foreign.C.Types.CChar)
                         @ [GHC.Base.String]
                         (GHC.Types.I# (GHC.Prim.*# x# 8#))
                         Foreign.Storable.$fStorableDouble5
                         (\ (carr :: GHC.Ptr.Ptr
                                       (GHC.Ptr.Ptr Foreign.C.Types.CChar))[OneShot]
                            (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (f carr) `cast` (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                                 s1 of ds2 { (#,#) ipv2 ipv3 ->
                          letrec {
                            $wf :: GHC.Prim.Int#
                                   -> [GHC.Ptr.Ptr Foreign.C.Types.CChar]
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Base.String] #)
                              <join 3> {- Arity: 3, Strictness: <S,1*U><L,U><S,U>, Inline: [0] -}
                            = \ (ww1 :: GHC.Prim.Int#)
                                (w3 :: [GHC.Ptr.Ptr Foreign.C.Types.CChar])
                                (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                              case ww1 of ds {
                                DEFAULT
                                -> case carr of wild2 { GHC.Ptr.Ptr a1 ->
                                   case GHC.Prim.readAddrOffAddr#
                                          @ GHC.Prim.RealWorld
                                          a1
                                          ds
                                          w4 of ds3 { (#,#) ipv4 ipv5 ->
                                   $wf
                                     (GHC.Prim.-# ds 1#)
                                     (GHC.Types.:
                                        @ (GHC.Ptr.Ptr Foreign.C.Types.CChar)
                                        (GHC.Ptr.Ptr @ Foreign.C.Types.CChar ipv5)
                                        w3)
                                     ipv4 } }
                                0#
                                -> case carr of wild2 { GHC.Ptr.Ptr a1 ->
                                   case GHC.Prim.readAddrOffAddr#
                                          @ GHC.Prim.RealWorld
                                          a1
                                          0#
                                          w4 of ds3 { (#,#) ipv4 ipv5 ->
                                   Graphics.UI.WXCore.WxcTypes.withArrayStringResult2
                                     (GHC.Types.:
                                        @ (GHC.Ptr.Ptr Foreign.C.Types.CChar)
                                        (GHC.Ptr.Ptr @ Foreign.C.Types.CChar ipv5)
                                        w3)
                                     ipv4 } } }
                          } in
                          $wf
                            (GHC.Prim.-# x# 1#)
                            (GHC.Types.[] @ (GHC.Ptr.Ptr Foreign.C.Types.CChar))
                            ipv2 })
                           `cast`
                         (<GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.C.Types.CChar)>_R
                          ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)
                        ipv
                   GHC.Types.True
                   -> (# ipv, GHC.Types.[] @ GHC.Base.String #) } } }) -}
b50c810a4b4c8bc9cc42df53b759d642
  withArrayStringResult2 ::
    [Foreign.C.String.CString]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Base.String] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
add4953c5e5b64065052d799496737f9
  withArrayWString ::
    [GHC.Base.String]
    -> (Foreign.C.Types.CInt
        -> GHC.Ptr.Ptr Foreign.C.String.CWString -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 2, Strictness: <S,U><L,C(C1(U))>,
     Unfolding: (\ @ a
                   (xs :: [GHC.Base.String])
                   (f :: Foreign.C.Types.CInt
                         -> GHC.Ptr.Ptr Foreign.C.String.CWString -> GHC.Types.IO a) ->
                 let {
                   lvl35 :: GHC.Int.Int32
                   = case GHC.List.$wlenAcc
                            @ [GHC.Types.Char]
                            xs
                            0# of ww2 { DEFAULT ->
                     GHC.Int.I32# (GHC.Prim.narrow32Int# ww2) }
                 } in
                 let {
                   lvl36 :: GHC.Types.Int
                            -> GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.C.Types.CWchar)
                            -> GHC.Types.IO a
                     {- Arity: 2, Strictness: <L,A><L,U>,
                        Unfolding: InlineRule (2, True, True)
                                   (\ (ds :: GHC.Types.Int)
                                      (eta :: GHC.Ptr.Ptr
                                                (GHC.Ptr.Ptr Foreign.C.Types.CWchar))[OneShot] ->
                                    f lvl35 `cast` (Sym (Foreign.C.Types.N:CInt[0])) eta) -}
                   = \ (ds :: GHC.Types.Int)
                       (eta :: GHC.Ptr.Ptr
                                 (GHC.Ptr.Ptr Foreign.C.Types.CWchar))[OneShot] ->
                     f lvl35 `cast` (Sym (Foreign.C.Types.N:CInt[0])) eta
                 } in
                 Graphics.UI.WXCore.WxcTypes.withArrayWString1
                   @ a
                   xs
                   (GHC.Types.[] @ Foreign.C.String.CWString)
                   (\ (cxs :: [Foreign.C.String.CWString]) ->
                    Foreign.Marshal.Array.withArrayLen0
                      @ (GHC.Ptr.Ptr Foreign.C.Types.CWchar)
                      @ a
                      (Foreign.Storable.$fStorablePtr @ Foreign.C.Types.CWchar)
                      (GHC.Ptr.nullPtr @ Foreign.C.Types.CWchar)
                      cxs
                      lvl36)) -}
ef82baeff16adb9838470ab2872dc722
  withArrayWString1 ::
    [GHC.Base.String]
    -> [Foreign.C.String.CWString]
    -> ([Foreign.C.String.CWString] -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 3, Strictness: <S,1*U><L,U><L,C(U)> -}
ffda87f395162548e2c6228363350ee2
  withArrayWStringResult ::
    (GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.C.Types.CWchar)
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Types.IO [GHC.Base.String]
  {- Arity: 2, Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withArrayWStringResult1
                  `cast`
                (<GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.C.Types.CWchar)
                  -> GHC.Types.IO Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)) -}
0ba6884b9df8c21a3e57c025d8510cd4
  withArrayWStringResult1 ::
    (GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.C.Types.CWchar)
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Base.String] #)
  {- Arity: 2, Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr
                           (GHC.Ptr.Ptr Foreign.C.Types.CWchar)
                         -> GHC.Types.IO Foreign.C.Types.CInt)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (f (GHC.Ptr.nullPtr @ (GHC.Ptr.Ptr Foreign.C.Types.CWchar)))
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x# ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# x# 0#) of wild1 {
                   GHC.Types.False
                   -> (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ (GHC.Ptr.Ptr Foreign.C.Types.CWchar)
                         @ [GHC.Base.String]
                         (GHC.Types.I# (GHC.Prim.*# x# 8#))
                         Foreign.Storable.$fStorableDouble5
                         (\ (carr :: GHC.Ptr.Ptr
                                       (GHC.Ptr.Ptr Foreign.C.Types.CWchar))[OneShot]
                            (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (f carr) `cast` (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                                 s1 of ds2 { (#,#) ipv2 ipv3 ->
                          letrec {
                            $wf :: GHC.Prim.Int#
                                   -> [GHC.Ptr.Ptr Foreign.C.Types.CWchar]
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Base.String] #)
                              <join 3> {- Arity: 3, Strictness: <S,1*U><L,U><S,U>, Inline: [0] -}
                            = \ (ww1 :: GHC.Prim.Int#)
                                (w3 :: [GHC.Ptr.Ptr Foreign.C.Types.CWchar])
                                (w4 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                              case ww1 of ds {
                                DEFAULT
                                -> case carr of wild2 { GHC.Ptr.Ptr a1 ->
                                   case GHC.Prim.readAddrOffAddr#
                                          @ GHC.Prim.RealWorld
                                          a1
                                          ds
                                          w4 of ds3 { (#,#) ipv4 ipv5 ->
                                   $wf
                                     (GHC.Prim.-# ds 1#)
                                     (GHC.Types.:
                                        @ (GHC.Ptr.Ptr Foreign.C.Types.CWchar)
                                        (GHC.Ptr.Ptr @ Foreign.C.Types.CWchar ipv5)
                                        w3)
                                     ipv4 } }
                                0#
                                -> case carr of wild2 { GHC.Ptr.Ptr a1 ->
                                   case GHC.Prim.readAddrOffAddr#
                                          @ GHC.Prim.RealWorld
                                          a1
                                          0#
                                          w4 of ds3 { (#,#) ipv4 ipv5 ->
                                   Graphics.UI.WXCore.WxcTypes.withArrayWStringResult2
                                     (GHC.Types.:
                                        @ (GHC.Ptr.Ptr Foreign.C.Types.CWchar)
                                        (GHC.Ptr.Ptr @ Foreign.C.Types.CWchar ipv5)
                                        w3)
                                     ipv4 } } }
                          } in
                          $wf
                            (GHC.Prim.-# x# 1#)
                            (GHC.Types.[] @ (GHC.Ptr.Ptr Foreign.C.Types.CWchar))
                            ipv2 })
                           `cast`
                         (<GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.C.Types.CWchar)>_R
                          ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)
                        ipv
                   GHC.Types.True
                   -> (# ipv, GHC.Types.[] @ GHC.Base.String #) } } }) -}
e0357fe5af56274811612bc58b532dcd
  withArrayWStringResult2 ::
    [Foreign.C.String.CWString]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Base.String] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
f63f0ac7395613f778159c7bbcc4a7ed
  withBoolResult ::
    GHC.Types.IO Foreign.C.Types.CBool -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SL)),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withBoolResult1
                  `cast`
                (<GHC.Types.IO Foreign.C.Types.CBool>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
3eea4eb7d53fbde0f47ddb8c38f1f80d
  withBoolResult1 ::
    GHC.Types.IO Foreign.C.Types.CBool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SL)),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (io :: GHC.Types.IO Foreign.C.Types.CBool)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io `cast` (GHC.Types.N:IO[0] <Foreign.C.Types.CBool>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, Graphics.UI.WXCore.WxcTypes.fromCBool ipv1 #) }) -}
a6950b581f4429458f2f4f7e321b7e7e
  withByteStringResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CChar
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
  {- Arity: 2, Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withByteStringResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CChar
                  -> GHC.Types.IO Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.ByteString.Internal.ByteString>_R)) -}
7942e1c5d624ede4c20bc4006e7b4201
  withByteStringResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CChar
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Internal.ByteString #)
  {- Arity: 2, Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                         -> GHC.Types.IO Foreign.C.Types.CInt)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (f (GHC.Ptr.nullPtr @ Foreign.C.Types.CChar))
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# x 0#) of wild1 {
                   GHC.Types.False
                   -> case (GHC.Magic.noinline
                              @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                              GHC.IO.Encoding.getForeignEncoding)
                             `cast`
                           (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      GHC.Foreign.charIsRepresentable3
                        @ Data.ByteString.Internal.ByteString
                        ipv3
                        (case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.<# 0# x) of wild2 {
                           GHC.Types.False -> GHC.Types.[] @ GHC.Types.Char
                           GHC.Types.True -> Graphics.UI.WXCore.WxcTypes.$wxs x })
                        (\ (cstr :: Foreign.C.String.CString)
                           (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case (f cstr) `cast` (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                                s1 of ds3 { (#,#) ipv4 ipv5 ->
                         case cstr of ww3 { GHC.Ptr.Ptr ww4 ->
                         Data.ByteString.$wpackCStringLen ww4 x ipv4 } })
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Data.ByteString.Internal.ByteString>_R))
                        ipv2 }
                   GHC.Types.True
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcTypes.withByteStringResult2 #) } } }) -}
b528a485fd03dec751fc52227a8c582c
  withByteStringResult2 :: Data.ByteString.Internal.ByteString
  {- Unfolding: (case GHC.List.$wlenAcc
                        @ GHC.Types.Char
                        (GHC.Types.[] @ GHC.Types.Char)
                        0# of ww { DEFAULT ->
                 Data.ByteString.Internal.$wunsafePackLenChars
                   ww
                   (GHC.Types.[] @ GHC.Types.Char) }) -}
c8abfb24984ac778154396e061a34ffb
  withCPoint ::
    Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int
    -> (Foreign.C.Types.CInt -> Foreign.C.Types.CInt -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(U(U),U(U))><C(C(S)),1*C1(C1(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (ds :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                   (f :: Foreign.C.Types.CInt
                         -> Foreign.C.Types.CInt -> GHC.Types.IO a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Point x y ->
                 case x of wild1 { GHC.Types.I# x# ->
                 case y of wild2 { GHC.Types.I# x#1 ->
                 f (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))
                   (GHC.Int.I32# (GHC.Prim.narrow32Int# x#1))
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0])) } } }) -}
a859b9c9b0a027b1e34cfbf082059aec
  withCPointDouble ::
    Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double
    -> (Foreign.C.Types.CDouble
        -> Foreign.C.Types.CDouble -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(U,U)><C(C(S)),1*C1(C1(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (ds :: Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double)
                   (f :: Foreign.C.Types.CDouble
                         -> Foreign.C.Types.CDouble -> GHC.Types.IO a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Point x y ->
                 f x `cast` (Sym (Foreign.C.Types.N:CDouble[0]))
                   y `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
a815dd0d61d72bcabd02d915e7f647e9
  withCRect ::
    Graphics.UI.WXCore.WxcTypes.Rect
    -> (Foreign.C.Types.CInt
        -> Foreign.C.Types.CInt
        -> Foreign.C.Types.CInt
        -> Foreign.C.Types.CInt
        -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)S(S)S(S)S(S)),1*U(U(U),U(U),U(U),U(U))><C(C(C(C(S)))),1*C1(C1(C1(C1(U))))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: Graphics.UI.WXCore.WxcTypes.Rect)
                   (w1 :: Foreign.C.Types.CInt
                          -> Foreign.C.Types.CInt
                          -> Foreign.C.Types.CInt
                          -> Foreign.C.Types.CInt
                          -> GHC.Types.IO a) ->
                 case w of ww { Graphics.UI.WXCore.WxcTypes.Rect ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.I# ww6 ->
                 case ww2 of ww7 { GHC.Types.I# ww8 ->
                 case ww3 of ww9 { GHC.Types.I# ww10 ->
                 case ww4 of ww11 { GHC.Types.I# ww12 ->
                 Graphics.UI.WXCore.WxcTypes.$wwithCRect
                   @ a
                   ww6
                   ww8
                   ww10
                   ww12
                   w1 } } } } }) -}
54ebfdb3023836f482ea502d60b81a88
  withCRectDouble ::
    Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double
    -> (Foreign.C.Types.CDouble
        -> Foreign.C.Types.CDouble
        -> Foreign.C.Types.CDouble
        -> Foreign.C.Types.CDouble
        -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SSSS),1*U(U,U,U,U)><C(C(C(C(S)))),1*C1(C1(C1(C1(U))))>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (ds :: Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double)
                   (f :: Foreign.C.Types.CDouble
                         -> Foreign.C.Types.CDouble
                         -> Foreign.C.Types.CDouble
                         -> Foreign.C.Types.CDouble
                         -> GHC.Types.IO a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Rect x0 y0 x1 y1 ->
                 f x0 `cast` (Sym (Foreign.C.Types.N:CDouble[0]))
                   y0 `cast` (Sym (Foreign.C.Types.N:CDouble[0]))
                   x1 `cast` (Sym (Foreign.C.Types.N:CDouble[0]))
                   y1 `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
b4396d3ea583ea85d2746175696ae76f
  withCSize ::
    Graphics.UI.WXCore.WxcTypes.Size
    -> (Foreign.C.Types.CInt -> Foreign.C.Types.CInt -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(U(U),U(U))><C(C(S)),1*C1(C1(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (ds :: Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Int)
                   (f :: Foreign.C.Types.CInt
                         -> Foreign.C.Types.CInt -> GHC.Types.IO a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Size w h ->
                 case w of wild1 { GHC.Types.I# x# ->
                 case h of wild2 { GHC.Types.I# x#1 ->
                 f (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))
                   (GHC.Int.I32# (GHC.Prim.narrow32Int# x#1))
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0])) } } }) -}
26dc9b2ead2060367d2cdc48402133ec
  withCSizeDouble ::
    Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double
    -> (Foreign.C.Types.CDouble
        -> Foreign.C.Types.CDouble -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(U,U)><C(C(S)),1*C1(C1(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (ds :: Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double)
                   (f :: Foreign.C.Types.CDouble
                         -> Foreign.C.Types.CDouble -> GHC.Types.IO a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Size w h ->
                 f w `cast` (Sym (Foreign.C.Types.N:CDouble[0]))
                   h `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
fc8ddbcd1e5a754efb541613ebd7dd68
  withCVector ::
    Graphics.UI.WXCore.WxcTypes.Vector
    -> (Foreign.C.Types.CInt -> Foreign.C.Types.CInt -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(U(U),U(U))><C(C(S)),1*C1(C1(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (ds :: Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Int)
                   (f :: Foreign.C.Types.CInt
                         -> Foreign.C.Types.CInt -> GHC.Types.IO a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Vector x y ->
                 case x of wild1 { GHC.Types.I# x# ->
                 case y of wild2 { GHC.Types.I# x#1 ->
                 f (GHC.Int.I32# (GHC.Prim.narrow32Int# x#))
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0]))
                   (GHC.Int.I32# (GHC.Prim.narrow32Int# x#1))
                     `cast`
                   (Sym (Foreign.C.Types.N:CInt[0])) } } }) -}
6a18344108f397cd8ef527318da12e50
  withCVectorDouble ::
    Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double
    -> (Foreign.C.Types.CDouble
        -> Foreign.C.Types.CDouble -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(U,U)><C(C(S)),1*C1(C1(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (ds :: Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double)
                   (f :: Foreign.C.Types.CDouble
                         -> Foreign.C.Types.CDouble -> GHC.Types.IO a) ->
                 case ds of wild { Graphics.UI.WXCore.WxcTypes.Vector x y ->
                 f x `cast` (Sym (Foreign.C.Types.N:CDouble[0]))
                   y `cast` (Sym (Foreign.C.Types.N:CDouble[0])) }) -}
94a362c68de399aaa44f448aea0dcceb
  withCharResult ::
    (GHC.Real.Integral a, GHC.Show.Show a) =>
    GHC.Types.IO a -> GHC.Types.IO GHC.Types.Char
  {- Arity: 4,
     Strictness: <L,U(1*U(1*U(A,A,A,A,A,A,1*C1(U)),1*U(A,A,1*C1(C1(U)),A,A,A,A,A),A),A,A,A,A,A,A,A,1*C1(U))><L,1*U(A,1*C1(U),A)><C(S(SL)),1*C1(U(U,U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withCharResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Real.Integral a>_R
                 ->_R <GHC.Show.Show a>_R
                 ->_R <GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Char>_R)) -}
a0ca34adf00c9916c32dfc3815fcc93d
  withCharResult1 ::
    (GHC.Real.Integral a, GHC.Show.Show a) =>
    GHC.Types.IO a
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Char #)
  {- Arity: 4,
     Strictness: <L,U(1*U(1*U(A,A,A,A,A,A,1*C1(U)),1*U(A,A,1*C1(C1(U)),A,A,A,A,A),A),A,A,A,A,A,A,A,1*C1(U))><L,1*U(A,1*C1(U),A)><C(S(SL)),1*C1(U(U,U))><S,U>,
     Unfolding: (\ @ a
                   ($dIntegral :: GHC.Real.Integral a)
                   ($dShow :: GHC.Show.Show a)
                   (eta :: GHC.Types.IO a)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case eta `cast` (GHC.Types.N:IO[0] <a>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 let {
                   $dReal :: GHC.Real.Real a = GHC.Real.$p1Integral @ a $dIntegral
                 } in
                 case GHC.Classes.<
                        @ a
                        (GHC.Real.$p2Real @ a $dReal)
                        ipv1
                        (GHC.Num.fromInteger
                           @ a
                           (GHC.Real.$p1Real @ a $dReal)
                           Graphics.UI.WXCore.WxcTypes.pointZero1) of wild {
                   GHC.Types.False
                   -> (# ipv,
                         case GHC.Integer.Type.integerToInt
                                (GHC.Real.toInteger @ a $dIntegral ipv1) of wild1 { DEFAULT ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.leWord# (GHC.Prim.int2Word# wild1) 1114111##) of wild2 {
                           GHC.Types.False -> GHC.Char.$wlvl wild1
                           GHC.Types.True -> GHC.Types.C# (GHC.Prim.chr# wild1) } } #)
                   GHC.Types.True
                   -> case Debug.Trace.putTraceMsg1
                             (GHC.CString.unpackAppendCString#
                                Graphics.UI.WXCore.WxcTypes.withCharResult3
                                (GHC.Show.show @ a $dShow ipv1))
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      (# ipv2, Graphics.UI.WXCore.WxcTypes.withCharResult2 #) } } }) -}
bf11005a0ed52c42ec8f46d2cb1245f7
  withCharResult2 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '\n'#) -}
238db5a1cd6a4a1df2196203b954f527
  withCharResult3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Recieved negative unicode: "#) -}
282f0de075f74f9a01a715c81a4f1b8f
  withColourPtr ::
    Graphics.UI.WXCore.WxcTypes.Color
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
        -> GHC.Types.IO b)
    -> GHC.Types.IO b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><L,1*C1(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withColourPtr1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Graphics.UI.WXCore.WxcTypes.Color>_R
                 ->_R <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
                       -> GHC.Types.IO b>_R
                 ->_R Sym (GHC.Types.N:IO[0] <b>_R)) -}
27866f7f38f491852cb5f70f27fb9f6e
  withColourPtr1 ::
    Graphics.UI.WXCore.WxcTypes.Color
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
        -> GHC.Types.IO b)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><L,1*C1(C1(U(U,U)))><S,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ b
                   (w :: Graphics.UI.WXCore.WxcTypes.Color)
                   (w1 :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
                          -> GHC.Types.IO b)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w `cast`
                      (Graphics.UI.WXCore.WxcTypes.N:Color[0]) of ww { GHC.Types.W# ww1 ->
                 Graphics.UI.WXCore.WxcTypes.$wwithColourPtr @ a @ b ww1 w1 w2 }) -}
a9699f6c3f234a2a4fd8aa550ef09a8b
  withColourRef ::
    GHC.Base.String
    -> Graphics.UI.WXCore.WxcTypes.Color
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
        -> GHC.Types.IO b)
    -> GHC.Types.IO b
  {- Arity: 4,
     Strictness: <L,1*U><S(S),1*U(U)><L,1*C1(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withColourRef1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <GHC.Base.String>_R
                 ->_R <Graphics.UI.WXCore.WxcTypes.Color>_R
                 ->_R <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
                       -> GHC.Types.IO b>_R
                 ->_R Sym (GHC.Types.N:IO[0] <b>_R)) -}
8d8adf0b1d75f73e0aaf65a9c5c591ed
  withColourRef1 ::
    GHC.Base.String
    -> Graphics.UI.WXCore.WxcTypes.Color
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
        -> GHC.Types.IO b)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 4,
     Strictness: <L,1*U><S(S),1*U(U)><L,1*C1(C1(U(U,U)))><S,U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ b
                   (w :: GHC.Base.String)
                   (w1 :: Graphics.UI.WXCore.WxcTypes.Color)
                   (w2 :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
                          -> GHC.Types.IO b)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1
                        `cast`
                      (Graphics.UI.WXCore.WxcTypes.N:Color[0]) of ww { GHC.Types.W# ww1 ->
                 Graphics.UI.WXCore.WxcTypes.$wwithColourRef
                   @ a
                   @ b
                   w
                   ww1
                   w2
                   w3 }) -}
61da34cb51b3aa3d4c2085e15e226ad5
  withDoubleResult ::
    GHC.Types.IO Foreign.C.Types.CDouble
    -> GHC.Types.IO GHC.Types.Double
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SL)),1*C1(U(U,U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withDoubleResult1
                  `cast`
                (<GHC.Types.IO Foreign.C.Types.CDouble>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Double>_R)) -}
21eb141218a776f75b33147622533892
  withDoubleResult1 ::
    GHC.Types.IO Foreign.C.Types.CDouble
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Double #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SL)),1*C1(U(U,U))><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (io :: GHC.Types.IO Foreign.C.Types.CDouble)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io `cast` (GHC.Types.N:IO[0] <Foreign.C.Types.CDouble>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, ipv1 `cast` (Foreign.C.Types.N:CDouble[0]) #) }) -}
6db23ac79cb133db639694ab4a2639fa
  withIntPtrResult ::
    GHC.Types.IO Foreign.C.Types.CIntPtr
    -> GHC.Types.IO Foreign.Ptr.IntPtr
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SL)),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withIntPtrResult1
                  `cast`
                (<GHC.Types.IO Foreign.C.Types.CIntPtr>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Foreign.Ptr.IntPtr>_R)) -}
2b56d83d0bb38f5d44e70e4415b67247
  withIntPtrResult1 ::
    GHC.Types.IO Foreign.C.Types.CIntPtr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.Ptr.IntPtr #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SL)),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (io :: GHC.Types.IO Foreign.C.Types.CIntPtr)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io `cast` (GHC.Types.N:IO[0] <Foreign.C.Types.CIntPtr>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case ipv1
                           `cast`
                         (Foreign.C.Types.N:CIntPtr[0]) of wild { GHC.Int.I64# x# ->
                    (GHC.Types.I# x#) `cast` (Sym (Foreign.Ptr.N:IntPtr[0])) } #) }) -}
4c4fa636349c2ecb62b79d6deb31202f
  withIntResult ::
    GHC.Types.IO Foreign.C.Types.CInt -> GHC.Types.IO GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SL)),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withIntResult1
                  `cast`
                (<GHC.Types.IO Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Int>_R)) -}
e63060ee3981554c7ed8708557fe2b9b
  withIntResult1 ::
    GHC.Types.IO Foreign.C.Types.CInt
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SL)),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (io :: GHC.Types.IO Foreign.C.Types.CInt)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io `cast` (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case ipv1
                           `cast`
                         (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x# ->
                    GHC.Types.I# x# } #) }) -}
8514f2e4f7d729febe2eecb09be03913
  withLazyByteStringResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CChar
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Types.IO Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withLazyByteStringResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CChar
                  -> GHC.Types.IO Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.ByteString.Lazy.Internal.ByteString>_R)) -}
bae895803c98c38f91624ca23c09e54b
  withLazyByteStringResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CChar
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Lazy.Internal.ByteString #)
  {- Arity: 2, Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                         -> GHC.Types.IO Foreign.C.Types.CInt)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Graphics.UI.WXCore.WxcTypes.withLazyByteStringResult2
                        f
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, Data.ByteString.Lazy.Internal.packChars ipv1 #) }) -}
39fb69823e6cd3012ed5aa0422f4c776
  withLazyByteStringResult2 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CChar
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                         -> GHC.Types.IO Foreign.C.Types.CInt)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (f (GHC.Ptr.nullPtr @ Foreign.C.Types.CChar))
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# x 0#) of wild1 {
                   GHC.Types.False
                   -> case (GHC.Magic.noinline
                              @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                              GHC.IO.Encoding.getForeignEncoding)
                             `cast`
                           (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      let {
                        lvl35 :: GHC.Types.Int = GHC.Types.I# x
                      } in
                      GHC.Foreign.charIsRepresentable3
                        @ GHC.Base.String
                        ipv3
                        (case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.<# 0# x) of wild2 {
                           GHC.Types.False -> GHC.Types.[] @ GHC.Types.Char
                           GHC.Types.True -> Graphics.UI.WXCore.WxcTypes.$wxs1 x })
                        (\ (cstr :: Foreign.C.String.CString)
                           (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case (f cstr) `cast` (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                                s1 of ds3 { (#,#) ipv4 ipv5 ->
                         Foreign.C.String.peekCStringLen1 (cstr, lvl35) ipv4 })
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv2 }
                   GHC.Types.True
                   -> (# ipv, GHC.Types.[] @ GHC.Types.Char #) } } }) -}
5a612d1ccf7534480930abeb59442e62
  withManagedBitmapResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBitmap a))
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Bitmap a)
  {- Arity: 2, Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withManagedBitmapResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBitmap a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Bitmap a>_R)) -}
70ea2e12d38ac7363731b0589a86ef1f
  withManagedBitmapResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBitmap a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Bitmap a #)
  {- Arity: 2, Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBitmap a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBitmap a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 case ds4 of wild1 {
                   DEFAULT
                   -> (# ds3,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TBitmap a)
                           ds2 #)
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds2
                             ds3 of wild2 { (#,#) ds5 ds6 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TBitmap a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TBitmap a))
                           ds6)
                        ds5 } } } } }) -}
6717441e8001884667bd66ac89a0ddbd
  withManagedBrushResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBrush a))
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Brush a)
  {- Arity: 2, Strictness: <C(S(LS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withManagedBrushResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBrush a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Brush a>_R)) -}
70a67d49bc01796afa6efa19decbeb30
  withManagedBrushResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBrush a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Brush a #)
  {- Arity: 2, Strictness: <C(S(LS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBrush a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBrush a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        GHC.Prim.realWorld# of wild { (#,#) ds3 ds4 ->
                 case ds4 of wild1 {
                   DEFAULT
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TBrush a)
                           ds2 #)
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds2
                             ipv of wild2 { (#,#) ds5 ds6 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TBrush a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TBrush a))
                           ds6)
                        ds5 } } } } }) -}
a502954a5cd26b2870f99c2994c3d026
  withManagedColourResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a))
    -> GHC.Types.IO Graphics.UI.WXCore.WxcTypes.Color
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withManagedColourResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Color>_R)) -}
0b56650a43e7a9cd3760a242e4fcbf81
  withManagedColourResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Color #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 case GHC.Prim.narrow32Int# ds4 of wild1 {
                   DEFAULT
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                             ds2
                             ds3 of wild2 { (#,#) ds5 ds6 ->
                      case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld #)}
                             ds2
                             ds5 of wild3 { Unit# ds7 ->
                      (# ds7,
                         (GHC.Types.W# ds6)
                           `cast`
                         (Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])) #) } }
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld #)}
                             ds2
                             ds3 of wild2 { Unit# ds5 ->
                      (# ds5,
                         GHC.Enum.$fBoundedWord_$cmaxBound
                           `cast`
                         (Sym (Graphics.UI.WXCore.WxcTypes.N:Color[0])) #) } } } } }) -}
65da542343064cb40374a57f7fcc4c88
  withManagedCursorResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TCursor a))
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Cursor a)
  {- Arity: 2, Strictness: <C(S(LS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withManagedCursorResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TCursor a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Cursor a>_R)) -}
73639c4fb43ae321d16dc8ff73b49ea9
  withManagedCursorResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TCursor a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Cursor a #)
  {- Arity: 2, Strictness: <C(S(LS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TCursor a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TCursor a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        GHC.Prim.realWorld# of wild { (#,#) ds3 ds4 ->
                 case ds4 of wild1 {
                   DEFAULT
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TCursor a)
                           ds2 #)
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds2
                             ipv of wild2 { (#,#) ds5 ds6 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TCursor a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TCursor a))
                           ds6)
                        ds5 } } } } }) -}
1ca0ba74f090e45c59b37d07d9f747f5
  withManagedDateTimeResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TDateTime a))
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.DateTime a)
  {- Arity: 2, Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withManagedDateTimeResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TDateTime a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.DateTime a>_R)) -}
bf6d169d8ae8d4e1360fdb7c3032406f
  withManagedDateTimeResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TDateTime a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.DateTime a #)
  {- Arity: 2, Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TDateTime a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TDateTime a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { GHC.Ptr.Ptr a1 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqAddr# a1 __NULL) of wild1 {
                   GHC.Types.False
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             a1
                             ipv of wild2 { (#,#) ds ds2 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TDateTime a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TDateTime a))
                           ds2)
                        ds }
                   GHC.Types.True
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TDateTime a)
                           a1 #) } } }) -}
900407a2ee20f312daa868c0143b2534
  withManagedFontResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFont a))
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Font a)
  {- Arity: 2, Strictness: <C(S(LS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withManagedFontResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFont a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Font a>_R)) -}
85d97140e3a1f66989b847dd78460eff
  withManagedFontResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFont a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Font a #)
  {- Arity: 2, Strictness: <C(S(LS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFont a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFont a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        GHC.Prim.realWorld# of wild { (#,#) ds3 ds4 ->
                 case ds4 of wild1 {
                   DEFAULT
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TFont a)
                           ds2 #)
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds2
                             ipv of wild2 { (#,#) ds5 ds6 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TFont a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TFont a))
                           ds6)
                        ds5 } } } } }) -}
25a31d184329b78cc59fe508f649a252
  withManagedGridCellCoordsArrayResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr
         (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a))
    -> GHC.Types.IO
         (Graphics.UI.WXCore.WxcClassTypes.GridCellCoordsArray a)
  {- Arity: 2, Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withManagedGridCellCoordsArrayResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr
                       (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.GridCellCoordsArray a>_R)) -}
bbdde0f8fcaa3da8591513c79740dc92
  withManagedGridCellCoordsArrayResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr
         (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.GridCellCoordsArray a #)
  {- Arity: 2, Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr
                               (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr
                              (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { GHC.Ptr.Ptr a1 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqAddr# a1 __NULL) of wild1 {
                   GHC.Types.False
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             a1
                             ipv of wild2 { (#,#) ds ds2 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a))
                           ds2)
                        ds }
                   GHC.Types.True
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a)
                           a1 #) } } }) -}
381c4033e3f5a495e011a8cfd7ab0eec
  withManagedIconResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TIcon a))
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Icon a)
  {- Arity: 2, Strictness: <C(S(LS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withManagedIconResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TIcon a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Icon a>_R)) -}
21f81ddf5ced35fdaaeee37db893d5c3
  withManagedIconResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TIcon a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Icon a #)
  {- Arity: 2, Strictness: <C(S(LS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TIcon a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TIcon a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        GHC.Prim.realWorld# of wild { (#,#) ds3 ds4 ->
                 case ds4 of wild1 {
                   DEFAULT
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TIcon a)
                           ds2 #)
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds2
                             ipv of wild2 { (#,#) ds5 ds6 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TIcon a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TIcon a))
                           ds6)
                        ds5 } } } } }) -}
611affe9896f0e3c5474644013a83225
  withManagedObjectResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxObject a))
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.WxObject a)
  {- Arity: 2, Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withManagedObjectResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxObject a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.WxObject a>_R)) -}
4f59cffc727e0b8d9283bb78ec70d998
  withManagedObjectResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxObject a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.WxObject a #)
  {- Arity: 2, Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxObject a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxObject a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                   @ (Graphics.UI.WXCore.WxcClassTypes.TWxObject a)
                   (GHC.Ptr.Ptr
                      @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                           (Graphics.UI.WXCore.WxcClassTypes.TWxObject a))
                      ds4)
                   ds3 } } }) -}
2c2cf5cb5e3bfecccf21d22b8ffea203
  withManagedPenResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPen a))
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Pen a)
  {- Arity: 2, Strictness: <C(S(LS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withManagedPenResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPen a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Pen a>_R)) -}
69451637677ae62cb9b184d61a7a9941
  withManagedPenResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPen a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Pen a #)
  {- Arity: 2, Strictness: <C(S(LS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPen a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPen a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        GHC.Prim.realWorld# of wild { (#,#) ds3 ds4 ->
                 case ds4 of wild1 {
                   DEFAULT
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TPen a)
                           ds2 #)
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds2
                             ipv of wild2 { (#,#) ds5 ds6 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TPen a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TPen a))
                           ds6)
                        ds5 } } } } }) -}
d15cc098e712bd43f7b34fed4ca28b3e
  withManagedStringResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxString a))
    -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withManagedStringResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxString a))>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
82f3296b1a95162fd02f1bb86a1612d3
  withManagedStringResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxString a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxString a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxString a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 let {
                   ipv2 :: GHC.Prim.Int# = GHC.Prim.narrow32Int# ds4
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ipv2 0#) of wild1 {
                   GHC.Types.False
                   -> case (Foreign.Marshal.Array.withArrayLen0
                              @ Foreign.C.Types.CWchar
                              @ GHC.Base.String
                              Foreign.C.Types.$fStorableCWchar
                              Foreign.C.String.newCWString3
                                `cast`
                              (Sym (Foreign.C.Types.N:CWchar[0]))
                              (case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.<# 0# ipv2) of wild2 {
                                 GHC.Types.False -> GHC.Types.[] @ Foreign.C.Types.CWchar
                                 GHC.Types.True -> Graphics.UI.WXCore.WxcTypes.$wxs2 ipv2 })
                              (\ (ds5 :: GHC.Types.Int)
                                 (eta :: Foreign.C.String.CWString)[OneShot]
                                 (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               case eta of ds6 { GHC.Ptr.Ptr ds7 ->
                               case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                           -> GHC.Prim.Addr#
                                                                                           -> GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld
                                                                                           -> (# GHC.Prim.State#
                                                                                                   GHC.Prim.RealWorld,
                                                                                                 GHC.Prim.Int# #)}
                                      ds2
                                      ds7
                                      eta1 of wild2 { (#,#) ds8 ds9 ->
                               Foreign.C.String.$wpeekCWStringLen ds6 ipv2 ds8 } })
                                `cast`
                              (<GHC.Types.Int>_R
                               ->_R <Foreign.C.String.CWString>_R
                               ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)))
                             `cast`
                           (GHC.Types.N:IO[0] <[GHC.Types.Char]>_R)
                             ds3 of ds5 { (#,#) ipv3 ipv4 ->
                      case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld #)}
                             ds2
                             ipv3 of wild2 { Unit# ds6 ->
                      (# ds6, ipv4 #) } }
                   GHC.Types.True
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld #)}
                             ds2
                             ds3 of wild2 { Unit# ds5 ->
                      (# ds5, GHC.Types.[] @ GHC.Types.Char #) } } } } }) -}
79ba0fb8e17a03baeb3623e70a2ee271
  withManagedTreeItemIdResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a))
    -> GHC.Types.IO Graphics.UI.WXCore.WxcTypes.TreeItem
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withManagedTreeItemIdResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.TreeItem>_R)) -}
ab2910f194c47eb77e331aad8811fced
  withManagedTreeItemIdResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.TreeItem #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld #)}
                        ds2
                        ds3 of wild1 { Unit# ds5 ->
                 (# ds5,
                    (GHC.Types.I# ds4)
                      `cast`
                    (Trans
                         (Sym (Foreign.Ptr.N:IntPtr[0]))
                         (Sym (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0]))) #) } } } }) -}
692afceab6b88e6d93498f34bbf30abe
  withObjectRef ::
    GHC.Base.String
    -> Graphics.UI.WXCore.WxcObject.Object a
    -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
    -> GHC.Types.IO b
  {- Arity: 4, Strictness: <L,1*U><S,1*U><L,1*C1(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.colorFromColour5
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <GHC.Base.String>_R
                 ->_R <Graphics.UI.WXCore.WxcObject.Object a>_R
                 ->_R <GHC.Ptr.Ptr a -> GHC.Types.IO b>_R
                 ->_R Sym (GHC.Types.N:IO[0] <b>_R)) -}
fc41558027435bbcc415b67586afab4e
  withObjectResult ::
    GHC.Types.IO (GHC.Ptr.Ptr a)
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcObject.Object a)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SL)),1*C1(U(U,U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withObjectResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO (GHC.Ptr.Ptr a)>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcObject.Object a>_R)) -}
40940f60801c1ca34647378118f005fa
  withObjectResult1 ::
    GHC.Types.IO (GHC.Ptr.Ptr a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcObject.Object a #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SL)),1*C1(U(U,U))><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (io :: GHC.Types.IO (GHC.Ptr.Ptr a))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io `cast` (GHC.Types.N:IO[0] <GHC.Ptr.Ptr a>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, Graphics.UI.WXCore.WxcObject.$WObject @ a ipv1 #) }) -}
422d5c440340fe2b96226ce8068c5404
  withPointDoubleResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Ptr.Ptr Foreign.C.Types.CDouble -> GHC.Types.IO ())
    -> GHC.Types.IO
         (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(S(SL)))),1*C1(C1(C1(U(U,A))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withPointDoubleResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CDouble
                  -> GHC.Ptr.Ptr Foreign.C.Types.CDouble -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double>_R)) -}
346fbf279018bc04e989221cce68d49b
  withPointDoubleResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Ptr.Ptr Foreign.C.Types.CDouble -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(S(SL)))),1*C1(C1(C1(U(U,A))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CDouble
                         -> GHC.Ptr.Ptr Foreign.C.Types.CDouble -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (Foreign.Marshal.Alloc.allocaBytesAligned
                    @ Foreign.C.Types.CDouble
                    @ (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double)
                    Foreign.Storable.$fStorableDouble5
                    Foreign.Storable.$fStorableDouble5
                    (\ (px :: GHC.Ptr.Ptr Foreign.C.Types.CDouble)[OneShot]
                       (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     (Foreign.Marshal.Alloc.allocaBytesAligned
                        @ Foreign.C.Types.CDouble
                        @ (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double)
                        Foreign.Storable.$fStorableDouble5
                        Foreign.Storable.$fStorableDouble5
                        (\ (py :: GHC.Ptr.Ptr Foreign.C.Types.CDouble)[OneShot]
                           (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case (f px py) `cast` (GHC.Types.N:IO[0] <()>_R)
                                s of ds1 { (#,#) ipv ipv1 ->
                         case px
                                `cast`
                              (Nth:2
                                   (Trans
                                        ((GHC.Ptr.Ptr <Foreign.C.Types.CDouble, GHC.Types.Double>)_R
                                         ->_R (GHC.Types.IO (Foreign.C.Types.N:CDouble[0]))_R)
                                        (<GHC.Ptr.Ptr GHC.Types.Double>_R
                                         ->_R GHC.Types.N:IO[0]
                                                  <GHC.Types.Double>_R))) of wild { GHC.Ptr.Ptr a ->
                         case GHC.Prim.readDoubleOffAddr#
                                @ GHC.Prim.RealWorld
                                a
                                0#
                                ipv of ds2 { (#,#) ipv2 ipv3 ->
                         case py
                                `cast`
                              (Nth:2
                                   (Trans
                                        ((GHC.Ptr.Ptr <Foreign.C.Types.CDouble, GHC.Types.Double>)_R
                                         ->_R (GHC.Types.IO (Foreign.C.Types.N:CDouble[0]))_R)
                                        (<GHC.Ptr.Ptr GHC.Types.Double>_R
                                         ->_R GHC.Types.N:IO[0]
                                                  <GHC.Types.Double>_R))) of wild1 { GHC.Ptr.Ptr a1 ->
                         case GHC.Prim.readDoubleOffAddr#
                                @ GHC.Prim.RealWorld
                                a1
                                0#
                                ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                         (# ipv4,
                            Graphics.UI.WXCore.WxcTypes.Point
                              @ GHC.Types.Double
                              (GHC.Types.D# ipv3)
                              (GHC.Types.D# ipv5) #) } } } } })
                          `cast`
                        (<GHC.Ptr.Ptr Foreign.C.Types.CDouble>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double>_R)))
                       `cast`
                     (GHC.Types.N:IO[0]
                          <Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double>_R)
                       eta1)
                      `cast`
                    (<GHC.Ptr.Ptr Foreign.C.Types.CDouble>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double>_R)))
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Double>_R)
                   eta) -}
de0c7482e17936e87a7787d9c0c1e03d
  withPointResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO ())
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(S(SL)))),1*C1(C1(C1(U(U,A))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withPointResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CInt
                  -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int>_R)) -}
6aeec5330f2c6336139ac63ca4f7f84c
  withPointResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(S(SL)))),1*C1(C1(C1(U(U,A))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CInt
                         -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (Foreign.Marshal.Alloc.allocaBytesAligned
                    @ Foreign.C.Types.CInt
                    @ (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                    Foreign.Storable.$fStorableBool7
                    Foreign.Storable.$fStorableBool7
                    (\ (px :: GHC.Ptr.Ptr Foreign.C.Types.CInt)[OneShot]
                       (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     (Foreign.Marshal.Alloc.allocaBytesAligned
                        @ Foreign.C.Types.CInt
                        @ (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
                        Foreign.Storable.$fStorableBool7
                        Foreign.Storable.$fStorableBool7
                        (\ (py :: GHC.Ptr.Ptr Foreign.C.Types.CInt)[OneShot]
                           (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case (f px py) `cast` (GHC.Types.N:IO[0] <()>_R)
                                s of ds1 { (#,#) ipv ipv1 ->
                         case px
                                `cast`
                              (Nth:2
                                   (Trans
                                        ((GHC.Ptr.Ptr <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                         ->_R (GHC.Types.IO (Foreign.C.Types.N:CInt[0]))_R)
                                        (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                         ->_R GHC.Types.N:IO[0]
                                                  <GHC.Int.Int32>_R))) of wild { GHC.Ptr.Ptr a ->
                         case GHC.Prim.readInt32OffAddr#
                                @ GHC.Prim.RealWorld
                                a
                                0#
                                ipv of ds2 { (#,#) ipv2 ipv3 ->
                         case py
                                `cast`
                              (Nth:2
                                   (Trans
                                        ((GHC.Ptr.Ptr <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                         ->_R (GHC.Types.IO (Foreign.C.Types.N:CInt[0]))_R)
                                        (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                         ->_R GHC.Types.N:IO[0]
                                                  <GHC.Int.Int32>_R))) of wild1 { GHC.Ptr.Ptr a1 ->
                         case GHC.Prim.readInt32OffAddr#
                                @ GHC.Prim.RealWorld
                                a1
                                0#
                                ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                         (# ipv4,
                            Graphics.UI.WXCore.WxcTypes.Point
                              @ GHC.Types.Int
                              (GHC.Types.I# ipv3)
                              (GHC.Types.I# ipv5) #) } } } } })
                          `cast`
                        (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int>_R)))
                       `cast`
                     (GHC.Types.N:IO[0]
                          <Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int>_R)
                       eta1)
                      `cast`
                    (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int>_R)))
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int>_R)
                   eta) -}
927a49281fb4593967015c9aea05f9a3
  withRectDoubleResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Types.IO ())
    -> GHC.Types.IO
         (Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(C(C(S(SL)))))),1*C1(C1(C1(C1(C1(U(U,A))))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRectDoubleResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CDouble
                  -> GHC.Ptr.Ptr Foreign.C.Types.CDouble
                  -> GHC.Ptr.Ptr Foreign.C.Types.CDouble
                  -> GHC.Ptr.Ptr Foreign.C.Types.CDouble
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double>_R)) -}
dbc893cd2294aae7a6b72fe5f0c48f22
  withRectDoubleResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(C(C(S(SL)))))),1*C1(C1(C1(C1(C1(U(U,A))))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CDouble
                         -> GHC.Ptr.Ptr Foreign.C.Types.CDouble
                         -> GHC.Ptr.Ptr Foreign.C.Types.CDouble
                         -> GHC.Ptr.Ptr Foreign.C.Types.CDouble
                         -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (Foreign.Marshal.Alloc.allocaBytesAligned
                    @ Foreign.C.Types.CDouble
                    @ (Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double)
                    Foreign.Storable.$fStorableDouble5
                    Foreign.Storable.$fStorableDouble5
                    (\ (cx :: GHC.Ptr.Ptr Foreign.C.Types.CDouble)[OneShot]
                       (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     (Foreign.Marshal.Alloc.allocaBytesAligned
                        @ Foreign.C.Types.CDouble
                        @ (Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double)
                        Foreign.Storable.$fStorableDouble5
                        Foreign.Storable.$fStorableDouble5
                        (\ (cy :: GHC.Ptr.Ptr Foreign.C.Types.CDouble)[OneShot]
                           (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         (Foreign.Marshal.Alloc.allocaBytesAligned
                            @ Foreign.C.Types.CDouble
                            @ (Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double)
                            Foreign.Storable.$fStorableDouble5
                            Foreign.Storable.$fStorableDouble5
                            (\ (cw :: GHC.Ptr.Ptr Foreign.C.Types.CDouble)[OneShot]
                               (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             (Foreign.Marshal.Alloc.allocaBytesAligned
                                @ Foreign.C.Types.CDouble
                                @ (Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double)
                                Foreign.Storable.$fStorableDouble5
                                Foreign.Storable.$fStorableDouble5
                                (\ (ch :: GHC.Ptr.Ptr Foreign.C.Types.CDouble)[OneShot]
                                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case (f cx cy cw ch) `cast` (GHC.Types.N:IO[0] <()>_R)
                                        s of ds1 { (#,#) ipv ipv1 ->
                                 case cx
                                        `cast`
                                      (Nth:2
                                           (Trans
                                                ((GHC.Ptr.Ptr
                                                    <Foreign.C.Types.CDouble, GHC.Types.Double>)_R
                                                 ->_R (GHC.Types.IO
                                                         (Foreign.C.Types.N:CDouble[0]))_R)
                                                (<GHC.Ptr.Ptr GHC.Types.Double>_R
                                                 ->_R GHC.Types.N:IO[0]
                                                          <GHC.Types.Double>_R))) of wild { GHC.Ptr.Ptr a ->
                                 case GHC.Prim.readDoubleOffAddr#
                                        @ GHC.Prim.RealWorld
                                        a
                                        0#
                                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                                 case cy
                                        `cast`
                                      (Nth:2
                                           (Trans
                                                ((GHC.Ptr.Ptr
                                                    <Foreign.C.Types.CDouble, GHC.Types.Double>)_R
                                                 ->_R (GHC.Types.IO
                                                         (Foreign.C.Types.N:CDouble[0]))_R)
                                                (<GHC.Ptr.Ptr GHC.Types.Double>_R
                                                 ->_R GHC.Types.N:IO[0]
                                                          <GHC.Types.Double>_R))) of wild1 { GHC.Ptr.Ptr a1 ->
                                 case GHC.Prim.readDoubleOffAddr#
                                        @ GHC.Prim.RealWorld
                                        a1
                                        0#
                                        ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                                 case cw
                                        `cast`
                                      (Nth:2
                                           (Trans
                                                ((GHC.Ptr.Ptr
                                                    <Foreign.C.Types.CDouble, GHC.Types.Double>)_R
                                                 ->_R (GHC.Types.IO
                                                         (Foreign.C.Types.N:CDouble[0]))_R)
                                                (<GHC.Ptr.Ptr GHC.Types.Double>_R
                                                 ->_R GHC.Types.N:IO[0]
                                                          <GHC.Types.Double>_R))) of wild2 { GHC.Ptr.Ptr a2 ->
                                 case GHC.Prim.readDoubleOffAddr#
                                        @ GHC.Prim.RealWorld
                                        a2
                                        0#
                                        ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                                 case ch
                                        `cast`
                                      (Nth:2
                                           (Trans
                                                ((GHC.Ptr.Ptr
                                                    <Foreign.C.Types.CDouble, GHC.Types.Double>)_R
                                                 ->_R (GHC.Types.IO
                                                         (Foreign.C.Types.N:CDouble[0]))_R)
                                                (<GHC.Ptr.Ptr GHC.Types.Double>_R
                                                 ->_R GHC.Types.N:IO[0]
                                                          <GHC.Types.Double>_R))) of wild3 { GHC.Ptr.Ptr a3 ->
                                 case GHC.Prim.readDoubleOffAddr#
                                        @ GHC.Prim.RealWorld
                                        a3
                                        0#
                                        ipv6 of ds6 { (#,#) ipv8 ipv9 ->
                                 (# ipv8,
                                    Graphics.UI.WXCore.WxcTypes.Rect
                                      @ GHC.Types.Double
                                      (GHC.Types.D# ipv3)
                                      (GHC.Types.D# ipv5)
                                      (GHC.Types.D# ipv7)
                                      (GHC.Types.D# ipv9) #) } } } } } } } } })
                                  `cast`
                                (<GHC.Ptr.Ptr Foreign.C.Types.CDouble>_R
                                 ->_R Sym (GHC.Types.N:IO[0]
                                               <Graphics.UI.WXCore.WxcTypes.Rect2D
                                                  GHC.Types.Double>_R)))
                               `cast`
                             (GHC.Types.N:IO[0]
                                  <Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double>_R)
                               eta3)
                              `cast`
                            (<GHC.Ptr.Ptr Foreign.C.Types.CDouble>_R
                             ->_R Sym (GHC.Types.N:IO[0]
                                           <Graphics.UI.WXCore.WxcTypes.Rect2D
                                              GHC.Types.Double>_R)))
                           `cast`
                         (GHC.Types.N:IO[0]
                              <Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double>_R)
                           eta2)
                          `cast`
                        (<GHC.Ptr.Ptr Foreign.C.Types.CDouble>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double>_R)))
                       `cast`
                     (GHC.Types.N:IO[0]
                          <Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double>_R)
                       eta1)
                      `cast`
                    (<GHC.Ptr.Ptr Foreign.C.Types.CDouble>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double>_R)))
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Graphics.UI.WXCore.WxcTypes.Rect2D GHC.Types.Double>_R)
                   eta) -}
6000f02641f31d887cfbc5c5910153b2
  withRectResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Types.IO ())
    -> GHC.Types.IO Graphics.UI.WXCore.WxcTypes.Rect
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(C(C(S(SL)))))),1*C1(C1(C1(C1(C1(U(U,A))))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRectResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CInt
                  -> GHC.Ptr.Ptr Foreign.C.Types.CInt
                  -> GHC.Ptr.Ptr Foreign.C.Types.CInt
                  -> GHC.Ptr.Ptr Foreign.C.Types.CInt
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Rect>_R)) -}
e35782eea13f0fa029daef86fd805208
  withRectResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Rect #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(C(C(S(SL)))))),1*C1(C1(C1(C1(C1(U(U,A))))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CInt
                         -> GHC.Ptr.Ptr Foreign.C.Types.CInt
                         -> GHC.Ptr.Ptr Foreign.C.Types.CInt
                         -> GHC.Ptr.Ptr Foreign.C.Types.CInt
                         -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (Foreign.Marshal.Alloc.allocaBytesAligned
                    @ Foreign.C.Types.CInt
                    @ Graphics.UI.WXCore.WxcTypes.Rect
                    Foreign.Storable.$fStorableBool7
                    Foreign.Storable.$fStorableBool7
                    (\ (cx :: GHC.Ptr.Ptr Foreign.C.Types.CInt)[OneShot]
                       (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     (Foreign.Marshal.Alloc.allocaBytesAligned
                        @ Foreign.C.Types.CInt
                        @ Graphics.UI.WXCore.WxcTypes.Rect
                        Foreign.Storable.$fStorableBool7
                        Foreign.Storable.$fStorableBool7
                        (\ (cy :: GHC.Ptr.Ptr Foreign.C.Types.CInt)[OneShot]
                           (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         (Foreign.Marshal.Alloc.allocaBytesAligned
                            @ Foreign.C.Types.CInt
                            @ Graphics.UI.WXCore.WxcTypes.Rect
                            Foreign.Storable.$fStorableBool7
                            Foreign.Storable.$fStorableBool7
                            (\ (cw :: GHC.Ptr.Ptr Foreign.C.Types.CInt)[OneShot]
                               (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             (Foreign.Marshal.Alloc.allocaBytesAligned
                                @ Foreign.C.Types.CInt
                                @ Graphics.UI.WXCore.WxcTypes.Rect
                                Foreign.Storable.$fStorableBool7
                                Foreign.Storable.$fStorableBool7
                                (\ (ch :: GHC.Ptr.Ptr Foreign.C.Types.CInt)[OneShot]
                                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case (f cx cy cw ch) `cast` (GHC.Types.N:IO[0] <()>_R)
                                        s of ds1 { (#,#) ipv ipv1 ->
                                 case cx
                                        `cast`
                                      (Nth:2
                                           (Trans
                                                ((GHC.Ptr.Ptr
                                                    <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                                 ->_R (GHC.Types.IO (Foreign.C.Types.N:CInt[0]))_R)
                                                (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                                 ->_R GHC.Types.N:IO[0]
                                                          <GHC.Int.Int32>_R))) of wild { GHC.Ptr.Ptr a ->
                                 case GHC.Prim.readInt32OffAddr#
                                        @ GHC.Prim.RealWorld
                                        a
                                        0#
                                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                                 case cy
                                        `cast`
                                      (Nth:2
                                           (Trans
                                                ((GHC.Ptr.Ptr
                                                    <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                                 ->_R (GHC.Types.IO (Foreign.C.Types.N:CInt[0]))_R)
                                                (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                                 ->_R GHC.Types.N:IO[0]
                                                          <GHC.Int.Int32>_R))) of wild1 { GHC.Ptr.Ptr a1 ->
                                 case GHC.Prim.readInt32OffAddr#
                                        @ GHC.Prim.RealWorld
                                        a1
                                        0#
                                        ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                                 case cw
                                        `cast`
                                      (Nth:2
                                           (Trans
                                                ((GHC.Ptr.Ptr
                                                    <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                                 ->_R (GHC.Types.IO (Foreign.C.Types.N:CInt[0]))_R)
                                                (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                                 ->_R GHC.Types.N:IO[0]
                                                          <GHC.Int.Int32>_R))) of wild2 { GHC.Ptr.Ptr a2 ->
                                 case GHC.Prim.readInt32OffAddr#
                                        @ GHC.Prim.RealWorld
                                        a2
                                        0#
                                        ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                                 case ch
                                        `cast`
                                      (Nth:2
                                           (Trans
                                                ((GHC.Ptr.Ptr
                                                    <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                                 ->_R (GHC.Types.IO (Foreign.C.Types.N:CInt[0]))_R)
                                                (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                                 ->_R GHC.Types.N:IO[0]
                                                          <GHC.Int.Int32>_R))) of wild3 { GHC.Ptr.Ptr a3 ->
                                 case GHC.Prim.readInt32OffAddr#
                                        @ GHC.Prim.RealWorld
                                        a3
                                        0#
                                        ipv6 of ds6 { (#,#) ipv8 ipv9 ->
                                 (# ipv8,
                                    Graphics.UI.WXCore.WxcTypes.Rect
                                      @ GHC.Types.Int
                                      (GHC.Types.I# ipv3)
                                      (GHC.Types.I# ipv5)
                                      (GHC.Types.I# ipv7)
                                      (GHC.Types.I# ipv9) #) } } } } } } } } })
                                  `cast`
                                (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                                 ->_R Sym (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Rect>_R)))
                               `cast`
                             (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Rect>_R)
                               eta3)
                              `cast`
                            (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                             ->_R Sym (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Rect>_R)))
                           `cast`
                         (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Rect>_R)
                           eta2)
                          `cast`
                        (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Rect>_R)))
                       `cast`
                     (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Rect>_R)
                       eta1)
                      `cast`
                    (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                     ->_R Sym (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Rect>_R)))
                   `cast`
                 (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Rect>_R)
                   eta) -}
963a5f3df2b67efe790f96760a628ada
  withRefBitmap ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBitmap a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Bitmap a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefBitmap1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBitmap a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Bitmap a>_R)) -}
908613578e9e00c69fd9f72f0724a8a6
  withRefBitmap1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBitmap a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Bitmap a #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBitmap a)
                         -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        eta of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TBitmap a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds1
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 case ds4 of wild2 {
                   DEFAULT
                   -> (# ds3,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TBitmap a)
                           ds1 #)
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds1
                             ds3 of wild3 { (#,#) ds5 ds6 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TBitmap a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TBitmap a))
                           ds6)
                        ds5 } } } } }) -}
3b9088c2cdecc51d5333f9c1613f4004
  withRefBrush ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBrush a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Brush a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefBrush1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBrush a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Brush a>_R)) -}
f540ab3fc89681389aef04187feb5095
  withRefBrush1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBrush a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Brush a #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TBrush a)
                         -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        eta of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TBrush a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds1
                        GHC.Prim.realWorld# of wild1 { (#,#) ds3 ds4 ->
                 case ds4 of wild2 {
                   DEFAULT
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TBrush a)
                           ds1 #)
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds1
                             ipv of wild3 { (#,#) ds5 ds6 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TBrush a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TBrush a))
                           ds6)
                        ds5 } } } } }) -}
4bf5137fd582d56fade60bb9962cf4b7
  withRefColour ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO Graphics.UI.WXCore.WxcTypes.Color
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefColour1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Color>_R)) -}
b413c0ab554acd3fd2e02659fe0bcd79
  withRefColour1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Color #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
                         -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Graphics.UI.WXCore.WxcTypes.withManagedColourResult1
                   @ a
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                                -> (# GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld,
                                                                                      GHC.Prim.Addr# #)}
                           s of wild { (#,#) ds ds1 ->
                    let {
                      ipv1 :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)
                      = GHC.Ptr.Ptr @ (Graphics.UI.WXCore.WxcClassTypes.TColour a) ds1
                    } in
                    case (f ipv1) `cast` (GHC.Types.N:IO[0] <()>_R)
                           ds of ds2 { (#,#) ipv ipv2 ->
                    (# ipv, ipv1 #) } })
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TColour a)>_R))
                   eta) -}
f462f8f4a802ec45705e90f19e42b1a7
  withRefCursor ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TCursor a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Cursor a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefCursor1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TCursor a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Cursor a>_R)) -}
19825fd25aef1e9826701a386578d24a
  withRefCursor1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TCursor a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Cursor a #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TCursor a)
                         -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Int#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        1#
                        eta of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TCursor a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds1
                        GHC.Prim.realWorld# of wild1 { (#,#) ds3 ds4 ->
                 case ds4 of wild2 {
                   DEFAULT
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TCursor a)
                           ds1 #)
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds1
                             ipv of wild3 { (#,#) ds5 ds6 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TCursor a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TCursor a))
                           ds6)
                        ds5 } } } } }) -}
41a018deef21e1df5def6afbbcd64c83
  withRefDateTime ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TDateTime a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.DateTime a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefDateTime1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TDateTime a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.DateTime a>_R)) -}
30af66d9caaad335bde5ffeba38d87e9
  withRefDateTime1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TDateTime a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.DateTime a #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TDateTime a)
                         -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        eta of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TDateTime a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqAddr# ds1 __NULL) of wild1 {
                   GHC.Types.False
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds1
                             ipv of wild2 { (#,#) ds3 ds4 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TDateTime a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TDateTime a))
                           ds4)
                        ds3 }
                   GHC.Types.True
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TDateTime a)
                           ds1 #) } } }) -}
7edb08e8ff7f774710f07e0b5b6037aa
  withRefFont ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFont a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Font a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefFont1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFont a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Font a>_R)) -}
507067ddab323840120126d85ef045cd
  withRefFont1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFont a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Font a #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFont a)
                         -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        eta of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TFont a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds1
                        GHC.Prim.realWorld# of wild1 { (#,#) ds3 ds4 ->
                 case ds4 of wild2 {
                   DEFAULT
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TFont a)
                           ds1 #)
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds1
                             ipv of wild3 { (#,#) ds5 ds6 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TFont a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TFont a))
                           ds6)
                        ds5 } } } } }) -}
4384f575cc511949e038c314086d712e
  withRefFontData ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFontData a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.FontData a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefFontData1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFontData a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.WxObject
                                  (Graphics.UI.WXCore.WxcClassTypes.CFontData a)>_R)) -}
7b75887817d8c465cb5c508dbcd10285
  withRefFontData1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFontData a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.WxObject
            (Graphics.UI.WXCore.WxcClassTypes.CFontData a) #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TFontData a)
                         -> GHC.Types.IO ())
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        s of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TFontData a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ds1
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                   @ (Graphics.UI.WXCore.WxcClassTypes.TWxObject
                        (Graphics.UI.WXCore.WxcClassTypes.CFontData a))
                   (GHC.Ptr.Ptr
                      @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                           (Graphics.UI.WXCore.WxcClassTypes.TWxObject
                              (Graphics.UI.WXCore.WxcClassTypes.CFontData a)))
                      ds4)
                   ds3 } } }) -}
3400209871b5b2b055348db229ad1e83
  withRefGridCellCoordsArray ::
    (GHC.Ptr.Ptr
       (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO
         (Graphics.UI.WXCore.WxcClassTypes.GridCellCoordsArray a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefGridCellCoordsArray1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr
                    (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.GridCellCoordsArray a>_R)) -}
6560fcb8eaf4d78ad7c2cf2b572f28de
  withRefGridCellCoordsArray1 ::
    (GHC.Ptr.Ptr
       (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.GridCellCoordsArray a #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr
                           (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a)
                         -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        eta of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqAddr# ds1 __NULL) of wild1 {
                   GHC.Types.False
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds1
                             ipv of wild2 { (#,#) ds3 ds4 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a))
                           ds4)
                        ds3 }
                   GHC.Types.True
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TGridCellCoordsArray a)
                           ds1 #) } } }) -}
620c0f6d3daa379cb3a1a6a9f246f7b6
  withRefIcon ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TIcon a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Icon a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefIcon1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TIcon a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Icon a>_R)) -}
fe3b371234808982173262a31e760e27
  withRefIcon1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TIcon a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Icon a #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TIcon a)
                         -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        eta of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TIcon a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds1
                        GHC.Prim.realWorld# of wild1 { (#,#) ds3 ds4 ->
                 case ds4 of wild2 {
                   DEFAULT
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TIcon a)
                           ds1 #)
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds1
                             ipv of wild3 { (#,#) ds5 ds6 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TIcon a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TIcon a))
                           ds6)
                        ds5 } } } } }) -}
890f364ca1d9fdfa68ec4cb8f0a98148
  withRefImage ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TImage a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Image a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefImage1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TImage a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.WxObject
                                  (Graphics.UI.WXCore.WxcClassTypes.CImage a)>_R)) -}
ae9e7d7b9c6824705f4167da18950701
  withRefImage1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TImage a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.WxObject
            (Graphics.UI.WXCore.WxcClassTypes.CImage a) #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TImage a)
                         -> GHC.Types.IO ())
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        s of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TImage a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ds1
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                   @ (Graphics.UI.WXCore.WxcClassTypes.TWxObject
                        (Graphics.UI.WXCore.WxcClassTypes.CImage a))
                   (GHC.Ptr.Ptr
                      @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                           (Graphics.UI.WXCore.WxcClassTypes.TWxObject
                              (Graphics.UI.WXCore.WxcClassTypes.CImage a)))
                      ds4)
                   ds3 } } }) -}
87a0a287710530929625f432f70d0964
  withRefListItem ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TListItem a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.ListItem a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefListItem1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TListItem a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.WxObject
                                  (Graphics.UI.WXCore.WxcClassTypes.CListItem a)>_R)) -}
8ae6735541e93f515cae2236893efa67
  withRefListItem1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TListItem a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.WxObject
            (Graphics.UI.WXCore.WxcClassTypes.CListItem a) #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TListItem a)
                         -> GHC.Types.IO ())
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        s of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TListItem a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ds1
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                   @ (Graphics.UI.WXCore.WxcClassTypes.TWxObject
                        (Graphics.UI.WXCore.WxcClassTypes.CListItem a))
                   (GHC.Ptr.Ptr
                      @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                           (Graphics.UI.WXCore.WxcClassTypes.TWxObject
                              (Graphics.UI.WXCore.WxcClassTypes.CListItem a)))
                      ds4)
                   ds3 } } }) -}
e42d1c02536988af6b3531cd3f2cf1fc
  withRefPageSetupDialogData ::
    (GHC.Ptr.Ptr
       (Graphics.UI.WXCore.WxcClassTypes.TPageSetupDialogData a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO
         (Graphics.UI.WXCore.WxcClassTypes.PageSetupDialogData a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefPageSetupDialogData1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr
                    (Graphics.UI.WXCore.WxcClassTypes.TPageSetupDialogData a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.WxObject
                                  (Graphics.UI.WXCore.WxcClassTypes.CPageSetupDialogData a)>_R)) -}
805da1dbc08697e8caf48ede4c914bd2
  withRefPageSetupDialogData1 ::
    (GHC.Ptr.Ptr
       (Graphics.UI.WXCore.WxcClassTypes.TPageSetupDialogData a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.WxObject
            (Graphics.UI.WXCore.WxcClassTypes.CPageSetupDialogData a) #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr
                           (Graphics.UI.WXCore.WxcClassTypes.TPageSetupDialogData a)
                         -> GHC.Types.IO ())
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        s of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TPageSetupDialogData a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ds1
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                   @ (Graphics.UI.WXCore.WxcClassTypes.TWxObject
                        (Graphics.UI.WXCore.WxcClassTypes.CPageSetupDialogData a))
                   (GHC.Ptr.Ptr
                      @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                           (Graphics.UI.WXCore.WxcClassTypes.TWxObject
                              (Graphics.UI.WXCore.WxcClassTypes.CPageSetupDialogData a)))
                      ds4)
                   ds3 } } }) -}
06ba0db7589bf552c39acced3c6bc0df
  withRefPen ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPen a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.Pen a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefPen1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPen a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.Pen a>_R)) -}
c2572157877bebcc0dbc354ca0d635da
  withRefPen1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPen a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.Pen a #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPen a)
                         -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        eta of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TPen a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds1
                        GHC.Prim.realWorld# of wild1 { (#,#) ds3 ds4 ->
                 case ds4 of wild2 {
                   DEFAULT
                   -> (# ipv,
                         Graphics.UI.WXCore.WxcObject.Object
                           @ (Graphics.UI.WXCore.WxcClassTypes.TPen a)
                           ds1 #)
                   0#
                   -> case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Addr# #)}
                             ds1
                             ipv of wild3 { (#,#) ds5 ds6 ->
                      Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                        @ (Graphics.UI.WXCore.WxcClassTypes.TPen a)
                        (GHC.Ptr.Ptr
                           @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                                (Graphics.UI.WXCore.WxcClassTypes.TPen a))
                           ds6)
                        ds5 } } } } }) -}
dbab914c1ccb76932596c4189148c276
  withRefPrintData ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPrintData a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcClassTypes.PrintData a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefPrintData1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPrintData a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.WxObject
                                  (Graphics.UI.WXCore.WxcClassTypes.CPrintData a)>_R)) -}
d005dcde9def4da0010abafbfe398fa1
  withRefPrintData1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPrintData a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.WxObject
            (Graphics.UI.WXCore.WxcClassTypes.CPrintData a) #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPrintData a)
                         -> GHC.Types.IO ())
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        s of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TPrintData a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ds1
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                   @ (Graphics.UI.WXCore.WxcClassTypes.TWxObject
                        (Graphics.UI.WXCore.WxcClassTypes.CPrintData a))
                   (GHC.Ptr.Ptr
                      @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                           (Graphics.UI.WXCore.WxcClassTypes.TWxObject
                              (Graphics.UI.WXCore.WxcClassTypes.CPrintData a)))
                      ds4)
                   ds3 } } }) -}
d60a4a5e0545cc5dd51f681c3249116b
  withRefPrintDialogData ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPrintDialogData a)
     -> GHC.Types.IO ())
    -> GHC.Types.IO
         (Graphics.UI.WXCore.WxcClassTypes.PrintDialogData a)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefPrintDialogData1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPrintDialogData a)
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcClassTypes.WxObject
                                  (Graphics.UI.WXCore.WxcClassTypes.CPrintDialogData a)>_R)) -}
5f6dda6b5713bb7a88799afa39398691
  withRefPrintDialogData1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TPrintDialogData a)
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcClassTypes.WxObject
            (Graphics.UI.WXCore.WxcClassTypes.CPrintDialogData a) #)
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ @ a
                   (f :: GHC.Ptr.Ptr
                           (Graphics.UI.WXCore.WxcClassTypes.TPrintDialogData a)
                         -> GHC.Types.IO ())
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        s of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TPrintDialogData a)
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        ds1
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 Graphics.UI.WXCore.WxcObject.objectFromManagedPtr1
                   @ (Graphics.UI.WXCore.WxcClassTypes.TWxObject
                        (Graphics.UI.WXCore.WxcClassTypes.CPrintDialogData a))
                   (GHC.Ptr.Ptr
                      @ (Graphics.UI.WXCore.WxcObject.CManagedPtr
                           (Graphics.UI.WXCore.WxcClassTypes.TWxObject
                              (Graphics.UI.WXCore.WxcClassTypes.CPrintDialogData a)))
                      ds4)
                   ds3 } } }) -}
a1ec32eef6b358a528c5b16eb0ce2b31
  withRefTreeItemId ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId ())
     -> GHC.Types.IO ())
    -> GHC.Types.IO Graphics.UI.WXCore.WxcTypes.TreeItem
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withRefTreeItemId1
                  `cast`
                (<GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId ())
                  -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.TreeItem>_R)) -}
920849f21fb0d2c9c60dc07b8a366940
  withRefTreeItemId1 ::
    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId ())
     -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.TreeItem #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,A)))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr
                           (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId ())
                         -> GHC.Types.IO ())
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Addr# #)}
                        s of wild { (#,#) ds ds1 ->
                 case (f (GHC.Ptr.Ptr
                            @ (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId ())
                            ds1))
                        `cast`
                      (GHC.Types.N:IO[0] <()>_R)
                        ds of ds2 { (#,#) ipv ipv1 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds1
                        ipv of wild1 { (#,#) ds3 ds4 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld #)}
                        ds1
                        ds3 of wild2 { Unit# ds5 ->
                 (# ds5,
                    (GHC.Types.I# ds4)
                      `cast`
                    (Trans
                         (Sym (Foreign.Ptr.N:IntPtr[0]))
                         (Sym (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0]))) #) } } } }) -}
50cf96e343042602a93068dbcfad7045
  withSizeDoubleResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Ptr.Ptr Foreign.C.Types.CDouble -> GHC.Types.IO ())
    -> GHC.Types.IO
         (Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(S(SL)))),1*C1(C1(C1(U(U,A))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withSizeDoubleResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CDouble
                  -> GHC.Ptr.Ptr Foreign.C.Types.CDouble -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double>_R)) -}
ab3275f5d4e8263e1048a525b87abf57
  withSizeDoubleResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Ptr.Ptr Foreign.C.Types.CDouble -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(S(SL)))),1*C1(C1(C1(U(U,A))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CDouble
                         -> GHC.Ptr.Ptr Foreign.C.Types.CDouble -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (Foreign.Marshal.Alloc.allocaBytesAligned
                    @ Foreign.C.Types.CDouble
                    @ (Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double)
                    Foreign.Storable.$fStorableDouble5
                    Foreign.Storable.$fStorableDouble5
                    (\ (cw :: GHC.Ptr.Ptr Foreign.C.Types.CDouble)[OneShot]
                       (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     (Foreign.Marshal.Alloc.allocaBytesAligned
                        @ Foreign.C.Types.CDouble
                        @ (Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double)
                        Foreign.Storable.$fStorableDouble5
                        Foreign.Storable.$fStorableDouble5
                        (\ (ch :: GHC.Ptr.Ptr Foreign.C.Types.CDouble)[OneShot]
                           (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case (f cw ch) `cast` (GHC.Types.N:IO[0] <()>_R)
                                s of ds1 { (#,#) ipv ipv1 ->
                         case cw
                                `cast`
                              (Nth:2
                                   (Trans
                                        ((GHC.Ptr.Ptr <Foreign.C.Types.CDouble, GHC.Types.Double>)_R
                                         ->_R (GHC.Types.IO (Foreign.C.Types.N:CDouble[0]))_R)
                                        (<GHC.Ptr.Ptr GHC.Types.Double>_R
                                         ->_R GHC.Types.N:IO[0]
                                                  <GHC.Types.Double>_R))) of wild { GHC.Ptr.Ptr a ->
                         case GHC.Prim.readDoubleOffAddr#
                                @ GHC.Prim.RealWorld
                                a
                                0#
                                ipv of ds2 { (#,#) ipv2 ipv3 ->
                         case ch
                                `cast`
                              (Nth:2
                                   (Trans
                                        ((GHC.Ptr.Ptr <Foreign.C.Types.CDouble, GHC.Types.Double>)_R
                                         ->_R (GHC.Types.IO (Foreign.C.Types.N:CDouble[0]))_R)
                                        (<GHC.Ptr.Ptr GHC.Types.Double>_R
                                         ->_R GHC.Types.N:IO[0]
                                                  <GHC.Types.Double>_R))) of wild1 { GHC.Ptr.Ptr a1 ->
                         case GHC.Prim.readDoubleOffAddr#
                                @ GHC.Prim.RealWorld
                                a1
                                0#
                                ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                         (# ipv4,
                            Graphics.UI.WXCore.WxcTypes.Size
                              @ GHC.Types.Double
                              (GHC.Types.D# ipv3)
                              (GHC.Types.D# ipv5) #) } } } } })
                          `cast`
                        (<GHC.Ptr.Ptr Foreign.C.Types.CDouble>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double>_R)))
                       `cast`
                     (GHC.Types.N:IO[0]
                          <Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double>_R)
                       eta1)
                      `cast`
                    (<GHC.Ptr.Ptr Foreign.C.Types.CDouble>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double>_R)))
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Graphics.UI.WXCore.WxcTypes.Size2D GHC.Types.Double>_R)
                   eta) -}
749edb0fccc35cf9ce4fa6464fa0f706
  withSizeResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO ())
    -> GHC.Types.IO Graphics.UI.WXCore.WxcTypes.Size
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(S(SL)))),1*C1(C1(C1(U(U,A))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withSizeResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CInt
                  -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Size>_R)) -}
dfdcd94e1df7c1ffe8a58e32481f14bf
  withSizeResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Size #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(S(SL)))),1*C1(C1(C1(U(U,A))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CInt
                         -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (Foreign.Marshal.Alloc.allocaBytesAligned
                    @ Foreign.C.Types.CInt
                    @ Graphics.UI.WXCore.WxcTypes.Size
                    Foreign.Storable.$fStorableBool7
                    Foreign.Storable.$fStorableBool7
                    (\ (cw :: GHC.Ptr.Ptr Foreign.C.Types.CInt)[OneShot]
                       (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     (Foreign.Marshal.Alloc.allocaBytesAligned
                        @ Foreign.C.Types.CInt
                        @ Graphics.UI.WXCore.WxcTypes.Size
                        Foreign.Storable.$fStorableBool7
                        Foreign.Storable.$fStorableBool7
                        (\ (ch :: GHC.Ptr.Ptr Foreign.C.Types.CInt)[OneShot]
                           (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case (f cw ch) `cast` (GHC.Types.N:IO[0] <()>_R)
                                s of ds1 { (#,#) ipv ipv1 ->
                         case cw
                                `cast`
                              (Nth:2
                                   (Trans
                                        ((GHC.Ptr.Ptr <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                         ->_R (GHC.Types.IO (Foreign.C.Types.N:CInt[0]))_R)
                                        (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                         ->_R GHC.Types.N:IO[0]
                                                  <GHC.Int.Int32>_R))) of wild { GHC.Ptr.Ptr a ->
                         case GHC.Prim.readInt32OffAddr#
                                @ GHC.Prim.RealWorld
                                a
                                0#
                                ipv of ds2 { (#,#) ipv2 ipv3 ->
                         case ch
                                `cast`
                              (Nth:2
                                   (Trans
                                        ((GHC.Ptr.Ptr <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                         ->_R (GHC.Types.IO (Foreign.C.Types.N:CInt[0]))_R)
                                        (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                         ->_R GHC.Types.N:IO[0]
                                                  <GHC.Int.Int32>_R))) of wild1 { GHC.Ptr.Ptr a1 ->
                         case GHC.Prim.readInt32OffAddr#
                                @ GHC.Prim.RealWorld
                                a1
                                0#
                                ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                         (# ipv4,
                            Graphics.UI.WXCore.WxcTypes.Size
                              @ GHC.Types.Int
                              (GHC.Types.I# ipv3)
                              (GHC.Types.I# ipv5) #) } } } } })
                          `cast`
                        (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Size>_R)))
                       `cast`
                     (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Size>_R)
                       eta1)
                      `cast`
                    (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                     ->_R Sym (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Size>_R)))
                   `cast`
                 (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Size>_R)
                   eta) -}
2c2fe52114b7f9761668a5eff430b6e3
  withStringPtr ::
    GHC.Base.String
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxString s)
        -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 2, Strictness: <L,1*U><L,C(C1(U))>,
     Unfolding: (\ @ s
                   @ a
                   (s1 :: GHC.Base.String)
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxString s)
                         -> GHC.Types.IO a) ->
                 Foreign.Marshal.Array.withArrayLen0
                   @ Foreign.C.Types.CWchar
                   @ a
                   Foreign.C.Types.$fStorableCWchar
                   Foreign.C.String.newCWString3
                     `cast`
                   (Sym (Foreign.C.Types.N:CWchar[0]))
                   (GHC.Base.map
                      @ GHC.Types.Char
                      @ Foreign.C.Types.CWchar
                      Foreign.C.String.newCWString2
                        `cast`
                      (<GHC.Types.Char>_R ->_R Sym (Foreign.C.Types.N:CWchar[0]))
                      s1)
                   (\ (ds :: GHC.Types.Int)
                      (eta :: Foreign.C.String.CWString)[OneShot]
                      (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case GHC.Prim.getMaskingState# eta1 of ds1 { (#,#) ipv ipv1 ->
                    case ipv1 of ds2 {
                      DEFAULT
                      -> case eta of ds3 { GHC.Ptr.Ptr ds4 ->
                         case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Prim.Addr# #)}
                                ds4
                                ipv of wild { (#,#) ds5 ds6 ->
                         case GHC.Prim.catch#
                                @ a
                                @ GHC.Exception.SomeException
                                (GHC.Prim.maskAsyncExceptions#
                                   @ a
                                   (f (GHC.Ptr.Ptr
                                         @ (Graphics.UI.WXCore.WxcClassTypes.TWxString s)
                                         ds6))
                                     `cast`
                                   (Nth:2
                                        (Trans
                                             (<GHC.Types.IO a>_R ->_R GHC.Types.N:IO[0] <a>_R)
                                             (GHC.Types.N:IO[0] <a>_R
                                              ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                                    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                          a #)>_R))))
                                (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                   (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                             -> GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld
                                                                                             -> (# GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld #)}
                                        ds6
                                        s2 of wild1 { Unit# ds7 ->
                                 GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ a e1 ds7 })
                                ds5 of ds7 { (#,#) ipv4 ipv5 ->
                         case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld #)}
                                ds6
                                ipv4 of wild1 { Unit# ds8 ->
                         (# ds8, ipv5 #) } } } }
                      0#
                      -> GHC.Prim.maskAsyncExceptions#
                           @ a
                           (\ (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case eta of ds3 { GHC.Ptr.Ptr ds4 ->
                            case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                        -> GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld
                                                                                        -> (# GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld,
                                                                                              GHC.Prim.Addr# #)}
                                   ds4
                                   s2 of wild { (#,#) ds5 ds6 ->
                            case GHC.Prim.catch#
                                   @ a
                                   @ GHC.Exception.SomeException
                                   (GHC.Prim.unmaskAsyncExceptions#
                                      @ a
                                      (f (GHC.Ptr.Ptr
                                            @ (Graphics.UI.WXCore.WxcClassTypes.TWxString s)
                                            ds6))
                                        `cast`
                                      (Nth:2
                                           (Trans
                                                (<GHC.Types.IO a>_R ->_R GHC.Types.N:IO[0] <a>_R)
                                                (GHC.Types.N:IO[0] <a>_R
                                                 ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             a #)>_R))))
                                   (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                      (s3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                                -> GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld
                                                                                                -> (# GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld #)}
                                           ds6
                                           s3 of wild1 { Unit# ds7 ->
                                    GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ a e1 ds7 })
                                   ds5 of ds7 { (#,#) ipv4 ipv5 ->
                            case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                        -> GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld
                                                                                        -> (# GHC.Prim.State#
                                                                                                GHC.Prim.RealWorld #)}
                                   ds6
                                   ipv4 of wild1 { Unit# ds8 ->
                            (# ds8, ipv5 #) } } } })
                           ipv
                      1#
                      -> case eta of ds3 { GHC.Ptr.Ptr ds4 ->
                         case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Prim.Addr# #)}
                                ds4
                                ipv of wild { (#,#) ds5 ds6 ->
                         case GHC.Prim.catch#
                                @ a
                                @ GHC.Exception.SomeException
                                (GHC.Prim.maskUninterruptible#
                                   @ a
                                   (f (GHC.Ptr.Ptr
                                         @ (Graphics.UI.WXCore.WxcClassTypes.TWxString s)
                                         ds6))
                                     `cast`
                                   (Nth:2
                                        (Trans
                                             (<GHC.Types.IO a>_R ->_R GHC.Types.N:IO[0] <a>_R)
                                             (GHC.Types.N:IO[0] <a>_R
                                              ->_R <GHC.Prim.State# GHC.Prim.RealWorld
                                                    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                          a #)>_R))))
                                (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                                   (s2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                             -> GHC.Prim.State#
                                                                                                  GHC.Prim.RealWorld
                                                                                             -> (# GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld #)}
                                        ds6
                                        s2 of wild1 { Unit# ds7 ->
                                 GHC.Prim.raiseIO# @ GHC.Exception.SomeException @ a e1 ds7 })
                                ds5 of ds7 { (#,#) ipv4 ipv5 ->
                         case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                                     -> GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld #)}
                                ds6
                                ipv4 of wild1 { Unit# ds8 ->
                         (# ds8, ipv5 #) } } } } } })
                     `cast`
                   (<GHC.Types.Int>_R
                    ->_R <Foreign.C.String.CWString>_R
                    ->_R Sym (GHC.Types.N:IO[0] <a>_R))) -}
e2e7b3706416824d1d1c0876c09b3a32
  withStringRef ::
    GHC.Base.String
    -> GHC.Base.String
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxString s)
        -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 3, Strictness: <L,U><L,1*U><L,C(C1(U))>,
     Unfolding: (\ @ s
                   @ a
                   (msg :: GHC.Base.String)
                   (s1 :: GHC.Base.String)
                   (f :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxString s)
                         -> GHC.Types.IO a) ->
                 let {
                   lvl35 :: GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1, Strictness: <B,U>x -}
                   = \ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     Graphics.UI.WXCore.WxcTypes.colorFromColour6 @ a msg eta
                 } in
                 Graphics.UI.WXCore.WxcTypes.withStringPtr
                   @ s
                   @ a
                   s1
                   (\ (p :: GHC.Ptr.Ptr
                              (Graphics.UI.WXCore.WxcClassTypes.TWxString s)) ->
                    case p of wild { GHC.Ptr.Ptr a1 ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.eqAddr# a1 __NULL) of wild1 {
                      GHC.Types.False -> f wild
                      GHC.Types.True
                      -> lvl35 `cast` (Sym (GHC.Types.N:IO[0] <a>_R)) } })) -}
3423b2f819fd8b956bcbacdae78b10b5
  withStringResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CChar
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withLazyByteStringResult2
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CChar
                  -> GHC.Types.IO Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
b33cac5969c07ae0c9b2efbbf82474b4
  withTreeItemIdPtr ::
    Graphics.UI.WXCore.WxcTypes.TreeItem
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
        -> GHC.Types.IO b)
    -> GHC.Types.IO b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><L,1*C1(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withTreeItemIdPtr1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Graphics.UI.WXCore.WxcTypes.TreeItem>_R
                 ->_R <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
                       -> GHC.Types.IO b>_R
                 ->_R Sym (GHC.Types.N:IO[0] <b>_R)) -}
41f978007e06165de1b0f57e7602a552
  withTreeItemIdPtr1 ::
    Graphics.UI.WXCore.WxcTypes.TreeItem
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
        -> GHC.Types.IO b)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S),1*U(U)><L,1*C1(C1(U(U,U)))><S,U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   @ b
                   (w :: Graphics.UI.WXCore.WxcTypes.TreeItem)
                   (w1 :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
                          -> GHC.Types.IO b)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w `cast`
                      (Trans
                           (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0])
                           (Foreign.Ptr.N:IntPtr[0])) of ww { GHC.Types.I# ww1 ->
                 Graphics.UI.WXCore.WxcTypes.$wwithTreeItemIdPtr
                   @ a
                   @ b
                   ww1
                   w1
                   w2 }) -}
a76a7f64dff59d3c63fcff472cec8871
  withTreeItemIdRef ::
    GHC.Base.String
    -> Graphics.UI.WXCore.WxcTypes.TreeItem
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
        -> GHC.Types.IO b)
    -> GHC.Types.IO b
  {- Arity: 4,
     Strictness: <L,1*U><S(S),1*U(U)><L,1*C1(C1(U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withTreeItemIdRef1
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <GHC.Base.String>_R
                 ->_R <Graphics.UI.WXCore.WxcTypes.TreeItem>_R
                 ->_R <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
                       -> GHC.Types.IO b>_R
                 ->_R Sym (GHC.Types.N:IO[0] <b>_R)) -}
84aee0baa8665307ee872f36ed87458e
  withTreeItemIdRef1 ::
    GHC.Base.String
    -> Graphics.UI.WXCore.WxcTypes.TreeItem
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
        -> GHC.Types.IO b)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 4,
     Strictness: <L,1*U><S(S),1*U(U)><L,1*C1(C1(U(U,U)))><S,U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ b
                   (w :: GHC.Base.String)
                   (w1 :: Graphics.UI.WXCore.WxcTypes.TreeItem)
                   (w2 :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TTreeItemId a)
                          -> GHC.Types.IO b)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1
                        `cast`
                      (Trans
                           (Graphics.UI.WXCore.WxcTypes.N:TreeItem[0])
                           (Foreign.Ptr.N:IntPtr[0])) of ww { GHC.Types.I# ww1 ->
                 Graphics.UI.WXCore.WxcTypes.$wwithTreeItemIdRef
                   @ a
                   @ b
                   w
                   ww1
                   w2
                   w3 }) -}
7ea5ead74fe347b39eb197fc4af9ce46
  withVectorDoubleResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Ptr.Ptr Foreign.C.Types.CDouble -> GHC.Types.IO ())
    -> GHC.Types.IO
         (Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(S(SL)))),1*C1(C1(C1(U(U,A))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withVectorDoubleResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CDouble
                  -> GHC.Ptr.Ptr Foreign.C.Types.CDouble -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double>_R)) -}
c64287ff1cdf3cef9ca822b38005f0fe
  withVectorDoubleResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CDouble
     -> GHC.Ptr.Ptr Foreign.C.Types.CDouble -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(S(SL)))),1*C1(C1(C1(U(U,A))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CDouble
                         -> GHC.Ptr.Ptr Foreign.C.Types.CDouble -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (Foreign.Marshal.Alloc.allocaBytesAligned
                    @ Foreign.C.Types.CDouble
                    @ (Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double)
                    Foreign.Storable.$fStorableDouble5
                    Foreign.Storable.$fStorableDouble5
                    (\ (px :: GHC.Ptr.Ptr Foreign.C.Types.CDouble)[OneShot]
                       (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     (Foreign.Marshal.Alloc.allocaBytesAligned
                        @ Foreign.C.Types.CDouble
                        @ (Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double)
                        Foreign.Storable.$fStorableDouble5
                        Foreign.Storable.$fStorableDouble5
                        (\ (py :: GHC.Ptr.Ptr Foreign.C.Types.CDouble)[OneShot]
                           (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case (f px py) `cast` (GHC.Types.N:IO[0] <()>_R)
                                s of ds1 { (#,#) ipv ipv1 ->
                         case px
                                `cast`
                              (Nth:2
                                   (Trans
                                        ((GHC.Ptr.Ptr <Foreign.C.Types.CDouble, GHC.Types.Double>)_R
                                         ->_R (GHC.Types.IO (Foreign.C.Types.N:CDouble[0]))_R)
                                        (<GHC.Ptr.Ptr GHC.Types.Double>_R
                                         ->_R GHC.Types.N:IO[0]
                                                  <GHC.Types.Double>_R))) of wild { GHC.Ptr.Ptr a ->
                         case GHC.Prim.readDoubleOffAddr#
                                @ GHC.Prim.RealWorld
                                a
                                0#
                                ipv of ds2 { (#,#) ipv2 ipv3 ->
                         case py
                                `cast`
                              (Nth:2
                                   (Trans
                                        ((GHC.Ptr.Ptr <Foreign.C.Types.CDouble, GHC.Types.Double>)_R
                                         ->_R (GHC.Types.IO (Foreign.C.Types.N:CDouble[0]))_R)
                                        (<GHC.Ptr.Ptr GHC.Types.Double>_R
                                         ->_R GHC.Types.N:IO[0]
                                                  <GHC.Types.Double>_R))) of wild1 { GHC.Ptr.Ptr a1 ->
                         case GHC.Prim.readDoubleOffAddr#
                                @ GHC.Prim.RealWorld
                                a1
                                0#
                                ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                         (# ipv4,
                            Graphics.UI.WXCore.WxcTypes.Vector
                              @ GHC.Types.Double
                              (GHC.Types.D# ipv3)
                              (GHC.Types.D# ipv5) #) } } } } })
                          `cast`
                        (<GHC.Ptr.Ptr Foreign.C.Types.CDouble>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double>_R)))
                       `cast`
                     (GHC.Types.N:IO[0]
                          <Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double>_R)
                       eta1)
                      `cast`
                    (<GHC.Ptr.Ptr Foreign.C.Types.CDouble>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double>_R)))
                   `cast`
                 (GHC.Types.N:IO[0]
                      <Graphics.UI.WXCore.WxcTypes.Vector2 GHC.Types.Double>_R)
                   eta) -}
0978b338bff05b740972c1226a356385
  withVectorResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO ())
    -> GHC.Types.IO Graphics.UI.WXCore.WxcTypes.Vector
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(S(SL)))),1*C1(C1(C1(U(U,A))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withVectorResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CInt
                  -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO ()>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Vector>_R)) -}
e3cb709bc03ec6f7d63e8804121bd819
  withVectorResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CInt
     -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO ())
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Vector #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(C(C(S(SL)))),1*C1(C1(C1(U(U,A))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CInt
                         -> GHC.Ptr.Ptr Foreign.C.Types.CInt -> GHC.Types.IO ())
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (Foreign.Marshal.Alloc.allocaBytesAligned
                    @ Foreign.C.Types.CInt
                    @ Graphics.UI.WXCore.WxcTypes.Vector
                    Foreign.Storable.$fStorableBool7
                    Foreign.Storable.$fStorableBool7
                    (\ (px :: GHC.Ptr.Ptr Foreign.C.Types.CInt)[OneShot]
                       (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                     (Foreign.Marshal.Alloc.allocaBytesAligned
                        @ Foreign.C.Types.CInt
                        @ Graphics.UI.WXCore.WxcTypes.Vector
                        Foreign.Storable.$fStorableBool7
                        Foreign.Storable.$fStorableBool7
                        (\ (py :: GHC.Ptr.Ptr Foreign.C.Types.CInt)[OneShot]
                           (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case (f px py) `cast` (GHC.Types.N:IO[0] <()>_R)
                                s of ds1 { (#,#) ipv ipv1 ->
                         case px
                                `cast`
                              (Nth:2
                                   (Trans
                                        ((GHC.Ptr.Ptr <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                         ->_R (GHC.Types.IO (Foreign.C.Types.N:CInt[0]))_R)
                                        (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                         ->_R GHC.Types.N:IO[0]
                                                  <GHC.Int.Int32>_R))) of wild { GHC.Ptr.Ptr a ->
                         case GHC.Prim.readInt32OffAddr#
                                @ GHC.Prim.RealWorld
                                a
                                0#
                                ipv of ds2 { (#,#) ipv2 ipv3 ->
                         case py
                                `cast`
                              (Nth:2
                                   (Trans
                                        ((GHC.Ptr.Ptr <Foreign.C.Types.CInt, GHC.Int.Int32>)_R
                                         ->_R (GHC.Types.IO (Foreign.C.Types.N:CInt[0]))_R)
                                        (<GHC.Ptr.Ptr GHC.Int.Int32>_R
                                         ->_R GHC.Types.N:IO[0]
                                                  <GHC.Int.Int32>_R))) of wild1 { GHC.Ptr.Ptr a1 ->
                         case GHC.Prim.readInt32OffAddr#
                                @ GHC.Prim.RealWorld
                                a1
                                0#
                                ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                         (# ipv4,
                            Graphics.UI.WXCore.WxcTypes.Vector
                              @ GHC.Types.Int
                              (GHC.Types.I# ipv3)
                              (GHC.Types.I# ipv5) #) } } } } })
                          `cast`
                        (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.UI.WXCore.WxcTypes.Vector>_R)))
                       `cast`
                     (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Vector>_R)
                       eta1)
                      `cast`
                    (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Graphics.UI.WXCore.WxcTypes.Vector>_R)))
                   `cast`
                 (GHC.Types.N:IO[0] <Graphics.UI.WXCore.WxcTypes.Vector>_R)
                   eta) -}
c7564a1af25655db6d48325bd30e87fd
  withWStringResult ::
    (GHC.Ptr.Ptr Foreign.C.Types.CWchar
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withWStringResult1
                  `cast`
                (<GHC.Ptr.Ptr Foreign.C.Types.CWchar
                  -> GHC.Types.IO Foreign.C.Types.CInt>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
a84d279c4dbd404585899e1aaf7178dd
  withWStringResult1 ::
    (GHC.Ptr.Ptr Foreign.C.Types.CWchar
     -> GHC.Types.IO Foreign.C.Types.CInt)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <C(C(S(SS(S)))),C(C1(U(U,1*U(U))))><S,U>,
     Unfolding: (\ (f :: GHC.Ptr.Ptr Foreign.C.Types.CWchar
                         -> GHC.Types.IO Foreign.C.Types.CInt)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (f (GHC.Ptr.nullPtr @ Foreign.C.Types.CWchar))
                        `cast`
                      (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1
                        `cast`
                      (Foreign.C.Types.N:CInt[0]) of wild { GHC.Int.I32# x ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# x 0#) of wild1 {
                   GHC.Types.False
                   -> (Foreign.Marshal.Array.withArrayLen0
                         @ Foreign.C.Types.CWchar
                         @ GHC.Base.String
                         Foreign.C.Types.$fStorableCWchar
                         Foreign.C.String.newCWString3
                           `cast`
                         (Sym (Foreign.C.Types.N:CWchar[0]))
                         (case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.<# 0# x) of wild2 {
                            GHC.Types.False -> GHC.Types.[] @ Foreign.C.Types.CWchar
                            GHC.Types.True -> Graphics.UI.WXCore.WxcTypes.$wxs3 x })
                         (\ (ds :: GHC.Types.Int)
                            (eta :: Foreign.C.String.CWString)[OneShot]
                            (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case (f eta) `cast` (GHC.Types.N:IO[0] <Foreign.C.Types.CInt>_R)
                                 eta1 of ds2 { (#,#) ipv2 ipv3 ->
                          Foreign.C.String.peekCWString1 eta ipv2 })
                           `cast`
                         (<GHC.Types.Int>_R
                          ->_R <Foreign.C.String.CWString>_R
                          ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                        ipv
                   GHC.Types.True
                   -> (# ipv, GHC.Types.[] @ GHC.Types.Char #) } } }) -}
e7d978ba5bbf22c5f3f5e8fc74779c77
  withWxPointResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxPoint a))
    -> GHC.Types.IO (Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withWxPointResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxPoint a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int>_R)) -}
1ad25eae0e20fbfc90e9b423bbb1769a
  withWxPointResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxPoint a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Point2 GHC.Types.Int #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxPoint a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxPoint a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ds3 of wild1 { (#,#) ds5 ds6 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld #)}
                        ds2
                        ds5 of wild2 { Unit# ds7 ->
                 (# ds7,
                    Graphics.UI.WXCore.WxcTypes.Point
                      @ GHC.Types.Int
                      (GHC.Types.I# (GHC.Prim.narrow32Int# ds4))
                      (GHC.Types.I# (GHC.Prim.narrow32Int# ds6)) #) } } } } }) -}
04e9f09e01828415c0650133f4e78327
  withWxRectPtr ::
    Graphics.UI.WXCore.WxcTypes.Rect
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxRect r)
        -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S(S)S(S)S(S)S(S)),1*U(U(U),U(U),U(U),U(U))><L,1*C1(C1(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withWxRectPtr1
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N).
                 <Graphics.UI.WXCore.WxcTypes.Rect>_R
                 ->_R <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxRect r)
                       -> GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
ebcde5693966831b4bdcf38899ae3efd
  withWxRectPtr1 ::
    Graphics.UI.WXCore.WxcTypes.Rect
    -> (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxRect r)
        -> GHC.Types.IO a)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S(S)S(S)S(S)S(S)),1*U(U(U),U(U),U(U),U(U))><L,1*C1(C1(U))><S,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ r
                   @ a
                   (w :: Graphics.UI.WXCore.WxcTypes.Rect)
                   (w1 :: GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxRect r)
                          -> GHC.Types.IO a)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { Graphics.UI.WXCore.WxcTypes.Rect ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.I# ww6 ->
                 case ww2 of ww7 { GHC.Types.I# ww8 ->
                 case ww3 of ww9 { GHC.Types.I# ww10 ->
                 case ww4 of ww11 { GHC.Types.I# ww12 ->
                 Graphics.UI.WXCore.WxcTypes.$wwithWxRectPtr
                   @ r
                   @ a
                   ww6
                   ww8
                   ww10
                   ww12
                   w1
                   w2 } } } } }) -}
15cc9c45ad7d54b257cd4d706c1f9db9
  withWxRectResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxRect a))
    -> GHC.Types.IO Graphics.UI.WXCore.WxcTypes.Rect
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withWxRectResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxRect a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Rect>_R)) -}
3d3c46be2747d8d7c44c67d0253dc4a7
  withWxRectResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxRect a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Rect #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxRect a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxRect a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ds3 of wild1 { (#,#) ds5 ds6 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ds5 of wild2 { (#,#) ds7 ds8 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ds7 of wild3 { (#,#) ds9 ds10 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld #)}
                        ds2
                        ds9 of wild4 { Unit# ds11 ->
                 (# ds11,
                    Graphics.UI.WXCore.WxcTypes.Rect
                      @ GHC.Types.Int
                      (GHC.Types.I# (GHC.Prim.narrow32Int# ds4))
                      (GHC.Types.I# (GHC.Prim.narrow32Int# ds6))
                      (GHC.Types.I# (GHC.Prim.narrow32Int# ds8))
                      (GHC.Types.I# (GHC.Prim.narrow32Int# ds10)) #) } } } } } } }) -}
f1c138e0aefdee47ddb9136407a7f028
  withWxSizeResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxSize a))
    -> GHC.Types.IO Graphics.UI.WXCore.WxcTypes.Size
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withWxSizeResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxSize a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Size>_R)) -}
3037c16bca6db3ea0460d3ea872c44dd
  withWxSizeResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxSize a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Size #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxSize a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxSize a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ds3 of wild1 { (#,#) ds5 ds6 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld #)}
                        ds2
                        ds5 of wild2 { Unit# ds7 ->
                 (# ds7,
                    Graphics.UI.WXCore.WxcTypes.Size
                      @ GHC.Types.Int
                      (GHC.Types.I# (GHC.Prim.narrow32Int# ds4))
                      (GHC.Types.I# (GHC.Prim.narrow32Int# ds6)) #) } } } } }) -}
12b2dd64e293bde591928be6fc14ff18
  withWxVectorResult ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxPoint a))
    -> GHC.Types.IO Graphics.UI.WXCore.WxcTypes.Vector
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Graphics.UI.WXCore.WxcTypes.withWxVectorResult1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO
                    (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxPoint a))>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Graphics.UI.WXCore.WxcTypes.Vector>_R)) -}
56cd6a30f41bbc2e47aa0bd371aa6b1f
  withWxVectorResult1 ::
    GHC.Types.IO
      (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxPoint a))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.UI.WXCore.WxcTypes.Vector #)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <C(S(SS(S))),1*C1(U(U,1*U(U)))><S,U>,
     Unfolding: (\ @ a
                   (io :: GHC.Types.IO
                            (GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxPoint a)))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case io
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Ptr.Ptr (Graphics.UI.WXCore.WxcClassTypes.TWxPoint a)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ds { GHC.Ptr.Ptr ds2 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ipv of wild { (#,#) ds3 ds4 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Prim.Int# #)}
                        ds2
                        ds3 of wild1 { (#,#) ds5 ds6 ->
                 case {__pkg_ccall_GC wxcore-0.93.0.0-FAccc2cIE8AJ8LFfTdnSLv GHC.Prim.Addr#
                                                                             -> GHC.Prim.State#
                                                                                  GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld #)}
                        ds2
                        ds5 of wild2 { Unit# ds7 ->
                 (# ds7,
                    Graphics.UI.WXCore.WxcTypes.Vector
                      @ GHC.Types.Int
                      (GHC.Types.I# (GHC.Prim.narrow32Int# ds4))
                      (GHC.Types.I# (GHC.Prim.narrow32Int# ds6)) #) } } } } }) -}
instance GHC.Classes.Eq [Graphics.UI.WXCore.WxcTypes.Color]
  = Graphics.UI.WXCore.WxcTypes.$fEqColor
instance GHC.Classes.Eq [Graphics.UI.WXCore.WxcTypes.Point2]
  = Graphics.UI.WXCore.WxcTypes.$fEqPoint2
instance GHC.Classes.Eq [Graphics.UI.WXCore.WxcTypes.Rect2D]
  = Graphics.UI.WXCore.WxcTypes.$fEqRect2D
instance GHC.Classes.Eq [Graphics.UI.WXCore.WxcTypes.Size2D]
  = Graphics.UI.WXCore.WxcTypes.$fEqSize2D
instance GHC.Classes.Eq [Graphics.UI.WXCore.WxcTypes.TreeItem]
  = Graphics.UI.WXCore.WxcTypes.$fEqTreeItem
instance GHC.Classes.Eq [Graphics.UI.WXCore.WxcTypes.Vector2]
  = Graphics.UI.WXCore.WxcTypes.$fEqVector2
instance GHC.Arr.Ix [Graphics.UI.WXCore.WxcTypes.Point2]
  = Graphics.UI.WXCore.WxcTypes.$fIxPoint2
instance GHC.Classes.Ord [Graphics.UI.WXCore.WxcTypes.Point2]
  = Graphics.UI.WXCore.WxcTypes.$fOrdPoint2
instance GHC.Read.Read [Graphics.UI.WXCore.WxcTypes.Point2]
  = Graphics.UI.WXCore.WxcTypes.$fReadPoint2
instance GHC.Read.Read [Graphics.UI.WXCore.WxcTypes.Rect2D]
  = Graphics.UI.WXCore.WxcTypes.$fReadRect2D
instance GHC.Read.Read [Graphics.UI.WXCore.WxcTypes.TreeItem]
  = Graphics.UI.WXCore.WxcTypes.$fReadTreeItem
instance GHC.Read.Read [Graphics.UI.WXCore.WxcTypes.Vector2]
  = Graphics.UI.WXCore.WxcTypes.$fReadVector2
instance GHC.Show.Show [Graphics.UI.WXCore.WxcTypes.Color]
  = Graphics.UI.WXCore.WxcTypes.$fShowColor
instance GHC.Show.Show [Graphics.UI.WXCore.WxcTypes.Point2]
  = Graphics.UI.WXCore.WxcTypes.$fShowPoint2
instance GHC.Show.Show [Graphics.UI.WXCore.WxcTypes.Rect2D]
  = Graphics.UI.WXCore.WxcTypes.$fShowRect2D
instance GHC.Show.Show [Graphics.UI.WXCore.WxcTypes.Size2D]
  = Graphics.UI.WXCore.WxcTypes.$fShowSize2D
instance GHC.Show.Show [Graphics.UI.WXCore.WxcTypes.TreeItem]
  = Graphics.UI.WXCore.WxcTypes.$fShowTreeItem
instance GHC.Show.Show [Graphics.UI.WXCore.WxcTypes.Vector2]
  = Graphics.UI.WXCore.WxcTypes.$fShowVector2
"SPEC $c== @ Int" forall ($dNum :: GHC.Num.Num GHC.Types.Int)
                         ($dEq :: GHC.Classes.Eq GHC.Types.Int)
  Graphics.UI.WXCore.WxcTypes.$fEqPoint2_$c== @ GHC.Types.Int
                                              $dEq
                                              $dNum
  = Graphics.UI.WXCore.WxcTypes.$fEqPoint2_$s$c==
"SPEC $cp1Ord @ Int" forall ($dOrd :: GHC.Classes.Ord
                                        GHC.Types.Int)
                            ($dNum :: GHC.Num.Num GHC.Types.Int)
  Graphics.UI.WXCore.WxcTypes.$fOrdPoint2_$cp1Ord @ GHC.Types.Int
                                                  $dNum
                                                  $dOrd
  = Graphics.UI.WXCore.WxcTypes.$fEqPoint2_$s$fEqPoint2
"SPEC $fEqPoint2 @ Int" forall ($dNum :: GHC.Num.Num GHC.Types.Int)
                               ($dEq :: GHC.Classes.Eq GHC.Types.Int)
  Graphics.UI.WXCore.WxcTypes.$fEqPoint2 @ GHC.Types.Int $dEq $dNum
  = Graphics.UI.WXCore.WxcTypes.$fEqPoint2_$s$fEqPoint2
"SPEC $fOrdPoint2 @ Int" forall ($dOrd :: GHC.Classes.Ord
                                            GHC.Types.Int)
                                ($dNum :: GHC.Num.Num GHC.Types.Int)
  Graphics.UI.WXCore.WxcTypes.$fOrdPoint2 @ GHC.Types.Int $dNum $dOrd
  = Graphics.UI.WXCore.WxcTypes.$fIxPoint2_$s$fOrdPoint2
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
Warnings colorOk "Use colorIsOk instead"
trusted: none
require own pkg trusted: False

