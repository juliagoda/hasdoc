
==================== FINAL INTERFACE ====================
2019-03-12 00:15:17.643230295 UTC

interface main:Types 8022
  interface hash: 0dc1366692a939d095b4a973a476d477
  ABI hash: d6dc9286e28636bbae650be1bd7de3cb
  export-list hash: ed53130f5c912c3a103d78fa401826c3
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 7b41f4c34acbabee58f1204dde4baf28
  sig of: Nothing
  used TH splices: False
  where
exports:
  Types.argName
  Types.errorMsg
  Types.errorMsgDecl
  Types.trace
  Types.traceError
  Types.traceIgnore
  Types.traceWarning
  Types.Arg{Types.Arg argNames argType}
  Types.CBaseType{Types.CChar Types.CDouble Types.CInt Types.CLong Types.CObject Types.CVoid Types.SizeT Types.TimeT}
  Types.Decl{Types.Decl declArgs declComment declName declRet}
  Types.Def{Types.Def defName defType defValue}
  Types.DefType{Types.DefInt Types.DefMask}
  Types.Strategy{Types.Lazy Types.Strict}
  Types.Type{Types.ArrayInt Types.ArrayIntOut Types.ArrayIntPtr Types.ArrayIntPtrOut Types.ArrayLen Types.ArrayObject Types.ArrayObjectOut Types.ArrayString Types.ArrayStringOut Types.Bool Types.ByteString Types.ByteStringLen Types.ByteStringOut Types.Char Types.ColorRGB Types.Double Types.EventId Types.Float Types.Fun Types.Id Types.Int Types.Int64 Types.IntPtr Types.Object Types.Point Types.PointOut Types.Ptr Types.Rect Types.RectOut Types.RefObject Types.Size Types.SizeOut Types.String Types.StringLen Types.StringOut Types.Vector Types.VectorOut Types.Void Types.Word Types.Word32 Types.Word64 Types.Word8}
module dependencies:
package dependencies: base-4.10.1.0 ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Err 514b3a24b22e9d7d731c2d0d02d10842
import  -/  base-4.10.1.0:GHC.IO.Unsafe 0aa7e5adc396c9f651baef415ce018da
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 6e5bb580370d8d71dc5888f723cea4b4
import  -/  base-4.10.1.0:System.IO.Unsafe 00b3b8853d06169d9bfd9af46118ba88
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
c5a4f6b9e5fc9306a020c50f914fe6d4
  $fEqCBaseType :: GHC.Classes.Eq Types.CBaseType
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.CBaseType
                  Types.$fEqCBaseType_$c==
                  Types.$fEqCBaseType_$c/= -}
c5a4f6b9e5fc9306a020c50f914fe6d4
  $fEqCBaseType_$c/= ::
    Types.CBaseType -> Types.CBaseType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Types.CBaseType) (b :: Types.CBaseType) ->
                 case a of wild {
                   Types.CVoid
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Types.CVoid -> GHC.Types.False }
                   Types.CInt
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Types.CInt -> GHC.Types.False }
                   Types.CLong
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Types.CLong -> GHC.Types.False }
                   Types.CDouble
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Types.CDouble -> GHC.Types.False }
                   Types.CChar
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Types.CChar -> GHC.Types.False }
                   Types.TimeT
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Types.TimeT -> GHC.Types.False }
                   Types.SizeT
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Types.SizeT -> GHC.Types.False }
                   Types.CObject
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True Types.CObject -> GHC.Types.False } }) -}
c5a4f6b9e5fc9306a020c50f914fe6d4
  $fEqCBaseType_$c== ::
    Types.CBaseType -> Types.CBaseType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Types.CBaseType) (ds1 :: Types.CBaseType) ->
                 case ds of wild {
                   Types.CVoid
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Types.CVoid -> GHC.Types.True }
                   Types.CInt
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Types.CInt -> GHC.Types.True }
                   Types.CLong
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Types.CLong -> GHC.Types.True }
                   Types.CDouble
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Types.CDouble -> GHC.Types.True }
                   Types.CChar
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Types.CChar -> GHC.Types.True }
                   Types.TimeT
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Types.TimeT -> GHC.Types.True }
                   Types.SizeT
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Types.SizeT -> GHC.Types.True }
                   Types.CObject
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False Types.CObject -> GHC.Types.True } }) -}
a4722848a800411239cc8eb5d70c8fd7
  $fEqStrategy :: GHC.Classes.Eq Types.Strategy
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Strategy Types.$fEqStrategy_$c== Types.$fEqStrategy_$c/= -}
a4722848a800411239cc8eb5d70c8fd7
  $fEqStrategy_$c/= ::
    Types.Strategy -> Types.Strategy -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Types.Strategy) (b :: Types.Strategy) ->
                 case a of wild {
                   Types.Lazy
                   -> case b of wild1 {
                        Types.Lazy -> GHC.Types.False Types.Strict -> GHC.Types.True }
                   Types.Strict
                   -> case b of wild1 {
                        Types.Lazy -> GHC.Types.True
                        Types.Strict -> GHC.Types.False } }) -}
a4722848a800411239cc8eb5d70c8fd7
  $fEqStrategy_$c== ::
    Types.Strategy -> Types.Strategy -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Types.Strategy) (ds1 :: Types.Strategy) ->
                 case ds of wild {
                   Types.Lazy
                   -> case ds1 of wild1 {
                        Types.Lazy -> GHC.Types.True Types.Strict -> GHC.Types.False }
                   Types.Strict
                   -> case ds1 of wild1 {
                        Types.Lazy -> GHC.Types.False
                        Types.Strict -> GHC.Types.True } }) -}
87020baf4f01fd7d0266ab0cc9afcbaf
  $fEqType :: GHC.Classes.Eq Types.Type
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Type Types.$fEqType_$c== Types.$fEqType_$c/= -}
87020baf4f01fd7d0266ab0cc9afcbaf
  $fEqType_$c/= :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Types.Type) (b :: Types.Type) ->
                 case Types.$fEqType_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
87020baf4f01fd7d0266ab0cc9afcbaf
  $fEqType_$c== :: Types.Type -> Types.Type -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U> -}
ff715ba41a9335d128079064fa01ee52
  $fShowArg :: GHC.Show.Show Types.Arg
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Arg
                  Types.$fShowArg_$cshowsPrec1
                  Types.$fShowArg_$cshow
                  Types.$fShowArg_$cshowList -}
ff715ba41a9335d128079064fa01ee52
  $fShowArg1 :: Types.Arg -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Types.Arg) (w1 :: GHC.Base.String) ->
                 case w of ww { Types.Arg ww1 ww2 ->
                 Types.$w$cshowsPrec 0# ww1 ww2 w1 }) -}
eacd30410906813ea2dca17c93853065
  $fShowArg2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowArg3) -}
2ef6e7b3e55ed9d6474ebe7060c3dc92
  $fShowArg3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Arg {"#) -}
07b6f32d79ce049417f9c0567df8ba50
  $fShowArg4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
5b62494a8d3012673e5ff03232cf675c
  $fShowArg5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
f42d311f581e7f8d0423ae4a31ce4ed2
  $fShowArg6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("argType = "#) -}
fb0b2ac1b76d15d748c8e96c6e52df9d
  $fShowArg7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("argNames = "#) -}
ff715ba41a9335d128079064fa01ee52
  $fShowArg_$cshow :: Types.Arg -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Arg) ->
                 Types.$fShowArg_$cshowsPrec1
                   Types.$fShowArg5
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ff715ba41a9335d128079064fa01ee52
  $fShowArg_$cshowList :: [Types.Arg] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Types.Arg Types.$fShowArg1) -}
87020baf4f01fd7d0266ab0cc9afcbaf
  $fShowArg_$cshowsPrec ::
    GHC.Types.Int -> Types.Type -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
ff715ba41a9335d128079064fa01ee52
  $fShowArg_$cshowsPrec1 ::
    GHC.Types.Int -> Types.Arg -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Types.Arg)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.Arg ww3 ww4 ->
                 Types.$w$cshowsPrec ww1 ww3 ww4 w2 } }) -}
c5a4f6b9e5fc9306a020c50f914fe6d4
  $fShowCBaseType :: GHC.Show.Show Types.CBaseType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.CBaseType
                  Types.$fShowCBaseType_$cshowsPrec
                  Types.$fShowCBaseType_$cshow
                  Types.$fShowCBaseType_$cshowList -}
2936d38d73b6255601f38fa0cb3092f1
  $fShowCBaseType1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Types.$fShowCBaseType2) -}
066a2dca77f4b49f975c86ff2e28b7cf
  $fShowCBaseType10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CDouble"#) -}
f20621913ef353df57a11ba947240780
  $fShowCBaseType11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Types.$fShowCBaseType12) -}
abebd917ce06ce7a1b1b1c441bcfe431
  $fShowCBaseType12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CLong"#) -}
935c75e31886dc445d3c665ac121c66f
  $fShowCBaseType13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Types.$fShowCBaseType14) -}
d324fc72e6189e534b85d116735b4e13
  $fShowCBaseType14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CInt"#) -}
d269e86413be7b813fb124db2c956bb0
  $fShowCBaseType15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Types.$fShowCBaseType16) -}
1792cbb49529292d4de622e3c6e0bc11
  $fShowCBaseType16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CVoid"#) -}
04090cd96002f396ef79d359b52bc903
  $fShowCBaseType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CObject"#) -}
b8e30c612d5ba5e0279f08b4f1b12c2f
  $fShowCBaseType3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Types.$fShowCBaseType4) -}
9a6776f1562b2de9415d126a7e08195c
  $fShowCBaseType4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SizeT"#) -}
e509558664aeae300181b1782ad82f57
  $fShowCBaseType5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Types.$fShowCBaseType6) -}
7873f9b917a42037bcc16cfb59d2b89c
  $fShowCBaseType6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TimeT"#) -}
ad4b96099c223d9a2357c3a820eb0b8b
  $fShowCBaseType7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Types.$fShowCBaseType8) -}
16f159840ae0dd6787c551057ca9621e
  $fShowCBaseType8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CChar"#) -}
c29a34e78fb1965092f9afcbea58bba1
  $fShowCBaseType9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Types.$fShowCBaseType10) -}
c5a4f6b9e5fc9306a020c50f914fe6d4
  $fShowCBaseType_$cshow :: Types.CBaseType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.CBaseType) ->
                 case x of wild {
                   Types.CVoid -> Types.$fShowCBaseType15
                   Types.CInt -> Types.$fShowCBaseType13
                   Types.CLong -> Types.$fShowCBaseType11
                   Types.CDouble -> Types.$fShowCBaseType9
                   Types.CChar -> Types.$fShowCBaseType7
                   Types.TimeT -> Types.$fShowCBaseType5
                   Types.SizeT -> Types.$fShowCBaseType3
                   Types.CObject -> Types.$fShowCBaseType1 }) -}
c5a4f6b9e5fc9306a020c50f914fe6d4
  $fShowCBaseType_$cshowList :: [Types.CBaseType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Types.CBaseType
                   Types.$w$cshowsPrec1) -}
c5a4f6b9e5fc9306a020c50f914fe6d4
  $fShowCBaseType_$cshowsPrec ::
    GHC.Types.Int -> Types.CBaseType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Types.CBaseType)
                   (w2 :: GHC.Base.String) ->
                 Types.$w$cshowsPrec1 w1 w2) -}
1f188493d3231a54e0126f669d608b03
  $fShowDecl :: GHC.Show.Show Types.Decl
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Decl
                  Types.$fShowDecl_$cshowsPrec
                  Types.$fShowDecl_$cshow
                  Types.$fShowDecl_$cshowList -}
1f188493d3231a54e0126f669d608b03
  $fShowDecl1 :: Types.Decl -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U,1*U,1*U)><L,U>,
     Unfolding: (\ (w :: Types.Decl) (w1 :: GHC.Base.String) ->
                 case w of ww { Types.Decl ww1 ww2 ww3 ww4 ->
                 Types.$w$cshowsPrec2 0# ww1 ww2 ww3 ww4 w1 }) -}
1f188493d3231a54e0126f669d608b03
  $fShowDecl_$cshow :: Types.Decl -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Decl) ->
                 Types.$fShowDecl_$cshowsPrec
                   Types.$fShowArg5
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1f188493d3231a54e0126f669d608b03
  $fShowDecl_$cshowList :: [Types.Decl] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Types.Decl Types.$fShowDecl1) -}
1f188493d3231a54e0126f669d608b03
  $fShowDecl_$cshowsPrec ::
    GHC.Types.Int -> Types.Decl -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Types.Decl)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.Decl ww3 ww4 ww5 ww6 ->
                 Types.$w$cshowsPrec2 ww1 ww3 ww4 ww5 ww6 w2 } }) -}
c9540cbc683f81aa64716bdbb30d7037
  $fShowDef :: GHC.Show.Show Types.Def
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Def
                  Types.$fShowDef_$cshowsPrec
                  Types.$fShowDef_$cshow
                  Types.$fShowDef_$cshowList -}
c9540cbc683f81aa64716bdbb30d7037
  $fShowDef1 :: Types.Def -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(1*U,1*U(U),1*U)><L,U>,
     Unfolding: (\ (w :: Types.Def) (w1 :: GHC.Base.String) ->
                 case w of ww { Types.Def ww1 ww2 ww3 ->
                 Types.$w$cshowsPrec3 0# ww1 ww2 ww3 w1 }) -}
524e37fd549214f72aa5c1b12927e7b6
  $fShowDef2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowDef3) -}
f0db31f0e83a36c28e9ef73d6e1284e3
  $fShowDef3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DefMask"#) -}
ca931aa4fbd16b00da2b6b678c2aebf0
  $fShowDef4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowDef5) -}
b97e17302930bfccae810ddb606f575d
  $fShowDef5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DefInt"#) -}
4a1d19a645e9bd95d14a6b421603bc10
  $fShowDef6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("defType = "#) -}
4e5cb1283657470ef309311a5fb23080
  $fShowDef7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("defValue = "#) -}
ac3f113c2fee12a282e41715ca0388b6
  $fShowDef8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("defName = "#) -}
740b42d17d77e2b898c8eb9f845e5e7f
  $fShowDef9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Def {"#) -}
c9aec0c54be5a2098e09e610d12a408e
  $fShowDefType :: GHC.Show.Show Types.DefType
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.DefType
                  Types.$fShowDefType_$cshowsPrec
                  Types.$fShowDefType_$cshow
                  Types.$fShowDefType_$cshowList -}
c9aec0c54be5a2098e09e610d12a408e
  $fShowDefType1 :: Types.DefType -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Types.DefType) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Types.DefInt
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n Types.$fShowDef4)
                        eta
                   Types.DefMask
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n Types.$fShowDef2)
                        eta }) -}
c9aec0c54be5a2098e09e610d12a408e
  $fShowDefType_$cshow :: Types.DefType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.DefType) ->
                 case x of wild {
                   Types.DefInt -> Types.$fShowDef4
                   Types.DefMask -> Types.$fShowDef2 }) -}
c9aec0c54be5a2098e09e610d12a408e
  $fShowDefType_$cshowList :: [Types.DefType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Types.DefType
                   Types.$fShowDefType1) -}
c9aec0c54be5a2098e09e610d12a408e
  $fShowDefType_$cshowsPrec ::
    GHC.Types.Int -> Types.DefType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: Types.DefType)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   Types.DefInt
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n Types.$fShowDef4)
                        eta
                   Types.DefMask
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n Types.$fShowDef2)
                        eta }) -}
c9540cbc683f81aa64716bdbb30d7037
  $fShowDef_$cshow :: Types.Def -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U(U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Def) ->
                 Types.$fShowDef_$cshowsPrec
                   Types.$fShowArg5
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c9540cbc683f81aa64716bdbb30d7037
  $fShowDef_$cshowList :: [Types.Def] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Types.Def Types.$fShowDef1) -}
c9540cbc683f81aa64716bdbb30d7037
  $fShowDef_$cshowsPrec ::
    GHC.Types.Int -> Types.Def -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U(U),1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Types.Def)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Types.Def ww3 ww4 ww5 ->
                 Types.$w$cshowsPrec3 ww1 ww3 ww4 ww5 w2 } }) -}
a4722848a800411239cc8eb5d70c8fd7
  $fShowStrategy :: GHC.Show.Show Types.Strategy
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Strategy
                  Types.$fShowStrategy_$cshowsPrec
                  Types.$fShowStrategy_$cshow
                  Types.$fShowStrategy_$cshowList -}
a4722848a800411239cc8eb5d70c8fd7
  $fShowStrategy1 :: Types.Strategy -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Types.Strategy) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   Types.Lazy
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n Types.$fShowStrategy4)
                        eta
                   Types.Strict
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n Types.$fShowStrategy2)
                        eta }) -}
c7ec79c760dcca9723e0aa732bfe0309
  $fShowStrategy2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowStrategy3) -}
a0e822f9c0bff8550f7ba8ab1ba39ecf
  $fShowStrategy3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Strict"#) -}
fa56ce792dcd2e1164d07c4368382bb5
  $fShowStrategy4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Types.$fShowStrategy5) -}
c13c9ac6bd87377cba9683aef1634092
  $fShowStrategy5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lazy"#) -}
a4722848a800411239cc8eb5d70c8fd7
  $fShowStrategy_$cshow :: Types.Strategy -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Strategy) ->
                 case x of wild {
                   Types.Lazy -> Types.$fShowStrategy4
                   Types.Strict -> Types.$fShowStrategy2 }) -}
a4722848a800411239cc8eb5d70c8fd7
  $fShowStrategy_$cshowList :: [Types.Strategy] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Types.Strategy
                   Types.$fShowStrategy1) -}
a4722848a800411239cc8eb5d70c8fd7
  $fShowStrategy_$cshowsPrec ::
    GHC.Types.Int -> Types.Strategy -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: Types.Strategy)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   Types.Lazy
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n Types.$fShowStrategy4)
                        eta
                   Types.Strict
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n Types.$fShowStrategy2)
                        eta }) -}
87020baf4f01fd7d0266ab0cc9afcbaf
  $fShowType :: GHC.Show.Show Types.Type
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Types.Type
                  Types.$fShowArg_$cshowsPrec
                  Types.$fShowType_$cshow
                  Types.$fShowType_$cshowList -}
87020baf4f01fd7d0266ab0cc9afcbaf
  $fShowType1 :: Types.Type -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Types.$fShowArg_$cshowsPrec Types.$fShowArg5) -}
87020baf4f01fd7d0266ab0cc9afcbaf
  $fShowType_$cshow :: Types.Type -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Types.Type) ->
                 Types.$fShowArg_$cshowsPrec
                   Types.$fShowArg5
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
87020baf4f01fd7d0266ab0cc9afcbaf
  $fShowType_$cshowList :: [Types.Type] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Types.Type Types.$fShowType1) -}
ac05f249e42531860db4d8da55ce5226
  $tc'Arg :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4812314875551637478##
                   787717438317339949##
                   Types.$trModule
                   Types.$tc'Arg2
                   0#
                   Types.$tc'Arg1) -}
11d4fcb6a9d6f915d4a39d5c27b09e9e
  $tc'Arg1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2950fa623d823076466a20e600b4f2dc
  $tc'Arg2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Arg3) -}
82e5b823ae04e596b6d1a7f4223aaea0
  $tc'Arg3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Arg"#) -}
bda104d5e6b90d8e886ae32868c89462
  $tc'ArrayInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5334915297958294241##
                   14446228085316852331##
                   Types.$trModule
                   Types.$tc'ArrayInt2
                   0#
                   Types.$tc'ArrayInt1) -}
4ce2f6597bfbd58c333c0f49aafd5cf7
  $tc'ArrayInt1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c2734542c0bccbd58443c7b235fc03dc
  $tc'ArrayInt2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ArrayInt3) -}
711fbebbd054adffa32c9d2ef1ce6e2c
  $tc'ArrayInt3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArrayInt"#) -}
3b1eefc29644681eab50a19185866fb1
  $tc'ArrayIntOut :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8714646962734347282##
                   13809045356023414286##
                   Types.$trModule
                   Types.$tc'ArrayIntOut1
                   0#
                   Types.$tc'ArrayInt1) -}
c8cb0043c427d61352b839a8e16cd403
  $tc'ArrayIntOut1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ArrayIntOut2) -}
1952bf597db101fb51bca2926a2b6845
  $tc'ArrayIntOut2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArrayIntOut"#) -}
d6b41536738fcbefc7c3a92a79a4733f
  $tc'ArrayIntPtr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10060971316033111055##
                   1796518046348380689##
                   Types.$trModule
                   Types.$tc'ArrayIntPtr1
                   0#
                   Types.$tc'ArrayInt1) -}
e66b5718c1aa6fb2f5d445abf788e8f1
  $tc'ArrayIntPtr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ArrayIntPtr2) -}
f02a033f1a04112e96fb12b4a51c2ed8
  $tc'ArrayIntPtr2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArrayIntPtr"#) -}
52acbad207c4d50fab64c9773041ce26
  $tc'ArrayIntPtrOut :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4731292758786722497##
                   15172374291137820153##
                   Types.$trModule
                   Types.$tc'ArrayIntPtrOut1
                   0#
                   Types.$tc'ArrayInt1) -}
e2134739c8ebeb771675e072bbb6c737
  $tc'ArrayIntPtrOut1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ArrayIntPtrOut2) -}
801cd965ff0e9263aadddf72e74b24f3
  $tc'ArrayIntPtrOut2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArrayIntPtrOut"#) -}
70b8f4cf4955318be62ffb27c4180778
  $tc'ArrayLen :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17982679305641110037##
                   1515928950357948714##
                   Types.$trModule
                   Types.$tc'ArrayLen2
                   0#
                   Types.$tc'ArrayLen1) -}
5b2e5758f01bd1d792219c8cdc976eae
  $tc'ArrayLen1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
7b8709bfb144fc8c1cd183449f0ecbb3
  $tc'ArrayLen2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ArrayLen3) -}
bb6c8606420d0d966ebdd394863fa657
  $tc'ArrayLen3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArrayLen"#) -}
57c1504cd88aacab73f48a0465f4e816
  $tc'ArrayObject :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1435827799462876625##
                   3435384480299075299##
                   Types.$trModule
                   Types.$tc'ArrayObject2
                   0#
                   Types.$tc'ArrayObject1) -}
8661b66d896290a7aa9b2f125e4260d2
  $tc'ArrayObject1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
85b2a1fb36270e9a61e87995c12148f3
  $tc'ArrayObject2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ArrayObject3) -}
8585c3387c001cb84986f26e7f19734c
  $tc'ArrayObject3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArrayObject"#) -}
d7152699700d107df016d4bd407b914f
  $tc'ArrayObjectOut :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13850416106017698410##
                   8544718917031215387##
                   Types.$trModule
                   Types.$tc'ArrayObjectOut1
                   0#
                   Types.$tc'ArrayObject1) -}
1b959a21e3bd42c543495d213399ab31
  $tc'ArrayObjectOut1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ArrayObjectOut2) -}
c9ae88b5d689b6d797bbbdd288ca3c74
  $tc'ArrayObjectOut2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArrayObjectOut"#) -}
d2f54fd200f23ab4889e850af76c7cc1
  $tc'ArrayString :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7026777412378177618##
                   10687766046365539370##
                   Types.$trModule
                   Types.$tc'ArrayString1
                   0#
                   Types.$tc'ArrayInt1) -}
fdb11ac81e0a6219b539b8389a07f0ed
  $tc'ArrayString1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ArrayString2) -}
f01f8203dce1128f3febe6c27103b057
  $tc'ArrayString2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArrayString"#) -}
8f3dd7854bfda81a6d2fca6d81df0dcb
  $tc'ArrayStringOut :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   748019398496618560##
                   243889516798467190##
                   Types.$trModule
                   Types.$tc'ArrayStringOut1
                   0#
                   Types.$tc'ArrayInt1) -}
0ceb11cb4e134c6e9f60a7c5de6630e1
  $tc'ArrayStringOut1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ArrayStringOut2) -}
765950325ae6293bec549ce5828d6f61
  $tc'ArrayStringOut2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ArrayStringOut"#) -}
afeb60762a2451deb3f663721dfb25c3
  $tc'Bool :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8123123072578879132##
                   7138567605465647010##
                   Types.$trModule
                   Types.$tc'Bool1
                   0#
                   Types.$tc'ArrayLen1) -}
57188c9a6c244d2fb0cc109d80455980
  $tc'Bool1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Bool2) -}
9f095d9a9614245b3ff5dc5ca0aed1ad
  $tc'Bool2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Bool"#) -}
74602a4b314773938c2f729f5a59053c
  $tc'ByteString :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5969819256594737490##
                   1020183401982606110##
                   Types.$trModule
                   Types.$tc'ByteString2
                   0#
                   Types.$tc'ByteString1) -}
e8e77442e181468cc1e76f0f775d8a42
  $tc'ByteString1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c532d1bbdce9d4f8b69fa39fe4a425b3
  $tc'ByteString2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ByteString3) -}
fe8e55c245da1095b1977458f85f67e8
  $tc'ByteString3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ByteString"#) -}
9560d109ef006c7f40753cfee4224321
  $tc'ByteStringLen :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6566838038715480661##
                   176520370355402205##
                   Types.$trModule
                   Types.$tc'ByteStringLen1
                   0#
                   Types.$tc'ArrayLen1) -}
47360466f0f95d634f1ede99d58d17e3
  $tc'ByteStringLen1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ByteStringLen2) -}
7ba3b55933d97157e031e96b91260de7
  $tc'ByteStringLen2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ByteStringLen"#) -}
49a69ee7682b5207184b6d78d5cb8836
  $tc'ByteStringOut :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2163133475631586633##
                   17680775800575453156##
                   Types.$trModule
                   Types.$tc'ByteStringOut1
                   0#
                   Types.$tc'ByteString1) -}
972c11deb74f04523121fef0fe402020
  $tc'ByteStringOut1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ByteStringOut2) -}
06ec27e2683f6f00ca7ac455345d07d8
  $tc'ByteStringOut2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ByteStringOut"#) -}
778583d48467c70f05892d914988cbf1
  $tc'CChar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6794021526166444342##
                   8784984838399179797##
                   Types.$trModule
                   Types.$tc'CChar2
                   0#
                   Types.$tc'CChar1) -}
080b28a3d01cf54a2c6a6ee432fb19e3
  $tc'CChar1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
5d537570a39d5ead78e7850f1bd05303
  $tc'CChar2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'CChar3) -}
ff8d812c5ba14a2a8476d95657e10c55
  $tc'CChar3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CChar"#) -}
d09624eb2f64a4fd07a2a5f3026a4058
  $tc'CDouble :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9746128205804411221##
                   12524047961315904445##
                   Types.$trModule
                   Types.$tc'CDouble1
                   0#
                   Types.$tc'CChar1) -}
d7092ad2730b86be1f8468e51377a43a
  $tc'CDouble1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'CDouble2) -}
e47a7ca869f5772c883268e2f1555ab2
  $tc'CDouble2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CDouble"#) -}
6ab81deb3aef813c3b69874934f36dd8
  $tc'CInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10577066361109311261##
                   5190408430454778504##
                   Types.$trModule
                   Types.$tc'CInt1
                   0#
                   Types.$tc'CChar1) -}
87ba50085a790eaf9fdf0a68285361fc
  $tc'CInt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'CInt2) -}
583788df0b032980b898bb830d497d90
  $tc'CInt2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CInt"#) -}
62477c4ef74abc02b1215817d928d131
  $tc'CLong :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2134185942608593609##
                   7399723311813237037##
                   Types.$trModule
                   Types.$tc'CLong1
                   0#
                   Types.$tc'CChar1) -}
426bca4b3c902cfe5612e3a0f5008630
  $tc'CLong1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'CLong2) -}
4fbf7885056e86702c73597af7555cea
  $tc'CLong2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CLong"#) -}
9c84727bfc9cbe6eca09f273d58397b8
  $tc'CObject :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2065378859947913449##
                   16845298150615665844##
                   Types.$trModule
                   Types.$tc'CObject1
                   0#
                   Types.$tc'CChar1) -}
dc4a1a75ae5425176d1b86ff1c5e09f6
  $tc'CObject1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'CObject2) -}
68270b2e7df7cff24276a7a3e5c6f5f5
  $tc'CObject2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CObject"#) -}
0f8b1fa101a0b49f1688be0f987af840
  $tc'CVoid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8251694761938614490##
                   13265472461470388726##
                   Types.$trModule
                   Types.$tc'CVoid1
                   0#
                   Types.$tc'CChar1) -}
5fcf2beeacec5b9f7bf4ddeae0e53a9c
  $tc'CVoid1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'CVoid2) -}
92f5c9b2f0c33232e8fa5ee73509f664
  $tc'CVoid2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CVoid"#) -}
85dad969272757d720cc2af0b1ed1672
  $tc'Char :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9097342921793693297##
                   8118247293937832677##
                   Types.$trModule
                   Types.$tc'Char1
                   0#
                   Types.$tc'ArrayLen1) -}
287bdea44618c125202d0b17949724d0
  $tc'Char1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Char2) -}
7364956a19c358e2b187ea436bae78db
  $tc'Char2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Char"#) -}
f75610b5609ea2d2a6fe2d95a7d4977f
  $tc'ColorRGB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6397793801759917286##
                   1225906655247795520##
                   Types.$trModule
                   Types.$tc'ColorRGB1
                   0#
                   Types.$tc'ArrayInt1) -}
06c6de4f8e872c7d37160972d2b32f8f
  $tc'ColorRGB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'ColorRGB2) -}
4078428d9eaf565521bd3768909d63d5
  $tc'ColorRGB2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'ColorRGB"#) -}
af20a3cdbe9d24779bc92f1bf0682085
  $tc'Decl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4174908415000383281##
                   1595996222721385509##
                   Types.$trModule
                   Types.$tc'Decl2
                   0#
                   Types.$tc'Decl1) -}
b5e7672cf39acf3f9f64780455dc01d6
  $tc'Decl1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
dfdbec0bbb7723cc2c2f24bc56e3f06d
  $tc'Decl2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Decl3) -}
4899d2057c4e8ce0c56e1ef6c92bf78c
  $tc'Decl3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Decl"#) -}
f310a7938456489997c01c354c9fa005
  $tc'Def :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9616475060647430242##
                   3558206278774844944##
                   Types.$trModule
                   Types.$tc'Def2
                   0#
                   Types.$tc'Def1) -}
b9e2b84e25913a1ad45248607b1b682c
  $tc'Def1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
bf4fd4e7a5493256be793f575bd5aef7
  $tc'Def2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Def3) -}
ba29c326a7b940bfd74402833d898fc1
  $tc'Def3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Def"#) -}
0fc188361fa14a9f40bb763e21fa7810
  $tc'DefInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11420787953892919698##
                   4722241363499441042##
                   Types.$trModule
                   Types.$tc'DefInt2
                   0#
                   Types.$tc'DefInt1) -}
b623cec275d1ec4621eb99cf7a61be96
  $tc'DefInt1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
f6f14f921f97f1bc440f8e7de2749231
  $tc'DefInt2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'DefInt3) -}
adc8162d600704088d14ef6aab219ec0
  $tc'DefInt3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DefInt"#) -}
ec0334b43006c19befe99df1b588d7e1
  $tc'DefMask :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10203625074189767894##
                   5647460282341613917##
                   Types.$trModule
                   Types.$tc'DefMask1
                   0#
                   Types.$tc'DefInt1) -}
cc03128dd0ecd6d5feea0cfab3143d52
  $tc'DefMask1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'DefMask2) -}
1ca8f9fbec81c1caeff5c3d847e4c4c5
  $tc'DefMask2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DefMask"#) -}
9ef5e20e15d303224ef0e69d87ddb6c9
  $tc'Double :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15917972347760525283##
                   534892645641949739##
                   Types.$trModule
                   Types.$tc'Double1
                   0#
                   Types.$tc'ArrayLen1) -}
82359d8f04ecca20013bac2856405f2b
  $tc'Double1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Double2) -}
a94711544fd6ea756e42f0bf8008d6f0
  $tc'Double2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Double"#) -}
375124a198d1f6e09734f6cd4d3e46fd
  $tc'EventId :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5715706277340656414##
                   796608431216893164##
                   Types.$trModule
                   Types.$tc'EventId1
                   0#
                   Types.$tc'ArrayLen1) -}
c2f8d776e27ba08af8c028d05230a753
  $tc'EventId1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'EventId2) -}
8da1a96cd25e8cb3338ba7fe12ff0382
  $tc'EventId2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'EventId"#) -}
a63f889c46464dcefeb4f8cc83a5fb58
  $tc'Float :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2002186321716292211##
                   13072119272724325837##
                   Types.$trModule
                   Types.$tc'Float1
                   0#
                   Types.$tc'ArrayLen1) -}
801a403dbffb0301ebd02db489cc2fdb
  $tc'Float1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Float2) -}
18e7ad327b1ba6a6a88cd9705989483c
  $tc'Float2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Float"#) -}
1fd9f6c0b241f1b3f92224a46a1603e9
  $tc'Fun :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5121964880218104932##
                   15730378949464856323##
                   Types.$trModule
                   Types.$tc'Fun2
                   0#
                   Types.$tc'Fun1) -}
383b470bb98160698a793de13dea9e1c
  $tc'Fun1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
23228598735821d9f7517ba9bd6fbfe7
  $tc'Fun2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Fun3) -}
d3b488fe2fefda495909ddb64f877177
  $tc'Fun3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Fun"#) -}
d2157a2fc60a024388287f814ed21bad
  $tc'Id :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7839969739766656525##
                   662445830891275599##
                   Types.$trModule
                   Types.$tc'Id1
                   0#
                   Types.$tc'ArrayLen1) -}
d5f934e1f99ddcd404f83e4028af8d02
  $tc'Id1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Id2) -}
6d4e0acb6e94265ce3e8cf2fc056a6f6
  $tc'Id2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Id"#) -}
fc3a57997153172ac8f9cc2e8a0a0a85
  $tc'Int :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13438260074293493729##
                   453773771828198585##
                   Types.$trModule
                   Types.$tc'Int1
                   0#
                   Types.$tc'ArrayInt1) -}
8888efb0f20928876170bc3c2b849b08
  $tc'Int1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Int2) -}
5d85789a610e1258f64febf4ca44982d
  $tc'Int2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Int"#) -}
20a1722cbea83efc87bff47d6c360eeb
  $tc'Int3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Int4) -}
f57b9634a93abf58828497d2e118a01a
  $tc'Int4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Int64"#) -}
c580f925b50e2df18e520eef17ef9c6f
  $tc'Int64 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16973266570498603587##
                   4605628296706705002##
                   Types.$trModule
                   Types.$tc'Int3
                   0#
                   Types.$tc'ArrayLen1) -}
e614fd0616eacc89d169e6a119a824a0
  $tc'IntPtr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15519371804781128692##
                   6761074353621273675##
                   Types.$trModule
                   Types.$tc'IntPtr1
                   0#
                   Types.$tc'ArrayLen1) -}
84dffaef85109370a790dd0534fa466f
  $tc'IntPtr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'IntPtr2) -}
7dcd77c4110ac2e77ddd0197ca5839ca
  $tc'IntPtr2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'IntPtr"#) -}
f580eef92d428ff31da0a97ecbd43ac8
  $tc'Lazy :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17391121597700802116##
                   10698600135000598677##
                   Types.$trModule
                   Types.$tc'Lazy2
                   0#
                   Types.$tc'Lazy1) -}
e75680beed0689ea16719addd312f4e3
  $tc'Lazy1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
f67d15fa357b33d3d4f51e33a7fed192
  $tc'Lazy2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Lazy3) -}
c0b514f3cdd610abecc29e800a18fed5
  $tc'Lazy3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Lazy"#) -}
d99ac28389954a8b94c03874acf49b2b
  $tc'Object :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13772437332549292647##
                   1293103554956796319##
                   Types.$trModule
                   Types.$tc'Object1
                   0#
                   Types.$tc'Fun1) -}
e990a3774a4c3254dd860086c0149087
  $tc'Object1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Object2) -}
f510e2c47bc8847c8e764399cacc27e6
  $tc'Object2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Object"#) -}
294f6726d886b797c97ab88374a7b45f
  $tc'Point :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10448761397379576259##
                   5746997575744241588##
                   Types.$trModule
                   Types.$tc'Point1
                   0#
                   Types.$tc'ArrayInt1) -}
95f0c11de1aa012899f07cdc7732ac9e
  $tc'Point1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Point2) -}
eb5ca2c003229441e68e702fb516ae9b
  $tc'Point2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Point"#) -}
247ebb3f846dcd8cf5c7ce8befeda12c
  $tc'PointOut :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18290131025255477125##
                   4232405871232738580##
                   Types.$trModule
                   Types.$tc'PointOut1
                   0#
                   Types.$tc'ArrayInt1) -}
96145c3488673cc2728df3259b220762
  $tc'PointOut1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'PointOut2) -}
67d2b35cea74deaf2ca25c7d1e70fc63
  $tc'PointOut2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PointOut"#) -}
4d9708bafbd6c6f6abe1a98166e4a020
  $tc'Ptr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4123038170859083721##
                   15051822300220428538##
                   Types.$trModule
                   Types.$tc'Ptr2
                   0#
                   Types.$tc'Ptr1) -}
f8e2a2ab62bcd1699a3ea5fb764980cb
  $tc'Ptr1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
ca02a6e7a1747e780c0f416d282d7ac7
  $tc'Ptr2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Ptr3) -}
c07f5af14db2b976f336e527f1d06164
  $tc'Ptr3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Ptr"#) -}
b8bacbc9389494091ada973e95ca4c4d
  $tc'Rect :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14797151877262748613##
                   486434779600725220##
                   Types.$trModule
                   Types.$tc'Rect1
                   0#
                   Types.$tc'ArrayInt1) -}
3056c790d727df97705673f882323997
  $tc'Rect1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Rect2) -}
f527bea14bd0a47d71b0d5ce824fc482
  $tc'Rect2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Rect"#) -}
a476c03ffe5215addb0d385adcd0a23d
  $tc'RectOut :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   470862455148223683##
                   18174597170981389125##
                   Types.$trModule
                   Types.$tc'RectOut1
                   0#
                   Types.$tc'ArrayInt1) -}
fe79a33c62948af73ffa276d353a253e
  $tc'RectOut1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'RectOut2) -}
72f6d6d8c64026ea66203c306f840482
  $tc'RectOut2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RectOut"#) -}
8664d75660018b60144957f77c0b10a6
  $tc'RefObject :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5005393777776185020##
                   911169980697838522##
                   Types.$trModule
                   Types.$tc'RefObject1
                   0#
                   Types.$tc'Fun1) -}
2ec75b0be32025408220a3ce23ca90b4
  $tc'RefObject1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'RefObject2) -}
3d79f964c083df058005cd548acd0955
  $tc'RefObject2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'RefObject"#) -}
65d9a2040918c044eae29ccee7a0d2b3
  $tc'Size :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7644357130222044764##
                   12264337493096355623##
                   Types.$trModule
                   Types.$tc'Size1
                   0#
                   Types.$tc'ArrayInt1) -}
22b67c92910566b5801db5c5f205379f
  $tc'Size1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Size2) -}
071af2181dc1289700fea1682cbf5fc5
  $tc'Size2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Size"#) -}
fbf70279afa2d946d581f10545ee87aa
  $tc'SizeOut :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1457190036721918752##
                   15187023611379644007##
                   Types.$trModule
                   Types.$tc'SizeOut1
                   0#
                   Types.$tc'ArrayInt1) -}
783d86d7c29a5bbb7edb2b534bc594a4
  $tc'SizeOut1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'SizeOut2) -}
b7b39371481946ffc126ad7195c1d688
  $tc'SizeOut2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SizeOut"#) -}
764a008c0fa299b9241b666854f1fd96
  $tc'SizeT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3705370146515704313##
                   11027867901508547487##
                   Types.$trModule
                   Types.$tc'SizeT1
                   0#
                   Types.$tc'CChar1) -}
47011e2446b8f08cc6367d9c6570bc40
  $tc'SizeT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'SizeT2) -}
b3b9707001405590b58aa794886334a2
  $tc'SizeT2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'SizeT"#) -}
6050592a9c8ae3724e84a767aea63035
  $tc'Strict :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3156658190227809415##
                   628399062797466505##
                   Types.$trModule
                   Types.$tc'Strict1
                   0#
                   Types.$tc'Lazy1) -}
01404dffb8418889b87c7d8c34ada944
  $tc'Strict1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Strict2) -}
7086670fa06ebdc3182874200ef74424
  $tc'Strict2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Strict"#) -}
242b3848f038a2919ffbda15a4969d17
  $tc'String :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5822446814993019179##
                   11322499613056175934##
                   Types.$trModule
                   Types.$tc'String1
                   0#
                   Types.$tc'ArrayInt1) -}
46f8b527f83d9c37624dc86df1c9b9b9
  $tc'String1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'String2) -}
2be44dedfbdb892417ff6c878ee02b58
  $tc'String2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'String"#) -}
c5d0fc36da1d66ed92dfb76ccfdd6f60
  $tc'StringLen :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8354594548713643601##
                   6598335219544484136##
                   Types.$trModule
                   Types.$tc'StringLen1
                   0#
                   Types.$tc'ArrayLen1) -}
8340a9ae7641e81e3d8a6dc1ce7be688
  $tc'StringLen1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'StringLen2) -}
736dc763a8dfe5648230445983548512
  $tc'StringLen2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'StringLen"#) -}
687ff085e096c7c230cda3af05e75b1b
  $tc'StringOut :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9733497685960430972##
                   5438172181933651470##
                   Types.$trModule
                   Types.$tc'StringOut1
                   0#
                   Types.$tc'ArrayInt1) -}
57712782b47ebc3ee93bd945171bf6da
  $tc'StringOut1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'StringOut2) -}
67d49aa00adbab30b7a165a1afe5bb3e
  $tc'StringOut2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'StringOut"#) -}
f59fd1b2d90c1e7bf1f9a43b5e240963
  $tc'TimeT :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8332114489607325028##
                   2128585370252885661##
                   Types.$trModule
                   Types.$tc'TimeT1
                   0#
                   Types.$tc'CChar1) -}
b038e1d8b2298ac0217a8bde051af116
  $tc'TimeT1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'TimeT2) -}
1c0751415498a4eab8b144b52c6dd9db
  $tc'TimeT2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'TimeT"#) -}
34f91650d680dd19cf5bf9c9caf09368
  $tc'Vector :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4877126815085760274##
                   11227187533161662457##
                   Types.$trModule
                   Types.$tc'Vector1
                   0#
                   Types.$tc'ArrayInt1) -}
0ca7f3956a8ec86d634a00de16909218
  $tc'Vector1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Vector2) -}
f627623e3d3c0ec0f44fff15f42fbce0
  $tc'Vector2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Vector"#) -}
9b4a925969ebb0432357a896b706ef3a
  $tc'VectorOut :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13185676833445311335##
                   13124345181687481281##
                   Types.$trModule
                   Types.$tc'VectorOut1
                   0#
                   Types.$tc'ArrayInt1) -}
6179a831dd52198f29847a1b2385a91e
  $tc'VectorOut1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'VectorOut2) -}
a57536a8bd55dd82b82ca1a2bfb16940
  $tc'VectorOut2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VectorOut"#) -}
0be274452c18a9c59463efb742718e70
  $tc'Void :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5679340187735086672##
                   5404584473017739980##
                   Types.$trModule
                   Types.$tc'Void1
                   0#
                   Types.$tc'ArrayLen1) -}
0e3f11b92609e4fc2faf1b1e1e1ec7c2
  $tc'Void1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Void2) -}
e3f0c750f34b6de0ca398d60e3fe8b3e
  $tc'Void2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Void"#) -}
04f6c4eb2f6db54683833c4ca4af14e9
  $tc'Word :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8634281851709034458##
                   7142685029510458153##
                   Types.$trModule
                   Types.$tc'Word1
                   0#
                   Types.$tc'ArrayLen1) -}
3ef2b9c7dd3a54a0433dc6e7f8b1aa0c
  $tc'Word1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Word2) -}
054cfead83a8a0c0d9fc7b9e89a90e8d
  $tc'Word2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Word"#) -}
8a38a4ece72881a076ee18c07a12985b
  $tc'Word3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Word4) -}
4221df192099d0d01e37e9b8d0fad89f
  $tc'Word32 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14718810091673792259##
                   11986774975480163974##
                   Types.$trModule
                   Types.$tc'Word3
                   0#
                   Types.$tc'ArrayLen1) -}
3111cf38f498d140d5f5ba34d14b136d
  $tc'Word4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Word32"#) -}
7518b8f2609a57927181dc1a69a8dfb8
  $tc'Word5 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Word6) -}
e23f285228dfc75f80dbaba0e416fb3d
  $tc'Word6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Word64"#) -}
5e9f9893fbbacccbffffabbd72b8c736
  $tc'Word64 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1968361617863655378##
                   9622496358075240311##
                   Types.$trModule
                   Types.$tc'Word5
                   0#
                   Types.$tc'ArrayLen1) -}
af9edc43946386de81f17642189cebdb
  $tc'Word7 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tc'Word9) -}
566da890a2af885793221483c64aed7e
  $tc'Word8 :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5031207447690894547##
                   2181052623110493183##
                   Types.$trModule
                   Types.$tc'Word7
                   0#
                   Types.$tc'ArrayLen1) -}
27838336cbca1c657db5e4c96b4d8493
  $tc'Word9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Word8"#) -}
831fa17555db0fdcf3cc66af7f3867c4
  $tcArg :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7562974596407932614##
                   8218846223734809843##
                   Types.$trModule
                   Types.$tcArg1
                   0#
                   GHC.Types.krep$*) -}
2dedb0d647604eec104a45d7742c47f5
  $tcArg1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcArg2) -}
981aca9ca8a6a316ced9756c6e961831
  $tcArg2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Arg"#) -}
364fd81c2bc08c4faea36b0d3f6e4fb7
  $tcCBaseType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2851354520005771400##
                   9626916231972166461##
                   Types.$trModule
                   Types.$tcCBaseType1
                   0#
                   GHC.Types.krep$*) -}
cea834ec1dd26daf9d9d17d7c4c96bfd
  $tcCBaseType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcCBaseType2) -}
84bed5d576effe7c15938229f990e55b
  $tcCBaseType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CBaseType"#) -}
4add0265b5ca9d84309adb7af1ef0269
  $tcDecl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16405897356148695327##
                   14925901972012322987##
                   Types.$trModule
                   Types.$tcDecl1
                   0#
                   GHC.Types.krep$*) -}
4259ddf7c4d35ebb01064f084465c37d
  $tcDecl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcDecl2) -}
58f271dfac9b7366ebdc6bd2311c66f4
  $tcDecl2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Decl"#) -}
cb4ea8ca9fec8b0c2ff09f6d692f48cf
  $tcDef :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10714445086512344122##
                   13627378506644268095##
                   Types.$trModule
                   Types.$tcDef1
                   0#
                   GHC.Types.krep$*) -}
035640b594929072f137d69d1f131980
  $tcDef1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcDef2) -}
498bc2b3b14dc469c295211f8a8e9165
  $tcDef2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Def"#) -}
172e50c8a620cddfac5753eb9df31962
  $tcDefType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7341607934296770079##
                   8748827946693641599##
                   Types.$trModule
                   Types.$tcDefType1
                   0#
                   GHC.Types.krep$*) -}
02894a6f530c3b331992ae4aaaadc8f6
  $tcDefType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcDefType2) -}
ac9f9d0d12d13b9c597e562401adedf5
  $tcDefType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DefType"#) -}
58aff6eab2e1c21b5ba781f1362f8d40
  $tcStrategy :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11292439488657584174##
                   16930306096361008985##
                   Types.$trModule
                   Types.$tcStrategy1
                   0#
                   GHC.Types.krep$*) -}
fa25705ea0de21a4f052c75d1a735a7d
  $tcStrategy1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcStrategy2) -}
8d147c409bc8274ed90e4eba573c2a09
  $tcStrategy2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Strategy"#) -}
c64ef57876e72b8fa056c7f880e70656
  $tcType :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14128482865025379628##
                   16089724893546526657##
                   Types.$trModule
                   Types.$tcType1
                   0#
                   GHC.Types.krep$*) -}
ef2f2ce6e5b6d8ce117e627e86ef3e0a
  $tcType1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$tcType2) -}
5ccfc5f65e678b7ced1c56c8d3f71d6b
  $tcType2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Type"#) -}
b97bcbc8eeb854323bb41934f802d787
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Types.$trModule3 Types.$trModule1) -}
c62d0b24432bb438fb8231d3be9174d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$trModule2) -}
6041368dbbc5427415dfd0c007a9dc0b
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Types"#) -}
f4f413cd3550714939be9ef04fb23b73
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Types.$trModule4) -}
e1b3e3d147beccf53766a0da95111e0d
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
df8d615267bddae83ae3714dd50a5daa
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> [GHC.Base.String]
    -> Types.Type
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: [GHC.Base.String])
                   (ww2 :: Types.Type)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Types.$fShowArg7
                       (let {
                          s :: GHC.Base.String
                          = GHC.Base.++
                              @ GHC.Types.Char
                              GHC.Show.showCommaSpace1
                              (GHC.CString.unpackAppendCString#
                                 Types.$fShowArg6
                                 (Types.$fShowArg_$cshowsPrec
                                    Types.$fShowArg5
                                    ww2
                                    (GHC.CString.unpackAppendCString# Types.$fShowArg4 x)))
                        } in
                        case ww1 of wild {
                          [] -> GHC.CString.unpackAppendCString# GHC.Show.showList__4 s
                          : x1 xs
                          -> GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showList__3
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.$fShow(,)3
                                  (GHC.Show.showLitString
                                     x1
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        GHC.Show.$fShow(,)3
                                        (let {
                                           lvl45 :: [GHC.Types.Char]
                                           = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__2 s
                                         } in
                                         letrec {
                                           showl :: [[GHC.Types.Char]] -> GHC.Base.String
                                             {- Arity: 1, Strictness: <S,1*U> -}
                                           = \ (ds2 :: [[GHC.Types.Char]]) ->
                                             case ds2 of wild1 {
                                               [] -> lvl45
                                               : y ys
                                               -> GHC.Types.:
                                                    @ GHC.Types.Char
                                                    GHC.Show.showList__1
                                                    (GHC.Types.:
                                                       @ GHC.Types.Char
                                                       GHC.Show.$fShow(,)3
                                                       (GHC.Show.showLitString
                                                          y
                                                          (GHC.Types.:
                                                             @ GHC.Types.Char
                                                             GHC.Show.$fShow(,)3
                                                             (showl ys)))) }
                                         } in
                                         showl xs)))) })
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char Types.$fShowArg2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Types.$fShowArg2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w))) }) -}
c5a4f6b9e5fc9306a020c50f914fe6d4
  $w$cshowsPrec1 ::
    Types.CBaseType -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Types.CBaseType) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   Types.CVoid
                   -> GHC.Base.++ @ GHC.Types.Char Types.$fShowCBaseType15 w1
                   Types.CInt
                   -> GHC.Base.++ @ GHC.Types.Char Types.$fShowCBaseType13 w1
                   Types.CLong
                   -> GHC.Base.++ @ GHC.Types.Char Types.$fShowCBaseType11 w1
                   Types.CDouble
                   -> GHC.Base.++ @ GHC.Types.Char Types.$fShowCBaseType9 w1
                   Types.CChar
                   -> GHC.Base.++ @ GHC.Types.Char Types.$fShowCBaseType7 w1
                   Types.TimeT
                   -> GHC.Base.++ @ GHC.Types.Char Types.$fShowCBaseType5 w1
                   Types.SizeT
                   -> GHC.Base.++ @ GHC.Types.Char Types.$fShowCBaseType3 w1
                   Types.CObject
                   -> GHC.Base.++ @ GHC.Types.Char Types.$fShowCBaseType1 w1 }) -}
f296ad5c589daf804f3d086da8a117ba
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> Types.Type
    -> [Types.Arg]
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 6, Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
8d33af1737e863672f0a864983c2a941
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Types.Int
    -> Types.DefType
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <S,U><L,1*U><L,1*U(U)><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Types.Int)
                   (ww3 :: Types.DefType)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.CString.unpackAppendCString#
                       Types.$fShowDef9
                       (GHC.CString.unpackAppendCString#
                          Types.$fShowDef8
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)3
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      GHC.Show.showCommaSpace1
                                      (GHC.CString.unpackAppendCString#
                                         Types.$fShowDef7
                                         (case ww2 of ww4 { GHC.Types.I# ww5 ->
                                          case GHC.Show.$wshowSignedInt
                                                 0#
                                                 ww5
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    GHC.Show.showCommaSpace1
                                                    (GHC.CString.unpackAppendCString#
                                                       Types.$fShowDef6
                                                       (case ww3 of wild {
                                                          Types.DefInt
                                                          -> GHC.Base.++
                                                               @ GHC.Types.Char
                                                               Types.$fShowDef4
                                                               (GHC.CString.unpackAppendCString#
                                                                  Types.$fShowArg4
                                                                  x)
                                                          Types.DefMask
                                                          -> GHC.Base.++
                                                               @ GHC.Types.Char
                                                               Types.$fShowDef2
                                                               (GHC.CString.unpackAppendCString#
                                                                  Types.$fShowArg4
                                                                  x) }))) of ww6 { (#,#) ww7 ww8 ->
                                          GHC.Types.: @ GHC.Types.Char ww7 ww8 } })))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 w)) }) -}
e6bad4991cbc3f3dcd9ef97059ab1c7e
  $werrorMsgDecl ::
    GHC.Base.String
    -> Types.Type
    -> [Types.Arg]
    -> GHC.Base.String
    -> [GHC.Types.Char]
    -> t
  {- Arity: 5, Strictness: <B,U><B,1*U><B,1*U><B,1*U><B,1*U>x,
     Inline: [0] -}
ff715ba41a9335d128079064fa01ee52
  data Arg
    = Arg {argNames :: [GHC.Base.String], argType :: Types.Type}
c5a4f6b9e5fc9306a020c50f914fe6d4
  data CBaseType
    = CVoid | CInt | CLong | CDouble | CChar | TimeT | SizeT | CObject
1f188493d3231a54e0126f669d608b03
  data Decl
    = Decl {declName :: GHC.Base.String,
            declRet :: Types.Type,
            declArgs :: [Types.Arg],
            declComment :: GHC.Base.String}
c9540cbc683f81aa64716bdbb30d7037
  data Def
    = Def {defName :: GHC.Base.String,
           defValue :: GHC.Types.Int,
           defType :: Types.DefType}
c9aec0c54be5a2098e09e610d12a408e
  data DefType = DefInt | DefMask
a4722848a800411239cc8eb5d70c8fd7
  data Strategy = Lazy | Strict
87020baf4f01fd7d0266ab0cc9afcbaf
  data Type
    = Int Types.CBaseType
    | IntPtr
    | Int64
    | Word
    | Word8
    | Word32
    | Word64
    | Void
    | Char
    | Double
    | Float
    | Ptr Types.Type
    | ByteString Types.Strategy
    | ByteStringOut Types.Strategy
    | ByteStringLen
    | EventId
    | Id
    | StringLen
    | StringOut Types.CBaseType
    | PointOut Types.CBaseType
    | SizeOut Types.CBaseType
    | VectorOut Types.CBaseType
    | RectOut Types.CBaseType
    | ArrayLen
    | ArrayStringOut Types.CBaseType
    | ArrayIntOut Types.CBaseType
    | ArrayIntPtrOut Types.CBaseType
    | ArrayObjectOut GHC.Base.String Types.CBaseType
    | Object GHC.Base.String
    | String Types.CBaseType
    | ArrayInt Types.CBaseType
    | ArrayIntPtr Types.CBaseType
    | ArrayString Types.CBaseType
    | ArrayObject GHC.Base.String Types.CBaseType
    | Bool
    | Point Types.CBaseType
    | Size Types.CBaseType
    | Vector Types.CBaseType
    | Rect Types.CBaseType
    | RefObject GHC.Base.String
    | Fun GHC.Base.String
    | ColorRGB Types.CBaseType
ad4af087b0f52a65626a9f588341b4c0
  argName :: Types.Arg -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Types.Arg) ->
                 case w of ww { Types.Arg ww1 ww2 -> Types.argName_go ww1 }) -}
3861850a9b816bf879dab71536425c69
  argName_go :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
ff715ba41a9335d128079064fa01ee52
  argNames :: Types.Arg -> [GHC.Base.String]
  RecSel Left Types.Arg
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Arg) ->
                 case ds of wild { Types.Arg ds1 ds2 -> ds1 }) -}
ff715ba41a9335d128079064fa01ee52
  argType :: Types.Arg -> Types.Type
  RecSel Left Types.Arg
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Arg) ->
                 case ds of wild { Types.Arg ds1 ds2 -> ds2 }) -}
1f188493d3231a54e0126f669d608b03
  declArgs :: Types.Decl -> [Types.Arg]
  RecSel Left Types.Decl
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Decl) ->
                 case ds of wild { Types.Decl ds1 ds2 ds3 ds4 -> ds3 }) -}
1f188493d3231a54e0126f669d608b03
  declComment :: Types.Decl -> GHC.Base.String
  RecSel Left Types.Decl
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Decl) ->
                 case ds of wild { Types.Decl ds1 ds2 ds3 ds4 -> ds4 }) -}
1f188493d3231a54e0126f669d608b03
  declName :: Types.Decl -> GHC.Base.String
  RecSel Left Types.Decl
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Decl) ->
                 case ds of wild { Types.Decl ds1 ds2 ds3 ds4 -> ds1 }) -}
1f188493d3231a54e0126f669d608b03
  declRet :: Types.Decl -> Types.Type
  RecSel Left Types.Decl
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Decl) ->
                 case ds of wild { Types.Decl ds1 ds2 ds3 ds4 -> ds2 }) -}
c9540cbc683f81aa64716bdbb30d7037
  defName :: Types.Def -> GHC.Base.String
  RecSel Left Types.Def
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Def) ->
                 case ds of wild { Types.Def ds1 ds2 ds3 -> ds1 }) -}
c9540cbc683f81aa64716bdbb30d7037
  defType :: Types.Def -> Types.DefType
  RecSel Left Types.Def
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Def) ->
                 case ds of wild { Types.Def ds1 ds2 ds3 -> ds3 }) -}
c9540cbc683f81aa64716bdbb30d7037
  defValue :: Types.Def -> GHC.Types.Int
  RecSel Left Types.Def
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Types.Def) ->
                 case ds of wild { Types.Def ds1 ds2 ds3 -> ds2 }) -}
1a0c630dcbe4abfa6b090540fea9eb67
  errorMsg :: [GHC.Types.Char] -> t
  {- Arity: 1, Strictness: <B,U>x -}
c9d7076a853eb300979f1f9c2c388c11
  errorMsgDecl :: Types.Decl -> [GHC.Types.Char] -> t
  {- Arity: 2, Strictness: <B,1*U(U,1*U,1*U,1*U)><B,1*U>x,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ t (w :: Types.Decl) (w1 :: [GHC.Types.Char]) ->
                 case w of ww { Types.Decl ww1 ww2 ww3 ww4 ->
                 Types.$werrorMsgDecl @ t ww1 ww2 ww3 ww4 w1 }) -}
fd863916eea291868447c23d9d4ff63d
  trace :: GHC.Base.String -> t -> t
  {- Arity: 2, Strictness: <L,1*U><L,1*U>,
     Unfolding: (\ @ t (s :: GHC.Base.String) (x :: t) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.noDuplicate#
                                @ GHC.Prim.RealWorld
                                s1 of s' { DEFAULT ->
                         GHC.IO.Handle.Text.hPutStr2
                           GHC.IO.Handle.FD.stdout
                           s
                           GHC.Types.True
                           s' }) of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { () -> x } }) -}
8b09499c163db23c135bba43b173af7c
  traceError :: [GHC.Types.Char] -> Types.Decl -> t -> t
  {- Arity: 3, Strictness: <L,1*U><L,1*U(1*U,A,A,A)><L,1*U>,
     Unfolding: (\ @ t
                   (msg :: [GHC.Types.Char])
                   (decl :: Types.Decl)
                   (x :: t) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.noDuplicate#
                                @ GHC.Prim.RealWorld
                                s of s' { DEFAULT ->
                         GHC.IO.Handle.Text.hPutStr2
                           GHC.IO.Handle.FD.stdout
                           (GHC.CString.unpackAppendCString#
                              Types.traceError3
                              (GHC.CString.unpackAppendCString#
                                 Types.traceError2
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    msg
                                    (GHC.CString.unpackAppendCString#
                                       Types.traceError1
                                       (case decl of wild { Types.Decl ds ds1 ds2 ds3 -> ds })))))
                           GHC.Types.True
                           s' }) of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { () -> x } }) -}
0a93a4aba9f87dffa326ea500277f898
  traceError1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (": "#) -}
b822774a13ba70522c9bbaa723664592
  traceError2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("error : "#) -}
e8dc81c5f34d8c83027312b05925acc8
  traceError3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("****************************************************\n"#) -}
e814e42e9a5a54386b3e8e4cad91fb95
  traceIgnore :: [GHC.Types.Char] -> Types.Decl -> t -> t
  {- Arity: 3, Strictness: <L,U><L,1*U(1*U,A,A,A)><L,1*U>,
     Unfolding: (\ @ t
                   (msg :: [GHC.Types.Char])
                   (decl :: Types.Decl)
                   (x :: t) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.noDuplicate#
                                @ GHC.Prim.RealWorld
                                s of s' { DEFAULT ->
                         GHC.IO.Handle.Text.hPutStr2
                           GHC.IO.Handle.FD.stdout
                           (GHC.CString.unpackAppendCString#
                              Types.traceIgnore2
                              (case GHC.List.$wlenAcc @ GHC.Types.Char msg 0# of ww2 { DEFAULT ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>=# ww2 12#) of wild {
                                 GHC.Types.False
                                 -> GHC.Base.++
                                      @ GHC.Types.Char
                                      msg
                                      (let {
                                         y :: GHC.Prim.Int# = GHC.Prim.-# 12# ww2
                                       } in
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.<# 0# y) of wild1 {
                                         GHC.Types.False
                                         -> GHC.CString.unpackAppendCString#
                                              Types.traceError1
                                              (case decl of wild2 { Types.Decl ds ds1 ds2 ds3 ->
                                               ds })
                                         GHC.Types.True
                                         -> let {
                                              n :: [GHC.Types.Char]
                                              = GHC.CString.unpackAppendCString#
                                                  Types.traceError1
                                                  (case decl of wild2 { Types.Decl ds ds1 ds2 ds3 ->
                                                   ds })
                                            } in
                                            let {
                                              lvl45 :: [GHC.Types.Char]
                                              = GHC.Types.: @ GHC.Types.Char Types.traceIgnore1 n
                                            } in
                                            letrec {
                                              $wxs :: GHC.Prim.Int# -> [GHC.Types.Char]
                                                {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
                                              = \ (ww :: GHC.Prim.Int#) ->
                                                case ww of ds1 {
                                                  DEFAULT
                                                  -> GHC.Types.:
                                                       @ GHC.Types.Char
                                                       Types.traceIgnore1
                                                       ($wxs (GHC.Prim.-# ds1 1#))
                                                  1# -> lvl45 }
                                            } in
                                            $wxs y })
                                 GHC.Types.True
                                 -> GHC.Base.++
                                      @ GHC.Types.Char
                                      msg
                                      (GHC.CString.unpackAppendCString#
                                         Types.traceError1
                                         (case decl of wild1 { Types.Decl ds ds1 ds2 ds3 ->
                                          ds })) } }))
                           GHC.Types.True
                           s' }) of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { () -> x } }) -}
7cbf4cd4beb7c9933149fabd4bc349bb
  traceIgnore1 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ' '#) -}
fa63077fb679427dedb689b7e68454e5
  traceIgnore2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ignore: "#) -}
53c269b84e6dbe860ad173cbc76d0300
  traceWarning :: [GHC.Types.Char] -> Types.Decl -> t -> t
  {- Arity: 3, Strictness: <L,1*U><L,1*U(1*U,A,A,A)><L,1*U>,
     Unfolding: (\ @ t
                   (msg :: [GHC.Types.Char])
                   (decl :: Types.Decl)
                   (x :: t) ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                        (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.noDuplicate#
                                @ GHC.Prim.RealWorld
                                s of s' { DEFAULT ->
                         GHC.IO.Handle.Text.hPutStr2
                           GHC.IO.Handle.FD.stdout
                           (GHC.CString.unpackAppendCString#
                              Types.traceError3
                              (GHC.CString.unpackAppendCString#
                                 Types.traceWarning1
                                 (GHC.Base.++
                                    @ GHC.Types.Char
                                    msg
                                    (GHC.CString.unpackAppendCString#
                                       Types.traceError1
                                       (case decl of wild { Types.Decl ds ds1 ds2 ds3 -> ds })))))
                           GHC.Types.True
                           s' }) of ds { (#,#) ipv ipv1 ->
                 case ipv1 of wild { () -> x } }) -}
b3a68d2343556d00158d7d2698950f64
  traceWarning1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("warning : "#) -}
instance GHC.Classes.Eq [Types.CBaseType] = Types.$fEqCBaseType
instance GHC.Classes.Eq [Types.Strategy] = Types.$fEqStrategy
instance GHC.Classes.Eq [Types.Type] = Types.$fEqType
instance GHC.Show.Show [Types.Arg] = Types.$fShowArg
instance GHC.Show.Show [Types.CBaseType] = Types.$fShowCBaseType
instance GHC.Show.Show [Types.Decl] = Types.$fShowDecl
instance GHC.Show.Show [Types.Def] = Types.$fShowDef
instance GHC.Show.Show [Types.DefType] = Types.$fShowDefType
instance GHC.Show.Show [Types.Strategy] = Types.$fShowStrategy
instance GHC.Show.Show [Types.Type] = Types.$fShowType
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

