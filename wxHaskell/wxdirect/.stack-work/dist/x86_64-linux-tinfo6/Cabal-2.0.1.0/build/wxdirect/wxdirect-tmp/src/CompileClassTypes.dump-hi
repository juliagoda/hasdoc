
==================== FINAL INTERFACE ====================
2019-03-12 05:26:28.74594034 UTC

interface main:CompileClassTypes 8022
  interface hash: 55ffd10a47ee278b68e58d29b93adfb8
  ABI hash: e0cd3dfe64a22fa509d16b4371eec19b
  export-list hash: ab87efd18352bfb0fbc64fa3061f7bab
  orphan hash: 8e4d5571ebcca8efb81f6a647dc00c01
  flag hash: 7b41f4c34acbabee58f1204dde4baf28
  sig of: Nothing
  used TH splices: False
  where
exports:
  CompileClassTypes.compileClassTypes
module dependencies: Classes DeriveTypes HaskellNames IOExtra
                     ParseC Types
package dependencies: array-0.5.2.0 base-4.10.1.0 binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0 mtl-2.2.2 parsec-3.1.13.0
                      process-1.4.3.0 strict-0.3.2 text-1.2.3.1 transformers-0.5.2.0
                      unix-2.7.2.2
orphans: text-1.2.3.1:Data.Text.Lazy text-1.2.3.1:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show
         transformers-0.5.2.0:Control.Monad.Trans.Error
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Data.OldList 555420b092ca8cf0a8f9666bc0e07dcf
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.IO e261d8b68ccf81a359626fa520b57d1d
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 6e5bb580370d8d71dc5888f723cea4b4
import  -/  containers-0.5.11.0:Data.Map b8016412c0c9d02a223b61b88cbed323
import  -/  containers-0.5.11.0:Data.Map.Internal faa2fa6113327afc683adbf414b6042d
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  Classes 066ef4de8df5a8a4a0e734d7381f059e
  exports: 83c87d4726fdb7b54ac491b4af7589a6
  haskellClassDefs 3a5ead19f4bf5c82370611b084d16827
import  -/  DeriveTypes ec161f01563813e0609d80aca7567e4c
  exports: 11101adde31822c19e3035393cfe0295
  ClassName b5bd43dc3c674cc3bb561cd4403d4e6b
import  -/  HaskellNames 2aeff701ad26fc4f92c5cb2c30c510e3
  exports: 785fe048c21ede4738198716d8bb3725
  getPrologue 28607b58d9a0f56723716f90b575c4ce
import  -/  IOExtra a49661dcd5e4450c5fc428426774e486
  exports: b37c1d5f6b6852a66107e04cbbb02e01
  writeFileLazy 7d6c7b8c538822bfa5ec52cbd757eaf5
6fe1d68422f52b331b23942b20f37a7f
  $sfromListWithKey ::
    (DeriveTypes.ClassName -> a -> a -> a)
    -> [(DeriveTypes.ClassName, a)]
    -> Data.Map.Internal.Map DeriveTypes.ClassName a
  {- Arity: 2, Strictness: <L,C(C1(C1(U)))><S,1*U>,
     Unfolding: (\ @ a
                   (f :: DeriveTypes.ClassName -> a -> a -> a)
                   (xs :: [(DeriveTypes.ClassName, a)]) ->
                 letrec {
                   go13 :: Data.Map.Internal.Map DeriveTypes.ClassName a
                           -> [(DeriveTypes.ClassName, a)]
                           -> Data.Map.Internal.Map DeriveTypes.ClassName a
                     <join 2> {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                   = \ (z :: Data.Map.Internal.Map DeriveTypes.ClassName a)
                       (ds :: [(DeriveTypes.ClassName, a)]) ->
                     case ds of wild {
                       [] -> z
                       : x1 xs1
                       -> case x1 of wild1 { (,) k1 x2 ->
                          case CompileClassTypes.$sfromListWithKey_$sgo13
                                 @ a
                                 f
                                 k1
                                 x2
                                 z of z' { DEFAULT ->
                          go13 z' xs1 } } }
                 } in
                 go13 (Data.Map.Internal.Tip @ DeriveTypes.ClassName @ a) xs) -}
82ca58220c0cdeaf8e8fb9285d71adfc
  $sfromListWithKey_$sgo13 ::
    (DeriveTypes.ClassName -> a1 -> a1 -> a1)
    -> DeriveTypes.ClassName
    -> a1
    -> Data.Map.Internal.Map DeriveTypes.ClassName a1
    -> Data.Map.Internal.Map DeriveTypes.ClassName a1
  {- Arity: 4, Strictness: <L,1*C1(C1(C1(U)))><S,1*U><L,U><S,1*U> -}
0c8c791a178defa9ed9946d001e25f14
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   CompileClassTypes.$trModule3
                   CompileClassTypes.$trModule1) -}
cecfc96f62815748db42d7bafe2b2d8c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS CompileClassTypes.$trModule2) -}
bf77cc5b25d7b1f096ff77e031bef247
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CompileClassTypes"#) -}
664a59d36558453876137093bfe7f3da
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS CompileClassTypes.$trModule4) -}
60cf2e3931ce19f89264d5009dee960a
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
488be16a19071b4aa2248b2457a43849
  $wcompileClassTypes ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.IO.FilePath
    -> [GHC.IO.FilePath]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,1*U><S,U>,
     Inline: [0] -}
5779c89f1b25731faa3f1edca3e3d51d
  compileClassTypes ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.IO.FilePath
    -> [GHC.IO.FilePath]
    -> GHC.Types.IO ()
  {- Arity: 6, Strictness: <L,A><L,U><L,U><L,U><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                CompileClassTypes.compileClassTypes1
                  `cast`
                (<GHC.Types.Bool>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.IO.FilePath>_R
                 ->_R <[GHC.IO.FilePath]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
3196fa08482a3fe51192d4413889cee8
  compileClassTypes1 ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.IO.FilePath
    -> [GHC.IO.FilePath]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6, Strictness: <L,A><L,U><L,U><L,U><L,1*U><S,U>,
     Inline: [0],
     Unfolding: InlineRule (6, True, True)
                (\ (w :: GHC.Types.Bool)
                   (w1 :: GHC.Base.String)
                   (w2 :: GHC.Base.String)
                   (w3 :: GHC.IO.FilePath)
                   (w4 :: [GHC.IO.FilePath])
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 CompileClassTypes.$wcompileClassTypes w1 w2 w3 w4 w5) -}
"SPEC/CompileClassTypes fromListWithKey @ ClassName _" [orphan] forall @ a
                                                                       ($dOrd :: GHC.Classes.Ord
                                                                                   DeriveTypes.ClassName)
  Data.Map.Internal.fromListWithKey @ [GHC.Types.Char] @ a $dOrd
  = CompileClassTypes.$sfromListWithKey @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

