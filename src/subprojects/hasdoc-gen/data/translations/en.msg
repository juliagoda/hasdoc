IntroductionTitle: Introduction
TestsTitle: Tests
TechnologyTitle: Technology
ReqTitle: Requirements
DefinitionTitle: Definitions
ArchTitle: Architecture
FinishTitle: Finish


IntroductionDesc: The wizard consists of several pages: Definition and Introduction, Requirements, Architecture, Technology, Tests, Finishing. On each page there is a series of auxiliary questions and columns waiting for the introduction of content. They do not need to be filled in if there is no need to do so. However, it is worthwhile at least in a few words to explain why they are unnecessary. If you have any questions or doubts, you can move your mouse over any heading to get a hint to understand the question. Cancelling or closing the window does not involve any loss of data entered. In addition, you can save this state in the Menu and then load it the next time you start up.



DefQuestion1: Identify the problem that the system under construction should solve
DefQuestion2: Can you describe the basic steps the program has to take to solve the problem? Present a simplified version of heuristics
DefQuestion3: Does the creation of your program require special permissions?
DefQuestion4: In which fields of science will knowledge be required to prepare functionalities? Which departments will be taken into account?
DefQuestion5: Who will be the target customer?
DefQuestion6: To which physical equipment should the program be limited so that it makes sense?
DefQuestion7: Will the program vary according to the target customers? Countries of the world? Continents? How?
DefQuestion8: Are you considering backward compatibility? Why?
DefQuestion9: Is the program or part of it in opposition to the law in the country where you live? Why?
DefQuestion10: What risks associated with the operation and use of the program could occur in the future? Describe initially

DefHint1: It is about presenting the mission of the product for what purpose it is created. The description should include the problem itself without a solution.
DefHint2: For example, this can be done in the form of a story. Imagine that the program exists and contains the most important functionalities
DefHint3: For example, can there be situations in the future when someone brings an action for copyright infringement?
DefHint4: Examples of scientific disciplines are, for example, biological sciences, musical arts, physical sciences. However, it is worth mentioning their departments, because almost certainly the knowledge of the whole field is redundant.
DefHint5: Who will mainly use the program?
DefHint6: For which devices will the program be supported?
DefHint7: Can the default program style and content be a hindrance for people from other countries?
DefHint8: Will the data stored in e.g. a database or a cloud be read by every previous version of the program?
DefHint9: Can any reference, content, graphics, code in the program that are found in the program cause legal problems?
DefHint10: Can there be any specific types of threats to the operation of the program, protection of personal data, copyright, etc.? Is there a risk of unauthorized access? Cyber-breaking? Data changes?


ReqQuestion1: Describe all system inputs - data sources, accuracy, range of values and frequencies
ReqQuestion2: Describe all system outputs - data destinations, accuracy, range of values, frequency and format
ReqQuestion3: Describe all output formats of web pages, reports, etc.
ReqQuestion4: Describe all external hardware and software interfaces
ReqQuestion5: Describe all external communication interfaces, including the way communication is established, error control methods and communication protocols
ReqQuestion6: Describe all the functions that the user expects
ReqQuestion7: List all critical requirements without which the application does not make sense
ReqQuestion8: Does each functionality have any market value? Does their existence increase the value of the product? Why? For each of them you can give at least one reason.
ReqQuestion9: Describe the data used by each function and its output data
ReqQuestion10: Will the program allow the user to intervene? If so, what will be the response time for each single operation?
ReqQuestion11: What time is acceptable for the program in case of such operations as data processing, data transfer rate, etc.?
ReqQuestion12: Describe the level of safety and methods to deal with possible future threats
ReqQuestion13: What is the minimum computer memory and disk space required to create and run the program?
ReqQuestion14: Can you provide a definition of an unsuccessful current project?
ReqQuestion15: Were the requirements written in a language that is understood by the end user and all those working on the project? Has this been confirmed?
ReqQuestion16: Are you able to anticipate changes in the requirements that may occur? What changes may change? How likely is it that the user will ask for modifications?
ReqQuestion17: Are the requirements contradictory? If so, which ones? Why?
ReqQuestion18: Do the requirements seem reasonable and possible to implement? Why?

ReqHint1: Where and whether data will be downloaded to the program? What data format will have to be used? How often will this data be loaded? What types of values will be inside?
ReqHint2: Where will the data generated from the program be saved? In what format will the data be saved? How often? What types of data will be stored there? In what ranges from to?
ReqHint3: Apart from multimedia files, will the program have its own website? Will it read and generate other files? What additional formats will be taken into account?
ReqHint4: What hardware and software will the program communicate with?
ReqHint5: provided that you are connected to the Internet
ReqHint6: Have all the requirements listed by the user/principal been noticed and taken into account?
ReqHint7: e.g. creating a class of a car without information about wheels or engine makes the object stop being a car by definition.
ReqHint8: Does each of the included functionalities cause the value of the application to increase to some degree? 
ReqHint9: What is the task of each function and what should it return?
ReqHint10: Will there be any direct interaction between the program and the user? In the form of gestures, voice, command line, movement or mouse click? How long will the program expect a reaction from the user in each case?
ReqHint11: another example may be the response time of the server, the database
ReqHint12: any threats that may affect the operation of the program, data theft, deletion of data, unauthorized monitoring of program operation.
ReqHint13: How much memory must be reserved in order for the program to be used at the basic level?
ReqHint14: How would the programme work the other way round?
ReqHint15: Does the list contain incomprehensible phrases or words? Does it contain too much industry jargon and specialist words that users/customers do not understand?
ReqHint16: Are you able to anticipate changes in the requirements that may occur? What changes may change? How likely is it that the user will ask for modifications?
ReqHint17: The objectives of the separate requirements may have the opposite effect, which will have different effects on the final result.
ReqHint18: For example, does it not exceed the budget and competences of the employees?


ArchQuestion1: Present the organisation of the project. What elements and where will they be located?
ArchQuestion2: Present and describe the basic classes/modules of the project. Will the program be so large that it will contain subsystems? How will they be distributed?
ArchQuestion3: If a decision has already been made about the techniques used, the type of data containers, explain why this choice has been made?
ArchQuestion4: What classes/modules should have access to each other? Should there be full access, or rather partial access? Why?
ArchQuestion5: Have you previously selected how to store your data? If so, why did you make a specific choice?
ArchQuestion6: Are there any business rules in the company that have to be taken into account in the project? Which ones?
ArchQuestion7: Describe the user interface if it exists and was not described in the requirements.
ArchQuestion8: How will resource management look like - database, files, graphics, etc.?
ArchQuestion9: Does it make sense to take into account minimum parameters for the created project apart from memory? If so, what are the parameters?
ArchQuestion10: Is there a risk of increasing the number of users, resources, etc.? If so, how will these problems be solved?
ArchQuestion11: Will the program exchange data with other software? How will it be implemented?
ArchQuestion12: In which language will the content of the programme be introduced? In your native language or a foreign language? Will the programme support multiple languages? Why?
ArchQuestion13: At what level will input-output errors be detected: fields, record, file, streams, etc.?
ArchQuestion14: Will the program attempt to correct errors? Will it only report the problem to the user and close the program?
ArchQuestion15: Will the program check the correctness of the entered data? In which places?
ArchQuestion16: Do the requirements seem reasonable and possible to implement? Why?
ArchQuestion17: How will the program propagate errors to the user?
ArchQuestion18: When and if the code will report exceptions? How will they be captured, recorded, documented?
ArchQuestion19: Error handling will take place at the detection site, in a separate class/module specially designed for this class/module or in another way?
ArchQuestion20: Will you use a ready-made library to handle errors or will you build your own? Why?
ArchQuestion21: Which places in the code will require more attention during construction than others due to errors, and where simple solutions will suffice?
ArchQuestion22: What elements for application production will be bought, downloaded, and which will be created? Are there any plans to use all or part of some existing software? Why?
ArchQuestion23: Where can we expect further expansion or change in the future? How will the development opportunity be implemented? How will this be facilitated?
ArchQuestion24: Is it a program created individually or in a team/teams? How will tasks be distributed, combined solutions and what teams will be needed to create the application?

ArchHint1: Which paths will contain documentation, source files, graphics, configuration files, etc.? How will the breakdown of classes/modules in directories look more or less like?
ArchHint2: What will each class/module be responsible for? What will be their main role?
ArchHint3: Why, for example, did you choose between a list, table, queue, map or hash? Do you know which programming techniques specific to the programming language/paradigm will be used? Why?
ArchHint4: Which of the created code structures will contain references to all methods/variables/etc. To some? To none?
ArchHint5: Is there a need to store any of the data outside the application? In the system? On the server?
ArchHint6: Are there any rules in the company/some other place that must also be observed during the development of the application?
ArchHint7: What kind of interface will it be? Graphic? Text? With command line? Voice? Gesthetic? Combined? What will it look like, how will it work?
ArchHint8: Where will graphics, configuration files, etc. be used in the application? How will data be uploaded to the application? How will they be modified? How will they be saved?
ArchHint9: Will the application be closely related to the handling and processing of multimedia files, 3D games, etc.? If so, what are the minimum system requirements for the operation of the program?
ArchHint10: e.g. rapid growth of users on the website, large number of people registered in the database, etc.?
ArchHint11: e.g. some programs can exchange configuration files, game status records, directly transfer values via a bridge, etc.
ArchHint12: Is it worth considering internationalisation for the application?
ArchHint13: When will errors be detected? At what stage? Will they be monitored in detail?
ArchHint14: Error detection can therefore be characterized by detection or repair, or even a combination of both
ArchHint15: These are situations which are based on direct interaction with users - clicking the mouse, keyboard button, etc.
ArchHint16: Will the estimated time of functionality implementation not take too much time? Will the company's budget, access to equipment not be too limited for each of the requirements? Are any materials related to functionality implementation easily accessible and understandable for the team?
ArchHint17: How will the program react in case of errors? What steps will it take?
ArchHint18: Do you anticipate unexpected situations? Are you going to use the code on the basis of "try ... catch"?
ArchHint19: Error handling will take place at the detection site, in a separate class/module specially designed for this class/module or in another way?
ArchHint20: Will you use a ready-made library to handle errors or will you build your own? Why?
ArchHint21: Which places in the code will require more attention during construction than others due to errors, and where simple solutions will suffice? 
ArchHint22: Are there any paid libraries, editors, other types of software that will be useful in the project? Is there a similar program that could be used as a model?
ArchHint23: Which areas of the programme can be extended with more components in the future? Will adding them require complicated steps?
ArchHint24: depending on whether it is made up of a private person or a company


TechQuestion1: Which programming languages do you select for the program design? In which versions? Why?
TechQuestion2: What other programming languages have been considered? Why were they not finally accepted?
TechQuestion3: Are the selected programming language(s) able to meet all requirements without any problems?
TechQuestion4: Will the program take advantage of any features of the programming paradigm of the selected language? What are these features?
TechQuestion5: With which editor will the program be designed? Will it be an IDE or notepad? Another way? Why?
TechQuestion6: What technology will you use to store and read data? What is its name? Why was this choice made?
TechQuestion7: How many computer workstations may be needed to create a product?
TechQuestion8: How many persons/teams will be needed to complete the program?
TechQuestion9:What and whether the version control system will be used?
TechQuestion10: What compiler will be used during work?
TechQuestion11: On which operating system(s) will the code be created? Why?
TechQuestion12: Will the code refactorization tool be implemented? Which ones?
TechQuestion13: What debugger will be used? Why?
TechQuestion14: What physical equipment will be used. Does the size of their parameters matter? If so, how do they look like?
TechQuestion15: Will graphics be designed for the application? If yes, in which programs?
TechQuestion16: Will system virtualization be taken into account? If so, what is the name of the application? Why was this choice made? Which systems will be virtualized?
TechQuestion17: Will the programme be used for documentation of the programme and what programme will be used? Justify your choice
TechQuestion18: Are there any other programs that will be used? What are these programs?
TechQuestion19: Which libraries will be used in the project? Why?
TechQuestion20: Is the choice of each technology up to date? Is there a high risk that any of them will soon become obsolete and undeveloped?
TechQuestion21: Is the documentation of the selected programming language, libraries and support programs understandable for programmers?
TechQuestion22: Will creating code in the style characteristic for the chosen language be a problem for programmers?
TechQuestion23: What design patterns will be used when creating the code? Why are they?
TechQuestion24: What methodology will be used by programmers while working on the project? Justify your choice
TechQuestion25: What will be the configuration of the system and programs previously included in the project?

TechHint1: Which programming languages do you select for the program design? In which versions? Why?
TechHint2: Are there any specific reasons?
TechHint3: Will any library, documentation or module that exists for a given language make it easier to achieve the objectives?
TechHint4: If it is a multi-paradigmatic language (hybrid), what features will the programme use?
TechHint5: With which editor will the program be designed? Will it be an IDE or notepad? Another way? Why?
TechHint6: External program
TechHint7: How many computer workstations may be needed to create a product?
TechHint8: How many persons/teams will be needed to complete the programme?
TechHint9: Git? Mercurial? Bazaar? BitKeeper? Perforce? Other? With GUI or with the help of a console?
TechHint10: What compiler will be used during work?
TechHint11: On which operating system(s) will the code be created? Why?
TechHint12: Will the code refactorization tool be implemented? Which ones?
TechHint13: What debugger will be used? Why?
TechHint14: parameters can be of particular importance when the program concerns graphics, three-dimensional modeling, film materials, etc.
TechHint15: With the help of a system graphics program? Internet application? Others?
TechHint16: Will system virtualization be taken into account? If so, what is the name of the application? Why was this choice made? Which systems will be virtualized?
TechHint17: Documentation of use of the program for end users, technical documentation for developers
TechHint18: Other types of applications that were not mentioned earlier and their names, e.g. musical, astronomical, etc.
TechHint19: libraries designed for selected programming languages
TechHint20: Is the choice of each technology up to date? Is there a high risk that any of them will soon become obsolete and undeveloped?
TechHint21: if the documentation is seriously deficient, does the team have sufficient knowledge to meet expectations?
TechHint22: due to the habits, it happens that programmers try to introduce ways of solving problems, characteristic for another programming language. Conventions of code writing may differ significantly between languages.
TechHint23: examples of such patterns are: Mediator, Facade, Composite, Adapter, Singleton, Prototype and many others
TechHint24: The Agile Methodology group includes such methods as Scrum, Kanban, XP, Lean, DSDM, FBB, Crystal ...
TechHint25: What network and system configurations are necessary to work on the project?


TestQuestion1: Will programmers prepare tests before working with the right code? Why?
TestQuestion2: Will programmers write unit tests on their own? Why?
TestQuestion3: Will the analysis of code operation precede attaching the code to the repository?
TestQuestion4: Will integration tests be performed before adding code to the repository?
TestQuestion5: Will programmers browse each other's code?
TestQuestion6: What will be the tests for each point of the requirements specification?
TestQuestion7: Will the facilitation of manual checking of the results of the program's work be taken into account?
TestQuestion8: What tests will be carried out for the minimum configuration of the program?
TestQuestion9: What tests will be carried out for the maximum configuration of the program?
TestQuestion10: Will the program be tested for compatibility with older devices, operating systems and interfaces? Do you know for which specific purposes?
TestQuestion11: Will the tests take into account typical values?
TestQuestion12: Will the design of the tests take into account the 'corner cases' type of tests?
TestQuestion13: Will the following limits be checked and defined: largest, smallest and shifted by one?
TestQuestion14: Will at least some of the tests be modelled on the older ones for typical situations from the past, or will all of them be created from scratch?

TestHint1: already knowing the list of requirements and source code organization
TestHint2: Will programmers write unit tests on their own? Why?
TestHint3: Before submitting changes to the new functionality, will the programmers in any way check their correctness?
TestHint4: Will programmers in any way check the correctness of interactions with other program structures before submitting changes?
TestHint5: Will programmers browse each other's code?
TestHint6: Individual tests can be listed for each method/variable/class
TestHint7: Will the facilitation of manual checking of the results of the program's work be taken into account?
TestHint8: minimum number of changes
TestHint9: maximum number of changes
TestHint10: Will the program be tested for compatibility with older devices, operating systems and interfaces? Do you know for which specific purposes?
TestHint11: Such typical values are e.g. integers, Boolean values, text values, etc.
TestHint12: Will different arguments be artificially introduced during the tests for analysis?
TestHint13: in the form of methods arguments
TestHint14: the idea for a specific test will be modeled on the basis of another application or not?


FinishDesc: You can check the correctness of the entered data by pressing the "Check data" button or you can go straight to generating files and displaying a pdf file by pressing the "Generate file" button.
ProjectName: Give a title for your project: 
GenerationAction: Generate file
GenerationHint: Launches the following sequence: testing the entered data, generating a file, previewing the data.
CheckAction: Check data
CheckHint: Launches the tests of the entered data from the entire wizard.
ChoosePathProject: Select a folder to generate files
WarningProject: warning
WaningProjectName: The title of the project was not given
SuccessCheckProject: success
SuccessCheckProjectMsg: The conditions for entering the data have been met
SuccessGenProjectMsg: Generation of files has been completed
ProjectNameConsole: The title of the project is 
WarningProjectEmpty: no field has been filled in
NoHTMLParsedTags: The html file does not contain the correct structure for the current application


PathExeError: The given path does not apply to the executable program
ClosedAppSuccess: The application has been properly closed
ClosedAppError: An error occurred when closing the application no. 


CreatedPdfError: An error occurred while creating the Pdf file
PdfviewerNone: Off


LoadState: Load of state
LoadStateResult: The state was successfully loaded from the selected file
